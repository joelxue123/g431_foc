ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB339:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  21:Src/main.c    **** #include "main.h"
  22:Src/main.c    **** #include "global.h"
  23:Src/main.c    **** #include "limit_pos_detection.h"
  24:Src/main.c    **** #include "cmsis_os.h"
  25:Src/main.c    **** #include "sensorless.h"
  26:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  27:Src/main.c    **** /* USER CODE BEGIN Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* USER CODE END Includes */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 2


  32:Src/main.c    **** /* USER CODE BEGIN PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* USER CODE END PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PD */
  38:Src/main.c    **** /* USER CODE END PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  46:Src/main.c    **** 
  47:Src/main.c    **** 
  48:Src/main.c    **** osThreadId defaultTaskHandle;
  49:Src/main.c    **** 
  50:Src/main.c    **** 
  51:Src/main.c    **** void StartDefaultTask(void const * argument);
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** static void MX_GPIO_Init(void);
  60:Src/main.c    ****  void MX_ADC1_Init(void);
  61:Src/main.c    ****  void MX_ADC2_Init(void);
  62:Src/main.c    ****  void MX_TIM1_Init(void);
  63:Src/main.c    ****  void MX_USART1_UART_Init(void);
  64:Src/main.c    ****  void MX_TIM2_Init(void);
  65:Src/main.c    **** static void MX_DMA_Init(void);
  66:Src/main.c    **** /* USER CODE BEGIN PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PFP */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  71:Src/main.c    **** /* USER CODE BEGIN 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** /**
  76:Src/main.c    ****   * @brief  The application entry point.
  77:Src/main.c    ****   * @retval int
  78:Src/main.c    ****   */
  79:Src/main.c    **** 
  80:Src/main.c    **** static int32_t s_Count_Rec = 0;
  81:Src/main.c    **** static uint16_t buf[32];
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  84:Src/main.c    **** 	volatile int i = 0;
  85:Src/main.c    ****   /* USER CODE BEGIN 1 */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END 1 */
  88:Src/main.c    **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 3


  89:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  92:Src/main.c    ****   HAL_Init();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN Init */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END Init */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Configure the system clock */
  99:Src/main.c    ****   SystemClock_Config();
 100:Src/main.c    **** 	NVIC_Configuration();
 101:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 102:Src/main.c    **** 	Flash_Init();    
 103:Src/main.c    ****   /* USER CODE END SysInit */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Initialize all configured peripherals */
 106:Src/main.c    ****   MX_GPIO_Init();
 107:Src/main.c    **** 	LED_Init();
 108:Src/main.c    ****   init_motor(&motor_);
 109:Src/main.c    ****   MX_DMA_Init();
 110:Src/main.c    ****   MX_ADC1_Init();
 111:Src/main.c    ****   MX_ADC2_Init();
 112:Src/main.c    **** //	hall_Configuration();
 113:Src/main.c    ****   PWM_Init();
 114:Src/main.c    **** 	if (!CurrentDemarcate())   
 115:Src/main.c    **** 	{
 116:Src/main.c    **** 		g_CmdMap[CMD_ERROR] |=  ERROR_MASK_CURRENT_CLIB_FAULT;
 117:Src/main.c    **** 	}
 118:Src/main.c    **** 
 119:Src/main.c    ****   MX_USART1_UART_Init();
 120:Src/main.c    **** //	UnityPrint("start uart\n");
 121:Src/main.c    **** 	work_var_updata();
 122:Src/main.c    ****   /* USER CODE BEGIN 2 */
 123:Src/main.c    **** 	
 124:Src/main.c    **** 	//MX_SPI3_Init();
 125:Src/main.c    **** 	//MX_SPI1_Init();
 126:Src/main.c    **** 	
 127:Src/main.c    ****   /* USER CODE END 2 */
 128:Src/main.c    **** 	g_CmdMap[SYS_MU_COMM_TO_PC] = 0;
 129:Src/main.c    ****   /* Infinite loop */
 130:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 131:Src/main.c    ****  // osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256);
 132:Src/main.c    ****   //defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 135:Src/main.c    ****   /* add threads, ... */
 136:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* Start scheduler */
 139:Src/main.c    ****  // osKernelStart();
 140:Src/main.c    **** 
 141:Src/main.c    ****   while (1)
 142:Src/main.c    ****   {
 143:Src/main.c    **** 	//	HAL_UART_Transmit_DMA(&huart1,uart1_dma_tx_arry,12);
 144:Src/main.c    **** 	//	HAL_ADC_Start(&hadc1);HAL_ADC_Start(&hadc2);
 145:Src/main.c    ****     /* USER CODE END WHILE */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 4


 146:Src/main.c    ****     		if (g_CmdMap[CMD_RESTORE] == 1)
 147:Src/main.c    **** 		{
 148:Src/main.c    **** 			g_CmdMap[CMD_RESTORE] = 0;
 149:Src/main.c    **** 			 memcpy((void*)(&g_CmdMap[CMD_ID]), (void*)(&g_UserCmdMap_Default[0][CMD_ID]), ((27)<<1));		
 150:Src/main.c    **** 			Flash_SaveUserCmdmap();
 151:Src/main.c    **** 			
 152:Src/main.c    **** 		}
 153:Src/main.c    **** 		//g_CmdMap[TAG_MOTOR_ENABLE] = 1;
 154:Src/main.c    **** 		if (g_CmdMap[CMD_SAVE] == 1) // �Ƿ񱣴��ڴ���Ʊ�
 155:Src/main.c    **** 		{
 156:Src/main.c    **** 			g_CmdMap[CMD_SAVE] = 0;
 157:Src/main.c    **** 
 158:Src/main.c    **** 			Flash_SaveUserCmdmap();
 159:Src/main.c    **** //			g_RxBufptr = 0;
 160:Src/main.c    **** //			DMA_Cmd(DMA1_Channel6, DISABLE);			
 161:Src/main.c    **** //			DMA1_Channel6->CNDTR = RX_BUF_SIZE;
 162:Src/main.c    **** //			DMA_Cmd(DMA1_Channel6, ENABLE); 
 163:Src/main.c    **** 		}
 164:Src/main.c    **** 		if (g_CmdMap[SYS_SAVE_TO_FLASH] == 1) // �Ƿ񱣴��ڴ���Ʊ�
 165:Src/main.c    **** 		{
 166:Src/main.c    **** 			g_CmdMap[SYS_SAVE_TO_FLASH] = 0;			
 167:Src/main.c    **** 			Flash_SaveCmdmap();
 168:Src/main.c    **** //			g_RxBufptr = 0;
 169:Src/main.c    **** //			DMA_Cmd(DMA1_Channel6, DISABLE);			
 170:Src/main.c    **** //			DMA1_Channel6->CNDTR = RX_BUF_SIZE;
 171:Src/main.c    **** //			DMA_Cmd(DMA1_Channel6, ENABLE); 
 172:Src/main.c    **** 		}	
 173:Src/main.c    **** 		
 174:Src/main.c    **** 				if (g_CmdMap[CMD_CLEAR_ERROR] == 1) // �Ƿ��������
 175:Src/main.c    **** 		{
 176:Src/main.c    **** 			clear_flash_erro();
 177:Src/main.c    **** 			g_CmdMap[CMD_CLEAR_ERROR] = 0;
 178:Src/main.c    **** 			g_CmdMap[CMD_ERROR] = 0;
 179:Src/main.c    **** 			ClearError();
 180:Src/main.c    **** 		}		
 181:Src/main.c    **** 		if (g_CmdMap[SYS_CLEAR_CLIBDATA] == 0x5555) //һ������궨����
 182:Src/main.c    **** 		{
 183:Src/main.c    **** 			g_CmdMap[SYS_CLEAR_CLIBDATA] = 0;
 184:Src/main.c    **** 			pos_linearity_set_default();
 185:Src/main.c    **** 		}
 186:Src/main.c    **** 		if (g_CmdMap[SYS_SET_FORCE_0N] == 0x0001) //���õ�ǰ����ֵΪ
 187:Src/main.c    **** 		{
 188:Src/main.c    **** 			g_CmdMap[SYS_YBP_BASE_VALUE_12BIT] = g_CmdMap[CMD_YBP_ADC_12BIT];
 189:Src/main.c    **** 			g_CmdMap[SYS_SET_FORCE_0N] = 0x0000;
 190:Src/main.c    **** 			Flash_SaveCmdmap();
 191:Src/main.c    **** //			g_RxBufptr = 0;
 192:Src/main.c    **** //			DMA_Cmd(DMA1_Channel6, DISABLE);			
 193:Src/main.c    **** //			DMA1_Channel6->CNDTR = RX_BUF_SIZE;
 194:Src/main.c    **** //			DMA_Cmd(DMA1_Channel6, ENABLE); 
 195:Src/main.c    **** 		}
 196:Src/main.c    **** 		//Motor_forbidden = 0;
 197:Src/main.c    **** 		if(g_CmdMap[CMD_E_STOP] == 1 || g_CmdMap[CMD_PAUSE] == 1 || (g_CmdMap[CMD_ERROR] & 0x0fff) != 0x0
 198:Src/main.c    **** 		{
 199:Src/main.c    **** 			Motor_forbidden = 1;
 200:Src/main.c    **** 			g_CmdMap[CMD_PAUSE] = 0;
 201:Src/main.c    **** 			Motor_emergercy_stop = 1;
 202:Src/main.c    **** 			Motor_pause_flag = 1;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 5


 203:Src/main.c    **** 			stop_posWaveSin(&waveGen);
 204:Src/main.c    **** 		}
 205:Src/main.c    **** 
 206:Src/main.c    **** 		
 207:Src/main.c    **** 		
 208:Src/main.c    **** 		UART_CheckReceive();
 209:Src/main.c    **** 		UART_CheckReceive_1();
 210:Src/main.c    **** 		Rx_Send_Modbus(); //�ظ�modbus
 211:Src/main.c    **** 		if(Flag_1ms == 1)//
 212:Src/main.c    **** 		{
 213:Src/main.c    **** 			Flag_1ms=0;
 214:Src/main.c    **** 			user_param_protected();
 215:Src/main.c    **** 			detect_limitPos(g_CmdMap[CMD_POS_ACT_PU],g_CmdMap[CMD_CUR_SET_PU]);
 216:Src/main.c    **** 			
 217:Src/main.c    **** 			if(++s_count_50ms>50)
 218:Src/main.c    **** 			{
 219:Src/main.c    **** 				s_count_50ms = 0;
 220:Src/main.c    **** 				Flag_50ms = 1;
 221:Src/main.c    **** 				if(g_CmdMap[SYS_MU_COMM_TO_PC] == 1)     //MU оƬ�궨ģʽ
 222:Src/main.c    **** 				{
 223:Src/main.c    ****           g_CmdMap[SYS_MOT_TEST] = 5;
 224:Src/main.c    **** 
 225:Src/main.c    ****         }	
 226:Src/main.c    **** 				else
 227:Src/main.c    ****         {
 228:Src/main.c    ****         }
 229:Src/main.c    **** 					
 230:Src/main.c    **** 				
 231:Src/main.c    **** 			}
 232:Src/main.c    **** 			
 233:Src/main.c    **** 			sim_ElectricAngle();
 234:Src/main.c    **** 			
 235:Src/main.c    **** 			if (++s_Count_Rec >= 10)
 236:Src/main.c    **** 			{ 
 237:Src/main.c    **** 				s_Count_Rec = 0;
 238:Src/main.c    **** 				g_SysStatus = 0;															//ϵͳ����״̬
 239:Src/main.c    **** 				if(g_CmdMap[TAG_MOTOR_ENABLE] == 1)
 240:Src/main.c    **** 				{
 241:Src/main.c    **** 					g_SysStatus = g_SysStatus|0x0001;
 242:Src/main.c    **** 				}
 243:Src/main.c    **** 				if(g_CmdMap[CMD_ERROR] != 0)
 244:Src/main.c    **** 				{
 245:Src/main.c    **** 					g_SysStatus = g_SysStatus|0x0002;
 246:Src/main.c    **** 				}	
 247:Src/main.c    **** 			}
 248:Src/main.c    **** 		/* USER CODE BEGIN 3 */
 249:Src/main.c    **** 		}
 250:Src/main.c    **** 		
 251:Src/main.c    **** 		if(Flag_50ms == 1)//if (bsp_CheckTimer(0))
 252:Src/main.c    **** 		{
 253:Src/main.c    **** 			start_temperature_adc();
 254:Src/main.c    **** 			Flag_50ms = 0;
 255:Src/main.c    **** 			generate_errorCode();
 256:Src/main.c    **** 		}
 257:Src/main.c    **** 		work_var_updata();  // ���¿��Ʋ���	
 258:Src/main.c    **** 
 259:Src/main.c    **** 	}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 6


 260:Src/main.c    ****   /* USER CODE END 3 */
 261:Src/main.c    **** }
 262:Src/main.c    **** 
 263:Src/main.c    **** /**
 264:Src/main.c    ****   * @brief System Clock Configuration
 265:Src/main.c    ****   * @retval None
 266:Src/main.c    ****   */
 267:Src/main.c    **** void SystemClock_Config(void)
 268:Src/main.c    **** {
  28              		.loc 1 268 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 144
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 A4B0     		sub	sp, sp, #144
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 152
 269:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  40              		.loc 1 269 0
  41 0004 3822     		movs	r2, #56
  42 0006 0021     		movs	r1, #0
  43 0008 05A8     		add	r0, sp, #20
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 270:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  46              		.loc 1 270 0
  47 000e 1422     		movs	r2, #20
  48 0010 0021     		movs	r1, #0
  49 0012 6846     		mov	r0, sp
  50 0014 FFF7FEFF 		bl	memset
  51              	.LVL1:
 271:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  52              		.loc 1 271 0
  53 0018 4422     		movs	r2, #68
  54 001a 0021     		movs	r1, #0
  55 001c 13A8     		add	r0, sp, #76
  56 001e FFF7FEFF 		bl	memset
  57              	.LVL2:
 272:Src/main.c    **** 
 273:Src/main.c    ****   /** Configure the main internal regulator output voltage
 274:Src/main.c    ****   */
 275:Src/main.c    ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
  58              		.loc 1 275 0
  59 0022 0020     		movs	r0, #0
  60 0024 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  61              	.LVL3:
 276:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 277:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 278:Src/main.c    ****   */
 279:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 280:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  62              		.loc 1 280 0
  63 0028 0122     		movs	r2, #1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 7


  64 002a 4FF48033 		mov	r3, #65536
  65 002e CDE90523 		strd	r2, r3, [sp, #20]
 281:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 282:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  66              		.loc 1 282 0
  67 0032 0324     		movs	r4, #3
  68 0034 0223     		movs	r3, #2
 283:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
  69              		.loc 1 283 0
  70 0036 0E92     		str	r2, [sp, #56]
 284:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 42;
 285:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 286:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 287:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 288:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  71              		.loc 1 288 0
  72 0038 05A8     		add	r0, sp, #20
 284:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 42;
  73              		.loc 1 284 0
  74 003a 2A22     		movs	r2, #42
 282:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
  75              		.loc 1 282 0
  76 003c CDE90C34 		strd	r3, r4, [sp, #48]
 285:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  77              		.loc 1 285 0
  78 0040 CDE90F23 		strd	r2, r3, [sp, #60]
 287:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  79              		.loc 1 287 0
  80 0044 CDE91133 		strd	r3, r3, [sp, #68]
  81              		.loc 1 288 0
  82 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
  83              	.LVL4:
  84 004c 08B1     		cbz	r0, .L2
  85              	.LBB19:
  86              	.LBB20:
  87              	.LBB21:
  88              	.LBB22:
  89              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 8


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 9


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 10


 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 11


 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90              		.loc 2 209 0
  91              		.syntax unified
  92              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  93 004e 72B6     		cpsid i
  94              	@ 0 "" 2
  95              		.thumb
  96              		.syntax unified
  97              	.L3:
  98 0050 FEE7     		b	.L3
  99              	.L2:
 100              	.LBE22:
 101              	.LBE21:
 102              	.LBE20:
 103              	.LBE19:
 289:Src/main.c    ****   {
 290:Src/main.c    ****     Error_Handler();
 291:Src/main.c    ****   }
 292:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 293:Src/main.c    ****   */
 294:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 104              		.loc 1 294 0
 105 0052 0F23     		movs	r3, #15
 295:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 296:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 297:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 298:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 106              		.loc 1 298 0
 107 0054 CDE90200 		strd	r0, r0, [sp, #8]
 299:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 108              		.loc 1 299 0
 109 0058 0490     		str	r0, [sp, #16]
 300:Src/main.c    **** 
 301:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 110              		.loc 1 301 0
 111 005a 0521     		movs	r1, #5
 112 005c 6846     		mov	r0, sp
 296:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 113              		.loc 1 296 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 12


 114 005e CDE90034 		strd	r3, r4, [sp]
 115              		.loc 1 301 0
 116 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 117              	.LVL5:
 118 0066 08B1     		cbz	r0, .L4
 119              	.LBB23:
 120              	.LBB24:
 121              	.LBB25:
 122              	.LBB26:
 123              		.loc 2 209 0
 124              		.syntax unified
 125              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 126 0068 72B6     		cpsid i
 127              	@ 0 "" 2
 128              		.thumb
 129              		.syntax unified
 130              	.L5:
 131 006a FEE7     		b	.L5
 132              	.L4:
 133              	.LBE26:
 134              	.LBE25:
 135              	.LBE24:
 136              	.LBE23:
 302:Src/main.c    ****   {
 303:Src/main.c    ****     Error_Handler();
 304:Src/main.c    ****   }
 305:Src/main.c    ****   /** Initializes the peripherals clocks
 306:Src/main.c    ****   */
 307:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_ADC12;
 137              		.loc 1 307 0
 138 006c 48F20103 		movw	r3, #32769
 308:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 139              		.loc 1 308 0
 140 0070 CDE91330 		strd	r3, r0, [sp, #76]
 309:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 141              		.loc 1 309 0
 142 0074 4FF00053 		mov	r3, #536870912
 310:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 143              		.loc 1 310 0
 144 0078 13A8     		add	r0, sp, #76
 309:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 145              		.loc 1 309 0
 146 007a 2293     		str	r3, [sp, #136]
 147              		.loc 1 310 0
 148 007c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 149              	.LVL6:
 150 0080 08B1     		cbz	r0, .L1
 151              	.LBB27:
 152              	.LBB28:
 153              	.LBB29:
 154              	.LBB30:
 155              		.loc 2 209 0
 156              		.syntax unified
 157              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 158 0082 72B6     		cpsid i
 159              	@ 0 "" 2
 160              		.thumb
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 13


 161              		.syntax unified
 162              	.L7:
 163 0084 FEE7     		b	.L7
 164              	.L1:
 165              	.LBE30:
 166              	.LBE29:
 167              	.LBE28:
 168              	.LBE27:
 311:Src/main.c    ****   {
 312:Src/main.c    ****     Error_Handler();
 313:Src/main.c    ****   }
 314:Src/main.c    **** }
 169              		.loc 1 314 0
 170 0086 24B0     		add	sp, sp, #144
 171              	.LCFI2:
 172              		.cfi_def_cfa_offset 8
 173              		@ sp needed
 174 0088 10BD     		pop	{r4, pc}
 175              		.cfi_endproc
 176              	.LFE339:
 178              		.section	.text.startup.main,"ax",%progbits
 179              		.align	1
 180              		.global	main
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	main:
 187              	.LFB338:
  83:Src/main.c    **** 	volatile int i = 0;
 188              		.loc 1 83 0
 189              		.cfi_startproc
 190              		@ Volatile: function does not return.
 191              		@ args = 0, pretend = 0, frame = 32
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193 0000 80B5     		push	{r7, lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198              	.LBB42:
 199              	.LBB43:
 315:Src/main.c    **** 
 316:Src/main.c    **** 
 317:Src/main.c    **** 
 318:Src/main.c    **** 
 319:Src/main.c    **** /**
 320:Src/main.c    ****   * @brief USART1 Initialization Function
 321:Src/main.c    ****   * @param None
 322:Src/main.c    ****   * @retval None
 323:Src/main.c    ****   */
 324:Src/main.c    **** 
 325:Src/main.c    **** 
 326:Src/main.c    **** /**
 327:Src/main.c    ****   * Enable DMA controller clock
 328:Src/main.c    ****   */
 329:Src/main.c    **** static void MX_DMA_Init(void)
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 14


 330:Src/main.c    **** {
 331:Src/main.c    **** 
 332:Src/main.c    ****   /* DMA controller clock enable */
 333:Src/main.c    ****   __HAL_RCC_DMAMUX1_CLK_ENABLE();
 334:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 335:Src/main.c    **** 
 336:Src/main.c    ****   /* DMA interrupt init */
 337:Src/main.c    ****   /* DMA1_Channel1_IRQn interrupt configuration */
 338:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 1, 1);
 339:Src/main.c    **** //  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 340:Src/main.c    ****   /* DMA1_Channel2_IRQn interrupt configuration */
 341:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 1, 1);
 342:Src/main.c    **** //  HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 343:Src/main.c    **** 	HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 1, 1);
 344:Src/main.c    **** 	HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 1, 1);
 345:Src/main.c    **** 	
 346:Src/main.c    **** 	//HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 347:Src/main.c    **** 	//HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 348:Src/main.c    **** }
 349:Src/main.c    **** 
 350:Src/main.c    **** /**
 351:Src/main.c    ****   * @brief GPIO Initialization Function
 352:Src/main.c    ****   * @param None
 353:Src/main.c    ****   * @retval None
 354:Src/main.c    ****   */
 355:Src/main.c    **** static void MX_GPIO_Init(void)
 356:Src/main.c    **** {
 357:Src/main.c    **** 
 358:Src/main.c    ****   /* GPIO Ports Clock Enable */
 359:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 200              		.loc 1 359 0
 201 0002 9A4C     		ldr	r4, .L42
 202              	.LBE43:
 203              	.LBE42:
  83:Src/main.c    **** 	volatile int i = 0;
 204              		.loc 1 83 0
 205 0004 88B0     		sub	sp, sp, #32
 206              	.LCFI4:
 207              		.cfi_def_cfa_offset 40
  84:Src/main.c    ****   /* USER CODE BEGIN 1 */
 208              		.loc 1 84 0
 209 0006 0023     		movs	r3, #0
 210 0008 0193     		str	r3, [sp, #4]
  92:Src/main.c    **** 
 211              		.loc 1 92 0
 212 000a FFF7FEFF 		bl	HAL_Init
 213              	.LVL7:
  99:Src/main.c    **** 	NVIC_Configuration();
 214              		.loc 1 99 0
 215 000e FFF7FEFF 		bl	SystemClock_Config
 216              	.LVL8:
 100:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 217              		.loc 1 100 0
 218 0012 FFF7FEFF 		bl	NVIC_Configuration
 219              	.LVL9:
 102:Src/main.c    ****   /* USER CODE END SysInit */
 220              		.loc 1 102 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 15


 221 0016 FFF7FEFF 		bl	Flash_Init
 222              	.LVL10:
 223              	.LBB48:
 224              	.LBB44:
 225              		.loc 1 359 0
 226 001a E36C     		ldr	r3, [r4, #76]
 227 001c 43F00403 		orr	r3, r3, #4
 228 0020 E364     		str	r3, [r4, #76]
 229 0022 E36C     		ldr	r3, [r4, #76]
 230 0024 03F00403 		and	r3, r3, #4
 231 0028 0493     		str	r3, [sp, #16]
 232 002a 049B     		ldr	r3, [sp, #16]
 233              	.LBE44:
 234              	.LBB45:
 360:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 235              		.loc 1 360 0
 236 002c E36C     		ldr	r3, [r4, #76]
 237 002e 43F02003 		orr	r3, r3, #32
 238 0032 E364     		str	r3, [r4, #76]
 239 0034 E36C     		ldr	r3, [r4, #76]
 240 0036 03F02003 		and	r3, r3, #32
 241 003a 0593     		str	r3, [sp, #20]
 242 003c 059B     		ldr	r3, [sp, #20]
 243              	.LBE45:
 244              	.LBB46:
 361:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 245              		.loc 1 361 0
 246 003e E36C     		ldr	r3, [r4, #76]
 247 0040 43F00103 		orr	r3, r3, #1
 248 0044 E364     		str	r3, [r4, #76]
 249 0046 E36C     		ldr	r3, [r4, #76]
 250 0048 03F00103 		and	r3, r3, #1
 251 004c 0693     		str	r3, [sp, #24]
 252 004e 069B     		ldr	r3, [sp, #24]
 253              	.LBE46:
 254              	.LBB47:
 362:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 255              		.loc 1 362 0
 256 0050 E36C     		ldr	r3, [r4, #76]
 257 0052 43F00203 		orr	r3, r3, #2
 258 0056 E364     		str	r3, [r4, #76]
 259 0058 E36C     		ldr	r3, [r4, #76]
 260 005a 03F00203 		and	r3, r3, #2
 261 005e 0793     		str	r3, [sp, #28]
 262 0060 079B     		ldr	r3, [sp, #28]
 263              	.LBE47:
 264              	.LBE48:
 107:Src/main.c    ****   init_motor(&motor_);
 265              		.loc 1 107 0
 266 0062 FFF7FEFF 		bl	LED_Init
 267              	.LVL11:
 108:Src/main.c    ****   MX_DMA_Init();
 268              		.loc 1 108 0
 269 0066 8248     		ldr	r0, .L42+4
 270 0068 FFF7FEFF 		bl	init_motor
 271              	.LVL12:
 272              	.LBB49:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 16


 273              	.LBB50:
 274              	.LBB51:
 333:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 275              		.loc 1 333 0
 276 006c A36C     		ldr	r3, [r4, #72]
 277 006e 43F00403 		orr	r3, r3, #4
 278 0072 A364     		str	r3, [r4, #72]
 279 0074 A36C     		ldr	r3, [r4, #72]
 280 0076 03F00403 		and	r3, r3, #4
 281 007a 0293     		str	r3, [sp, #8]
 282 007c 029B     		ldr	r3, [sp, #8]
 283              	.LBE51:
 284              	.LBB52:
 334:Src/main.c    **** 
 285              		.loc 1 334 0
 286 007e A36C     		ldr	r3, [r4, #72]
 287 0080 43F00103 		orr	r3, r3, #1
 288 0084 A364     		str	r3, [r4, #72]
 289 0086 A36C     		ldr	r3, [r4, #72]
 290 0088 7A4C     		ldr	r4, .L42+8
 291              	.LBE52:
 338:Src/main.c    **** //  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 292              		.loc 1 338 0
 293 008a 0122     		movs	r2, #1
 294              	.LBB53:
 334:Src/main.c    **** 
 295              		.loc 1 334 0
 296 008c 03F00103 		and	r3, r3, #1
 297              	.LBE53:
 338:Src/main.c    **** //  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 298              		.loc 1 338 0
 299 0090 1146     		mov	r1, r2
 300              	.LBB54:
 334:Src/main.c    **** 
 301              		.loc 1 334 0
 302 0092 0393     		str	r3, [sp, #12]
 303              	.LBE54:
 338:Src/main.c    **** //  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 304              		.loc 1 338 0
 305 0094 0B20     		movs	r0, #11
 306              	.LBB55:
 334:Src/main.c    **** 
 307              		.loc 1 334 0
 308 0096 039B     		ldr	r3, [sp, #12]
 309              	.LBE55:
 338:Src/main.c    **** //  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 310              		.loc 1 338 0
 311 0098 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 312              	.LVL13:
 341:Src/main.c    **** //  HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 313              		.loc 1 341 0
 314 009c 0122     		movs	r2, #1
 315 009e 1146     		mov	r1, r2
 316 00a0 0C20     		movs	r0, #12
 317 00a2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 318              	.LVL14:
 343:Src/main.c    **** 	HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 1, 1);
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 17


 319              		.loc 1 343 0
 320 00a6 0122     		movs	r2, #1
 321 00a8 1146     		mov	r1, r2
 322 00aa 0D20     		movs	r0, #13
 323 00ac FFF7FEFF 		bl	HAL_NVIC_SetPriority
 324              	.LVL15:
 344:Src/main.c    **** 	
 325              		.loc 1 344 0
 326 00b0 0122     		movs	r2, #1
 327 00b2 1146     		mov	r1, r2
 328 00b4 0E20     		movs	r0, #14
 329 00b6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 330              	.LVL16:
 331              	.LBE50:
 332              	.LBE49:
 110:Src/main.c    ****   MX_ADC2_Init();
 333              		.loc 1 110 0
 334 00ba FFF7FEFF 		bl	MX_ADC1_Init
 335              	.LVL17:
 111:Src/main.c    **** //	hall_Configuration();
 336              		.loc 1 111 0
 337 00be FFF7FEFF 		bl	MX_ADC2_Init
 338              	.LVL18:
 113:Src/main.c    **** 	if (!CurrentDemarcate())   
 339              		.loc 1 113 0
 340 00c2 FFF7FEFF 		bl	PWM_Init
 341              	.LVL19:
 114:Src/main.c    **** 	{
 342              		.loc 1 114 0
 343 00c6 FFF7FEFF 		bl	CurrentDemarcate
 344              	.LVL20:
 345 00ca 30B9     		cbnz	r0, .L9
 116:Src/main.c    **** 	}
 346              		.loc 1 116 0
 347 00cc B4F85430 		ldrh	r3, [r4, #84]
 348 00d0 1BB2     		sxth	r3, r3
 349 00d2 43F08003 		orr	r3, r3, #128
 350 00d6 A4F85430 		strh	r3, [r4, #84]	@ movhi
 351              	.L9:
 119:Src/main.c    **** //	UnityPrint("start uart\n");
 352              		.loc 1 119 0
 353 00da FFF7FEFF 		bl	MX_USART1_UART_Init
 354              	.LVL21:
 199:Src/main.c    **** 			g_CmdMap[CMD_PAUSE] = 0;
 355              		.loc 1 199 0
 356 00de 664F     		ldr	r7, .L42+12
 357              	.LBB56:
 238:Src/main.c    **** 				if(g_CmdMap[TAG_MOTOR_ENABLE] == 1)
 358              		.loc 1 238 0
 359 00e0 664D     		ldr	r5, .L42+16
 360              	.LBE56:
 121:Src/main.c    ****   /* USER CODE BEGIN 2 */
 361              		.loc 1 121 0
 362 00e2 FFF7FEFF 		bl	work_var_updata
 363              	.LVL22:
 128:Src/main.c    ****   /* Infinite loop */
 364              		.loc 1 128 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 18


 365 00e6 0023     		movs	r3, #0
 366 00e8 A4F81832 		strh	r3, [r4, #536]	@ movhi
 367              	.L28:
 146:Src/main.c    **** 		{
 368              		.loc 1 146 0
 369 00ec E38A     		ldrh	r3, [r4, #22]
 370 00ee 1BB2     		sxth	r3, r3
 371 00f0 012B     		cmp	r3, #1
 372 00f2 0FD1     		bne	.L10
 148:Src/main.c    **** 			 memcpy((void*)(&g_CmdMap[CMD_ID]), (void*)(&g_UserCmdMap_Default[0][CMD_ID]), ((27)<<1));		
 373              		.loc 1 148 0
 374 00f4 0023     		movs	r3, #0
 375 00f6 E382     		strh	r3, [r4, #22]	@ movhi
 149:Src/main.c    **** 			Flash_SaveUserCmdmap();
 376              		.loc 1 149 0
 377 00f8 614B     		ldr	r3, .L42+20
 378 00fa 624A     		ldr	r2, .L42+24
 379 00fc 03F13401 		add	r1, r3, #52
 380              	.L11:
 381 0100 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 382 0104 42F8040B 		str	r0, [r2], #4	@ unaligned
 383 0108 8B42     		cmp	r3, r1
 384 010a F9D1     		bne	.L11
 385 010c 1B88     		ldrh	r3, [r3]	@ unaligned
 386 010e 1380     		strh	r3, [r2]	@ unaligned
 150:Src/main.c    **** 			
 387              		.loc 1 150 0
 388 0110 FFF7FEFF 		bl	Flash_SaveUserCmdmap
 389              	.LVL23:
 390              	.L10:
 154:Src/main.c    **** 		{
 391              		.loc 1 154 0
 392 0114 238B     		ldrh	r3, [r4, #24]
 393 0116 1BB2     		sxth	r3, r3
 394 0118 012B     		cmp	r3, #1
 395 011a 03D1     		bne	.L12
 156:Src/main.c    **** 
 396              		.loc 1 156 0
 397 011c 0023     		movs	r3, #0
 398 011e 2383     		strh	r3, [r4, #24]	@ movhi
 158:Src/main.c    **** //			g_RxBufptr = 0;
 399              		.loc 1 158 0
 400 0120 FFF7FEFF 		bl	Flash_SaveUserCmdmap
 401              	.LVL24:
 402              	.L12:
 164:Src/main.c    **** 		{
 403              		.loc 1 164 0
 404 0124 B4F80C32 		ldrh	r3, [r4, #524]
 405 0128 1BB2     		sxth	r3, r3
 406 012a 012B     		cmp	r3, #1
 407 012c 04D1     		bne	.L13
 166:Src/main.c    **** 			Flash_SaveCmdmap();
 408              		.loc 1 166 0
 409 012e 0023     		movs	r3, #0
 410 0130 A4F80C32 		strh	r3, [r4, #524]	@ movhi
 167:Src/main.c    **** //			g_RxBufptr = 0;
 411              		.loc 1 167 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 19


 412 0134 FFF7FEFF 		bl	Flash_SaveCmdmap
 413              	.LVL25:
 414              	.L13:
 174:Src/main.c    **** 		{
 415              		.loc 1 174 0
 416 0138 238A     		ldrh	r3, [r4, #16]
 417 013a 1BB2     		sxth	r3, r3
 418 013c 012B     		cmp	r3, #1
 419 013e 07D1     		bne	.L14
 176:Src/main.c    **** 			g_CmdMap[CMD_CLEAR_ERROR] = 0;
 420              		.loc 1 176 0
 421 0140 FFF7FEFF 		bl	clear_flash_erro
 422              	.LVL26:
 177:Src/main.c    **** 			g_CmdMap[CMD_ERROR] = 0;
 423              		.loc 1 177 0
 424 0144 0023     		movs	r3, #0
 425 0146 2382     		strh	r3, [r4, #16]	@ movhi
 178:Src/main.c    **** 			ClearError();
 426              		.loc 1 178 0
 427 0148 A4F85430 		strh	r3, [r4, #84]	@ movhi
 179:Src/main.c    **** 		}		
 428              		.loc 1 179 0
 429 014c FFF7FEFF 		bl	ClearError
 430              	.LVL27:
 431              	.L14:
 181:Src/main.c    **** 		{
 432              		.loc 1 181 0
 433 0150 B4F81E32 		ldrh	r3, [r4, #542]
 434 0154 45F25552 		movw	r2, #21845
 435 0158 1BB2     		sxth	r3, r3
 436 015a 9342     		cmp	r3, r2
 437 015c 04D1     		bne	.L15
 183:Src/main.c    **** 			pos_linearity_set_default();
 438              		.loc 1 183 0
 439 015e 0023     		movs	r3, #0
 440 0160 A4F81E32 		strh	r3, [r4, #542]	@ movhi
 184:Src/main.c    **** 		}
 441              		.loc 1 184 0
 442 0164 FFF7FEFF 		bl	pos_linearity_set_default
 443              	.LVL28:
 444              	.L15:
 186:Src/main.c    **** 		{
 445              		.loc 1 186 0
 446 0168 B4F89C32 		ldrh	r3, [r4, #668]
 447 016c 1BB2     		sxth	r3, r3
 448 016e 012B     		cmp	r3, #1
 449 0170 08D1     		bne	.L16
 188:Src/main.c    **** 			g_CmdMap[SYS_SET_FORCE_0N] = 0x0000;
 450              		.loc 1 188 0
 451 0172 B4F86830 		ldrh	r3, [r4, #104]
 452 0176 A4F89632 		strh	r3, [r4, #662]	@ movhi
 189:Src/main.c    **** 			Flash_SaveCmdmap();
 453              		.loc 1 189 0
 454 017a 0023     		movs	r3, #0
 455 017c A4F89C32 		strh	r3, [r4, #668]	@ movhi
 190:Src/main.c    **** //			g_RxBufptr = 0;
 456              		.loc 1 190 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 20


 457 0180 FFF7FEFF 		bl	Flash_SaveCmdmap
 458              	.LVL29:
 459              	.L16:
 197:Src/main.c    **** 		{
 460              		.loc 1 197 0
 461 0184 638A     		ldrh	r3, [r4, #18]
 462 0186 1BB2     		sxth	r3, r3
 463 0188 012B     		cmp	r3, #1
 464 018a 08D0     		beq	.L17
 197:Src/main.c    **** 		{
 465              		.loc 1 197 0 is_stmt 0 discriminator 1
 466 018c A38A     		ldrh	r3, [r4, #20]
 467 018e 1BB2     		sxth	r3, r3
 468 0190 012B     		cmp	r3, #1
 469 0192 04D0     		beq	.L17
 197:Src/main.c    **** 		{
 470              		.loc 1 197 0 discriminator 2
 471 0194 B4F85430 		ldrh	r3, [r4, #84]
 472 0198 C3F30B03 		ubfx	r3, r3, #0, #12
 473 019c 53B1     		cbz	r3, .L18
 474              	.L17:
 199:Src/main.c    **** 			g_CmdMap[CMD_PAUSE] = 0;
 475              		.loc 1 199 0 is_stmt 1
 476 019e 0123     		movs	r3, #1
 200:Src/main.c    **** 			Motor_emergercy_stop = 1;
 477              		.loc 1 200 0
 478 01a0 0022     		movs	r2, #0
 199:Src/main.c    **** 			g_CmdMap[CMD_PAUSE] = 0;
 479              		.loc 1 199 0
 480 01a2 3B70     		strb	r3, [r7]
 200:Src/main.c    **** 			Motor_emergercy_stop = 1;
 481              		.loc 1 200 0
 482 01a4 A282     		strh	r2, [r4, #20]	@ movhi
 201:Src/main.c    **** 			Motor_pause_flag = 1;
 483              		.loc 1 201 0
 484 01a6 384A     		ldr	r2, .L42+28
 203:Src/main.c    **** 		}
 485              		.loc 1 203 0
 486 01a8 3848     		ldr	r0, .L42+32
 201:Src/main.c    **** 			Motor_pause_flag = 1;
 487              		.loc 1 201 0
 488 01aa 1370     		strb	r3, [r2]
 202:Src/main.c    **** 			stop_posWaveSin(&waveGen);
 489              		.loc 1 202 0
 490 01ac 384A     		ldr	r2, .L42+36
 491 01ae 1370     		strb	r3, [r2]
 203:Src/main.c    **** 		}
 492              		.loc 1 203 0
 493 01b0 FFF7FEFF 		bl	stop_posWaveSin
 494              	.LVL30:
 495              	.L18:
 208:Src/main.c    **** 		UART_CheckReceive_1();
 496              		.loc 1 208 0
 497 01b4 FFF7FEFF 		bl	UART_CheckReceive
 498              	.LVL31:
 209:Src/main.c    **** 		Rx_Send_Modbus(); //�ظ�modbus
 499              		.loc 1 209 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 21


 500 01b8 FFF7FEFF 		bl	UART_CheckReceive_1
 501              	.LVL32:
 210:Src/main.c    **** 		if(Flag_1ms == 1)//
 502              		.loc 1 210 0
 503 01bc FFF7FEFF 		bl	Rx_Send_Modbus
 504              	.LVL33:
 211:Src/main.c    **** 		{
 505              		.loc 1 211 0
 506 01c0 344B     		ldr	r3, .L42+40
 507 01c2 354E     		ldr	r6, .L42+44
 508 01c4 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
 509 01c8 B8F1010F 		cmp	r8, #1
 510 01cc 1CD1     		bne	.L20
 511              	.LBB57:
 213:Src/main.c    **** 			user_param_protected();
 512              		.loc 1 213 0
 513 01ce 4FF00009 		mov	r9, #0
 514 01d2 83F80090 		strb	r9, [r3]
 214:Src/main.c    **** 			detect_limitPos(g_CmdMap[CMD_POS_ACT_PU],g_CmdMap[CMD_CUR_SET_PU]);
 515              		.loc 1 214 0
 516 01d6 FFF7FEFF 		bl	user_param_protected
 517              	.LVL34:
 215:Src/main.c    **** 			
 518              		.loc 1 215 0
 519 01da B4F84C00 		ldrh	r0, [r4, #76]
 520 01de B4F84210 		ldrh	r1, [r4, #66]
 521 01e2 00B2     		sxth	r0, r0
 522 01e4 09B2     		sxth	r1, r1
 523 01e6 FFF7FEFF 		bl	detect_limitPos
 524              	.LVL35:
 217:Src/main.c    **** 			{
 525              		.loc 1 217 0
 526 01ea 2C4A     		ldr	r2, .L42+48
 527 01ec 1388     		ldrh	r3, [r2]
 528 01ee 0133     		adds	r3, r3, #1
 529 01f0 1BB2     		sxth	r3, r3
 530 01f2 322B     		cmp	r3, #50
 531 01f4 14DC     		bgt	.L21
 532 01f6 1380     		strh	r3, [r2]	@ movhi
 533              	.L22:
 233:Src/main.c    **** 			
 534              		.loc 1 233 0
 535 01f8 FFF7FEFF 		bl	sim_ElectricAngle
 536              	.LVL36:
 235:Src/main.c    **** 			{ 
 537              		.loc 1 235 0
 538 01fc 284A     		ldr	r2, .L42+52
 539 01fe 1368     		ldr	r3, [r2]
 540 0200 0133     		adds	r3, r3, #1
 541 0202 092B     		cmp	r3, #9
 542 0204 1ADC     		bgt	.L24
 543 0206 1360     		str	r3, [r2]
 544              	.L20:
 545              	.LBE57:
 251:Src/main.c    **** 		{
 546              		.loc 1 251 0
 547 0208 3388     		ldrh	r3, [r6]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 22


 548 020a 012B     		cmp	r3, #1
 549 020c 05D1     		bne	.L27
 253:Src/main.c    **** 			Flag_50ms = 0;
 550              		.loc 1 253 0
 551 020e FFF7FEFF 		bl	start_temperature_adc
 552              	.LVL37:
 254:Src/main.c    **** 			generate_errorCode();
 553              		.loc 1 254 0
 554 0212 0023     		movs	r3, #0
 555 0214 3380     		strh	r3, [r6]	@ movhi
 255:Src/main.c    **** 		}
 556              		.loc 1 255 0
 557 0216 FFF7FEFF 		bl	generate_errorCode
 558              	.LVL38:
 559              	.L27:
 257:Src/main.c    **** 
 560              		.loc 1 257 0
 561 021a FFF7FEFF 		bl	work_var_updata
 562              	.LVL39:
 146:Src/main.c    **** 		{
 563              		.loc 1 146 0
 564 021e 65E7     		b	.L28
 565              	.L21:
 566              	.LBB58:
 221:Src/main.c    **** 				{
 567              		.loc 1 221 0
 568 0220 B4F81832 		ldrh	r3, [r4, #536]
 219:Src/main.c    **** 				Flag_50ms = 1;
 569              		.loc 1 219 0
 570 0224 A2F80090 		strh	r9, [r2]	@ movhi
 221:Src/main.c    **** 				{
 571              		.loc 1 221 0
 572 0228 1BB2     		sxth	r3, r3
 573 022a 012B     		cmp	r3, #1
 223:Src/main.c    **** 
 574              		.loc 1 223 0
 575 022c 08BF     		it	eq
 576 022e 0523     		moveq	r3, #5
 220:Src/main.c    **** 				if(g_CmdMap[SYS_MU_COMM_TO_PC] == 1)     //MU оƬ�궨ģʽ
 577              		.loc 1 220 0
 578 0230 A6F80080 		strh	r8, [r6]	@ movhi
 223:Src/main.c    **** 
 579              		.loc 1 223 0
 580 0234 08BF     		it	eq
 581 0236 A4F81A32 		strheq	r3, [r4, #538]	@ movhi
 582 023a DDE7     		b	.L22
 583              	.L24:
 237:Src/main.c    **** 				g_SysStatus = 0;															//ϵͳ����״̬
 584              		.loc 1 237 0
 585 023c 0023     		movs	r3, #0
 238:Src/main.c    **** 				if(g_CmdMap[TAG_MOTOR_ENABLE] == 1)
 586              		.loc 1 238 0
 587 023e 2B80     		strh	r3, [r5]	@ movhi
 237:Src/main.c    **** 				g_SysStatus = 0;															//ϵͳ����״̬
 588              		.loc 1 237 0
 589 0240 1360     		str	r3, [r2]
 239:Src/main.c    **** 				{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 23


 590              		.loc 1 239 0
 591 0242 B4F80232 		ldrh	r3, [r4, #514]
 592 0246 1BB2     		sxth	r3, r3
 593 0248 012B     		cmp	r3, #1
 241:Src/main.c    **** 				}
 594              		.loc 1 241 0
 595 024a 01BF     		itttt	eq
 596 024c 2B88     		ldrheq	r3, [r5]
 597 024e 1BB2     		sxtheq	r3, r3
 598 0250 43F00103 		orreq	r3, r3, #1
 599 0254 2B80     		strheq	r3, [r5]	@ movhi
 243:Src/main.c    **** 				{
 600              		.loc 1 243 0
 601 0256 B4F85430 		ldrh	r3, [r4, #84]
 602 025a 1BB2     		sxth	r3, r3
 603 025c 002B     		cmp	r3, #0
 604 025e D3D0     		beq	.L20
 245:Src/main.c    **** 				}	
 605              		.loc 1 245 0
 606 0260 2B88     		ldrh	r3, [r5]
 607 0262 1BB2     		sxth	r3, r3
 608 0264 43F00203 		orr	r3, r3, #2
 609 0268 2B80     		strh	r3, [r5]	@ movhi
 610 026a CDE7     		b	.L20
 611              	.L43:
 612              		.align	2
 613              	.L42:
 614 026c 00100240 		.word	1073876992
 615 0270 00000000 		.word	motor_
 616 0274 00000000 		.word	g_CmdMap
 617 0278 00000000 		.word	Motor_forbidden
 618 027c 00000000 		.word	g_SysStatus
 619 0280 0C000000 		.word	g_UserCmdMap_Default+12
 620 0284 0C000000 		.word	g_CmdMap+12
 621 0288 00000000 		.word	Motor_emergercy_stop
 622 028c 00000000 		.word	waveGen
 623 0290 00000000 		.word	Motor_pause_flag
 624 0294 00000000 		.word	Flag_1ms
 625 0298 00000000 		.word	Flag_50ms
 626 029c 00000000 		.word	s_count_50ms
 627 02a0 00000000 		.word	.LANCHOR0
 628              	.LBE58:
 629              		.cfi_endproc
 630              	.LFE338:
 632              		.section	.text.Error_Handler,"ax",%progbits
 633              		.align	1
 634              		.global	Error_Handler
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	Error_Handler:
 641              	.LFB342:
 363:Src/main.c    **** 
 364:Src/main.c    **** }
 365:Src/main.c    **** 
 366:Src/main.c    **** /* USER CODE BEGIN 4 */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 24


 367:Src/main.c    **** 
 368:Src/main.c    **** /* USER CODE END 4 */
 369:Src/main.c    **** 
 370:Src/main.c    **** /**
 371:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 372:Src/main.c    ****   * @retval None
 373:Src/main.c    ****   */
 374:Src/main.c    **** void Error_Handler(void)
 375:Src/main.c    **** {
 642              		.loc 1 375 0
 643              		.cfi_startproc
 644              		@ Volatile: function does not return.
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648              	.LBB59:
 649              	.LBB60:
 650              		.loc 2 209 0
 651              		.syntax unified
 652              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 653 0000 72B6     		cpsid i
 654              	@ 0 "" 2
 655              		.thumb
 656              		.syntax unified
 657              	.L45:
 658 0002 FEE7     		b	.L45
 659              	.LBE60:
 660              	.LBE59:
 661              		.cfi_endproc
 662              	.LFE342:
 664              		.section	.text.StartDefaultTask,"ax",%progbits
 665              		.align	1
 666              		.global	StartDefaultTask
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu fpv4-sp-d16
 672              	StartDefaultTask:
 673              	.LFB343:
 376:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 377:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 378:Src/main.c    ****   __disable_irq();
 379:Src/main.c    ****   while (1)
 380:Src/main.c    ****   {
 381:Src/main.c    ****   }
 382:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 383:Src/main.c    **** }
 384:Src/main.c    **** 
 385:Src/main.c    **** #ifdef  USE_FULL_ASSERT
 386:Src/main.c    **** /**
 387:Src/main.c    ****   * @brief  Reports the name of the source file and the source line number
 388:Src/main.c    ****   *         where the assert_param error has occurred.
 389:Src/main.c    ****   * @param  file: pointer to the source file name
 390:Src/main.c    ****   * @param  line: assert_param error line source number
 391:Src/main.c    ****   * @retval None
 392:Src/main.c    ****   */
 393:Src/main.c    **** void assert_failed(uint8_t *file, uint32_t line)
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 25


 394:Src/main.c    **** {
 395:Src/main.c    ****   /* USER CODE BEGIN 6 */
 396:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 397:Src/main.c    ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 398:Src/main.c    ****   /* USER CODE END 6 */
 399:Src/main.c    **** }
 400:Src/main.c    **** #endif /* USE_FULL_ASSERT */
 401:Src/main.c    **** 
 402:Src/main.c    **** /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
 403:Src/main.c    **** 
 404:Src/main.c    **** void StartDefaultTask(void const * argument)
 405:Src/main.c    **** {
 674              		.loc 1 405 0
 675              		.cfi_startproc
 676              		@ Volatile: function does not return.
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              	.LVL40:
 680 0000 08B5     		push	{r3, lr}
 681              	.LCFI5:
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 3, -8
 684              		.cfi_offset 14, -4
 685              	.LVL41:
 686              	.L47:
 406:Src/main.c    ****   /* USER CODE BEGIN 5 */
 407:Src/main.c    ****   /* Infinite loop */
 408:Src/main.c    ****   for(;;)
 409:Src/main.c    ****   {
 410:Src/main.c    **** 
 411:Src/main.c    ****     osDelay(1);
 687              		.loc 1 411 0 discriminator 1
 688 0002 0120     		movs	r0, #1
 689 0004 FFF7FEFF 		bl	osDelay
 690              	.LVL42:
 691 0008 FBE7     		b	.L47
 692              		.cfi_endproc
 693              	.LFE343:
 695              		.comm	defaultTaskHandle,4,4
 696              		.section	.bss.s_Count_Rec,"aw",%nobits
 697              		.align	2
 698              		.set	.LANCHOR0,. + 0
 701              	s_Count_Rec:
 702 0000 00000000 		.space	4
 703              		.text
 704              	.Letext0:
 705              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 706              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 707              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 708              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 709              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 710              		.file 8 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 711              		.file 9 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 712              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 713              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 714              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc_ex.h"
 715              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 26


 716              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 717              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 718              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h"
 719              		.file 17 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 720              		.file 18 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 721              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 722              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 723              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-ea
 724              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 725              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 726              		.file 24 "Inc/uart.h"
 727              		.file 25 "Inc/pwm.h"
 728              		.file 26 "Inc/spi_MEncoder.h"
 729              		.file 27 "Inc/adc.h"
 730              		.file 28 "Inc/stm32_math_sin.h"
 731              		.file 29 "Inc/pid.h"
 732              		.file 30 "Inc/profile_joint.h"
 733              		.file 31 "Inc/icmu.h"
 734              		.file 32 "Inc/performance_test.h"
 735              		.file 33 "Inc/global.h"
 736              		.file 34 "Inc/limit_pos_detection.h"
 737              		.file 35 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 738              		.file 36 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 739              		.file 37 "Inc/sensorless.h"
 740              		.file 38 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 741              		.file 39 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
 742              		.file 40 "Inc/nvic.h"
 743              		.file 41 "Inc/flash.h"
 744              		.file 42 "Inc/led.h"
 745              		.file 43 "Inc/calibration.h"
 746              		.file 44 "Inc/security.h"
 747              		.file 45 "<built-in>"
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:18     .text.SystemClock_Config:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:25     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:179    .text.startup.main:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:186    .text.startup.main:00000000 main
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:614    .text.startup.main:0000026c $d
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:633    .text.Error_Handler:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:640    .text.Error_Handler:00000000 Error_Handler
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:665    .text.StartDefaultTask:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:672    .text.StartDefaultTask:00000000 StartDefaultTask
                            *COM*:00000004 defaultTaskHandle
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:697    .bss.s_Count_Rec:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s:701    .bss.s_Count_Rec:00000000 s_Count_Rec

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
NVIC_Configuration
Flash_Init
LED_Init
init_motor
HAL_NVIC_SetPriority
MX_ADC1_Init
MX_ADC2_Init
PWM_Init
CurrentDemarcate
MX_USART1_UART_Init
work_var_updata
Flash_SaveUserCmdmap
Flash_SaveCmdmap
clear_flash_erro
ClearError
pos_linearity_set_default
stop_posWaveSin
UART_CheckReceive
UART_CheckReceive_1
Rx_Send_Modbus
user_param_protected
detect_limitPos
sim_ElectricAngle
start_temperature_adc
generate_errorCode
motor_
g_CmdMap
Motor_forbidden
g_SysStatus
g_UserCmdMap_Default
Motor_emergercy_stop
waveGen
Motor_pause_flag
Flag_1ms
Flag_50ms
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBfcGWC.s 			page 28


s_count_50ms
osDelay
