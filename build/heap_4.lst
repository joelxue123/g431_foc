ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"heap_4.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvHeapInit,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvHeapInit:
  25              	.LFB10:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * A sample implementation of pvPortMalloc() and vPortFree() that combines
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * (coalescences) adjacent memory blocks as they are freed, and in so doing
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * limits memory fragmentation.
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * See heap_1.c, heap_2.c and heap_3.c for alternative implementations, and the
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include <stdlib.h>
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** all the API functions to use the MPU wrappers.  That should only be done when
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** task.h is included from an application file. */
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "FreeRTOS.h"
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "task.h"
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Block sizes must not get too small. */
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( xHeapStructSize << 1 ) )
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Assumes 8bit bytes! */
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapBITS_PER_BYTE		( ( size_t ) 8 )
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Allocate the memory for the heap. */
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configAPPLICATION_ALLOCATED_HEAP == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* The application writer has already defined the array used for the RTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	heap - probably so it can be placed in a special segment or address. */
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif /* configAPPLICATION_ALLOCATED_HEAP */
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Define the linked list structure.  This is used to link free blocks in order
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** of their memory address. */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** typedef struct A_BLOCK_LINK
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** } BlockLink_t;
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Inserts a block of memory that is being freed into the correct position in
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the list of free memory blocks.  The block being freed will be merged with
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the block in front it and/or the block behind it if the memory blocks are
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * adjacent to each other.
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert );
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Called automatically to setup the required heap structures the first time
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * pvPortMalloc() is called.
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void );
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* The size of the structure placed at the beginning of each allocated memory
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** block must by correctly byte aligned. */
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT -
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Create a couple of list links to mark the start and end of the list. */
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static BlockLink_t xStart, *pxEnd = NULL;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Keeps track of the number of calls to allocate and free memory as well as the
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** number of free bytes remaining, but says nothing about fragmentation. */
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xFreeBytesRemaining = 0U;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xMinimumEverFreeBytesRemaining = 0U;
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xNumberOfSuccessfulAllocations = 0;
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xNumberOfSuccessfulFrees = 0;
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Gets set to the top bit of an size_t type.  When this bit in the xBlockSize
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** member of an BlockLink_t structure is set then the block belongs to the
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** application.  When the bit is free the block is still part of the free heap
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** space. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xBlockAllocatedBit = 0;
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvPortMalloc( size_t xWantedSize )
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvReturn = NULL;
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	vTaskSuspendAll();
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* If this is the first call to malloc then the heap will require
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		initialisation to setup the list of free blocks. */
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxEnd == NULL )
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			prvHeapInit();
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the requested block size is not so large that the top bit is
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		set.  The top bit of the block size member of the BlockLink_t structure
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		is used to determine who owns the block - the application or the
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		kernel, so it must be free. */
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* The wanted size is increased so it can contain a BlockLink_t
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			structure in addition to the requested amount of bytes. */
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( xWantedSize > 0 )
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				xWantedSize += xHeapStructSize;
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Ensure that blocks are always aligned to the required number
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				of bytes. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Byte alignment required. */
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Traverse the list from the start	(lowest address) block until
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				one	of adequate size is found. */
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxPreviousBlock = &xStart;
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxBlock = xStart.pxNextFreeBlock;
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock = pxBlock;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* If the end marker was reached then a block of adequate size
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				was	not found. */
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( pxBlock != pxEnd )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Return the memory space pointed to - jumping over the
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					BlockLink_t structure at its start. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize )
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* This block is being returned for use so must be taken out
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					of the list of free blocks. */
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* If the block is larger than required it can be split into
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					two. */
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* This block is to be split into two.  Create a new
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						block following the number of bytes requested. The void
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						cast is used to prevent byte alignment warnings from the
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						compiler. */
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Calculate the sizes of two blocks split from the
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						single block. */
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxBlock->xBlockSize = xWantedSize;
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Insert the new block into the list of free blocks. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						prvInsertBlockIntoFreeList( pxNewBlockLink );
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining -= pxBlock->xBlockSize;
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* The block is being returned - it is allocated and owned
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					by the application and has no "next" block. */
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->xBlockSize |= xBlockAllocatedBit;
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->pxNextFreeBlock = NULL;
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xNumberOfSuccessfulAllocations++;
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		traceMALLOC( pvReturn, xWantedSize );
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	( void ) xTaskResumeAll();
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pvReturn == NULL )
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			extern void vApplicationMallocFailedHook( void );
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			vApplicationMallocFailedHook();
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#endif
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return pvReturn;
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortFree( void *pv )
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc = ( uint8_t * ) pv;
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxLink;
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pv != NULL )
 272:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 273:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 274:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		before it. */
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		puc -= xHeapStructSize;
 276:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* This casting is to keep the compiler from issuing warnings. */
 278:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxLink = ( void * ) puc;
 279:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 280:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the block is actually allocated. */
 281:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 282:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 283:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 285:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 286:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( pxLink->pxNextFreeBlock == NULL )
 287:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 288:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* The block is being returned to the heap - it is no longer
 289:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				allocated. */
 290:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 291:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				vTaskSuspendAll();
 293:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 294:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Add this block to the list of free blocks. */
 295:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining += pxLink->xBlockSize;
 296:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					traceFREE( pv, pxLink->xBlockSize );
 297:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 298:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xNumberOfSuccessfulFrees++;
 299:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 300:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				( void ) xTaskResumeAll();
 301:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 302:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 303:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 304:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 305:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 306:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 307:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 308:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 309:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 310:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 311:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 312:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 313:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 314:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetFreeHeapSize( void )
 316:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 317:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xFreeBytesRemaining;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 319:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 320:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetMinimumEverFreeHeapSize( void )
 322:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 323:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xMinimumEverFreeBytesRemaining;
 324:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 325:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 326:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 327:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortInitialiseBlocks( void )
 328:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 329:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* This just exists to keep the linker quiet. */
 330:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 331:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 332:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void )
 334:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  27              		.loc 1 334 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 335:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxFirstFreeBlock;
 336:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *pucAlignedHeap;
 337:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t uxAddress;
 338:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 339:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 341:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( size_t ) ucHeap;
  33              		.loc 1 341 0
  34 0000 124A     		ldr	r2, .L4
  35              	.LVL1:
 342:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
  36              		.loc 1 343 0
  37 0002 12F0070F 		tst	r2, #7
  38 0006 1ED0     		beq	.L3
 344:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 345:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress += ( portBYTE_ALIGNMENT - 1 );
  39              		.loc 1 345 0
  40 0008 D11D     		adds	r1, r2, #7
  41              	.LVL2:
 346:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  42              		.loc 1 346 0
  43 000a 21F00701 		bic	r1, r1, #7
  44              	.LVL3:
 347:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
  45              		.loc 1 347 0
  46 000e C1F52053 		rsb	r3, r1, #10240
  47 0012 1344     		add	r3, r3, r2
  48              	.LVL4:
 346:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  49              		.loc 1 346 0
  50 0014 0A46     		mov	r2, r1
  51              	.LVL5:
  52              	.L2:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 8


 348:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 349:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pucAlignedHeap = ( uint8_t * ) uxAddress;
 351:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 353:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 354:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
  53              		.loc 1 354 0
  54 0016 0E48     		ldr	r0, .L4+4
  55 0018 0260     		str	r2, [r0]
 355:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.xBlockSize = ( size_t ) 0;
  56              		.loc 1 355 0
  57 001a 0021     		movs	r1, #0
  58 001c 4160     		str	r1, [r0, #4]
 356:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 357:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* pxEnd is used to mark the end of the list of free blocks and is inserted
 358:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	at the end of the heap space. */
 359:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
  59              		.loc 1 359 0
  60 001e 1344     		add	r3, r3, r2
  61              	.LVL6:
 360:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress -= xHeapStructSize;
  62              		.loc 1 360 0
  63 0020 083B     		subs	r3, r3, #8
  64              	.LVL7:
 361:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  65              		.loc 1 361 0
  66 0022 23F00703 		bic	r3, r3, #7
  67              	.LVL8:
 362:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd = ( void * ) uxAddress;
  68              		.loc 1 362 0
  69 0026 0B48     		ldr	r0, .L4+8
  70 0028 0360     		str	r3, [r0]
 363:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->xBlockSize = 0;
  71              		.loc 1 363 0
  72 002a 5960     		str	r1, [r3, #4]
 364:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->pxNextFreeBlock = NULL;
  73              		.loc 1 364 0
  74 002c 1960     		str	r1, [r3]
  75              	.LVL9:
 365:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* To start with there is a single free block that is sized to take up the
 367:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	entire heap space, minus the space taken by pxEnd. */
 368:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 369:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
  76              		.loc 1 369 0
  77 002e 991A     		subs	r1, r3, r2
  78 0030 5160     		str	r1, [r2, #4]
 370:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
  79              		.loc 1 370 0
  80 0032 1360     		str	r3, [r2]
 371:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 372:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Only one block exists - and it covers the entire usable heap space. */
 373:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
  81              		.loc 1 373 0
  82 0034 084B     		ldr	r3, .L4+12
  83              	.LVL10:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 9


  84 0036 1960     		str	r1, [r3]
 374:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
  85              		.loc 1 374 0
  86 0038 084B     		ldr	r3, .L4+16
  87 003a 1960     		str	r1, [r3]
 375:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 376:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Work out the position of the top bit in a size_t variable. */
 377:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
  88              		.loc 1 377 0
  89 003c 084B     		ldr	r3, .L4+20
  90 003e 4FF00042 		mov	r2, #-2147483648
  91              	.LVL11:
  92 0042 1A60     		str	r2, [r3]
 378:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
  93              		.loc 1 378 0
  94 0044 7047     		bx	lr
  95              	.LVL12:
  96              	.L3:
 338:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  97              		.loc 1 338 0
  98 0046 4FF42053 		mov	r3, #10240
  99 004a E4E7     		b	.L2
 100              	.L5:
 101              		.align	2
 102              	.L4:
 103 004c 00000000 		.word	ucHeap
 104 0050 00000000 		.word	.LANCHOR0
 105 0054 00000000 		.word	.LANCHOR1
 106 0058 00000000 		.word	.LANCHOR2
 107 005c 00000000 		.word	.LANCHOR3
 108 0060 00000000 		.word	.LANCHOR4
 109              		.cfi_endproc
 110              	.LFE10:
 112              		.section	.text.prvInsertBlockIntoFreeList,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	prvInsertBlockIntoFreeList:
 120              	.LFB11:
 379:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
 382:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 121              		.loc 1 382 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.LVL13:
 127 0000 10B4     		push	{r4}
 128              	.LCFI0:
 129              		.cfi_def_cfa_offset 4
 130              		.cfi_offset 4, -4
 131              	.LVL14:
 383:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxIterator;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 10


 384:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc;
 385:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Iterate through the list until a block is found that has a higher address
 387:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	than the block being inserted. */
 388:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator-
 132              		.loc 1 388 0
 133 0002 134B     		ldr	r3, .L15
 134              	.LVL15:
 135              	.L7:
 136              		.loc 1 388 0 is_stmt 0 discriminator 1
 137 0004 1A68     		ldr	r2, [r3]
 138 0006 8242     		cmp	r2, r0
 139 0008 1BD3     		bcc	.L13
 140              	.LVL16:
 389:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 390:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Nothing to do here, just iterate to the right position. */
 391:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 392:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted after
 394:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 395:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxIterator;
 396:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 141              		.loc 1 396 0 is_stmt 1
 142 000a 5968     		ldr	r1, [r3, #4]
 143 000c 5C18     		adds	r4, r3, r1
 144 000e 8442     		cmp	r4, r0
 145 0010 03D1     		bne	.L8
 397:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 398:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 146              		.loc 1 398 0
 147 0012 4068     		ldr	r0, [r0, #4]
 148              	.LVL17:
 149 0014 0144     		add	r1, r1, r0
 150 0016 5960     		str	r1, [r3, #4]
 151              	.LVL18:
 399:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert = pxIterator;
 152              		.loc 1 399 0
 153 0018 1846     		mov	r0, r3
 154              	.LVL19:
 155              	.L8:
 400:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 401:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 402:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 403:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 404:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 405:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted before
 407:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 408:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxBlockToInsert;
 409:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 156              		.loc 1 409 0
 157 001a 4168     		ldr	r1, [r0, #4]
 158 001c 4418     		adds	r4, r0, r1
 159 001e A242     		cmp	r2, r4
 160 0020 13D1     		bne	.L9
 410:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 411:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxIterator->pxNextFreeBlock != pxEnd )
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 11


 161              		.loc 1 411 0
 162 0022 0C4C     		ldr	r4, .L15+4
 163 0024 2468     		ldr	r4, [r4]
 164 0026 A242     		cmp	r2, r4
 165 0028 0DD0     		beq	.L10
 412:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 413:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* Form one big block from the two blocks. */
 414:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 166              		.loc 1 414 0
 167 002a 5268     		ldr	r2, [r2, #4]
 168 002c 1144     		add	r1, r1, r2
 169 002e 4160     		str	r1, [r0, #4]
 415:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 170              		.loc 1 415 0
 171 0030 1A68     		ldr	r2, [r3]
 172 0032 1268     		ldr	r2, [r2]
 173 0034 0260     		str	r2, [r0]
 174              	.L11:
 416:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 417:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 418:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 419:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 420:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 421:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 422:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 423:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 424:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 425:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 426:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 427:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* If the block being inserted plugged a gab, so was merged with the block
 428:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	before and the block after, then it's pxNextFreeBlock pointer will have
 429:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	already been set, and should not be set here as that would make it point
 430:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	to itself. */
 431:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pxIterator != pxBlockToInsert )
 175              		.loc 1 431 0
 176 0036 9842     		cmp	r0, r3
 177 0038 00D0     		beq	.L6
 432:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 433:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 178              		.loc 1 433 0
 179 003a 1860     		str	r0, [r3]
 180              	.L6:
 434:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 435:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 436:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 437:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 438:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 439:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 181              		.loc 1 439 0
 182 003c 5DF8044B 		ldr	r4, [sp], #4
 183              	.LCFI1:
 184              		.cfi_remember_state
 185              		.cfi_restore 4
 186              		.cfi_def_cfa_offset 0
 187 0040 7047     		bx	lr
 188              	.LVL20:
 189              	.L13:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 12


 190              	.LCFI2:
 191              		.cfi_restore_state
 388:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 192              		.loc 1 388 0
 193 0042 1346     		mov	r3, r2
 194              	.LVL21:
 195 0044 DEE7     		b	.L7
 196              	.LVL22:
 197              	.L10:
 419:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 198              		.loc 1 419 0
 199 0046 0460     		str	r4, [r0]
 200 0048 F5E7     		b	.L11
 201              	.L9:
 424:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 202              		.loc 1 424 0
 203 004a 0260     		str	r2, [r0]
 204 004c F3E7     		b	.L11
 205              	.L16:
 206 004e 00BF     		.align	2
 207              	.L15:
 208 0050 00000000 		.word	.LANCHOR0
 209 0054 00000000 		.word	.LANCHOR1
 210              		.cfi_endproc
 211              	.LFE11:
 213              		.section	.text.pvPortMalloc,"ax",%progbits
 214              		.align	1
 215              		.global	pvPortMalloc
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv4-sp-d16
 221              	pvPortMalloc:
 222              	.LFB5:
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 223              		.loc 1 116 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              	.LVL23:
 228 0000 70B5     		push	{r4, r5, r6, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 16
 231              		.cfi_offset 4, -16
 232              		.cfi_offset 5, -12
 233              		.cfi_offset 6, -8
 234              		.cfi_offset 14, -4
 235 0002 0446     		mov	r4, r0
 236              	.LVL24:
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 237              		.loc 1 120 0
 238 0004 FFF7FEFF 		bl	vTaskSuspendAll
 239              	.LVL25:
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 240              		.loc 1 124 0
 241 0008 3C4B     		ldr	r3, .L37
 242 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 13


 243 000c BBB1     		cbz	r3, .L36
 244              	.L18:
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 245              		.loc 1 137 0
 246 000e 3C4B     		ldr	r3, .L37+4
 247 0010 1B68     		ldr	r3, [r3]
 248 0012 1C42     		tst	r4, r3
 249 0014 67D1     		bne	.L30
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 250              		.loc 1 141 0
 251 0016 ACB1     		cbz	r4, .L20
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 252              		.loc 1 143 0
 253 0018 0834     		adds	r4, r4, #8
 254              	.LVL26:
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 255              		.loc 1 147 0
 256 001a 14F0070F 		tst	r4, #7
 257 001e 11D0     		beq	.L20
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 258              		.loc 1 150 0
 259 0020 24F00704 		bic	r4, r4, #7
 260              	.LVL27:
 261 0024 0834     		adds	r4, r4, #8
 262              	.LVL28:
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 263              		.loc 1 151 0
 264 0026 04F00703 		and	r3, r4, #7
 265 002a 5BB1     		cbz	r3, .L20
 266              	.LBB12:
 267              	.LBB13:
 268              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 14


  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 15


  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 16


 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 269              		.loc 2 195 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 17


 270              		.syntax unified
 271              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 272 002c 4FF05003 			mov r3, #80												
 273 0030 83F31188 		msr basepri, r3											
 274 0034 BFF36F8F 		isb														
 275 0038 BFF34F8F 		dsb														
 276              	
 277              	@ 0 "" 2
 278              	.LVL29:
 279              		.thumb
 280              		.syntax unified
 281              	.L21:
 282 003c FEE7     		b	.L21
 283              	.L36:
 284              	.LBE13:
 285              	.LBE12:
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 286              		.loc 1 126 0
 287 003e FFF7FEFF 		bl	prvHeapInit
 288              	.LVL30:
 289 0042 E4E7     		b	.L18
 290              	.L20:
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 291              		.loc 1 163 0
 292 0044 002C     		cmp	r4, #0
 293 0046 50D0     		beq	.L31
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 294              		.loc 1 163 0 is_stmt 0 discriminator 1
 295 0048 2E4B     		ldr	r3, .L37+8
 296 004a 1B68     		ldr	r3, [r3]
 297 004c A342     		cmp	r3, r4
 298 004e 4ED3     		bcc	.L32
 299              	.LVL31:
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 300              		.loc 1 168 0 is_stmt 1
 301 0050 2D4B     		ldr	r3, .L37+12
 302 0052 1D68     		ldr	r5, [r3]
 303              	.LVL32:
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 304              		.loc 1 169 0
 305 0054 01E0     		b	.L23
 306              	.LVL33:
 307              	.L33:
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 308              		.loc 1 171 0
 309 0056 2B46     		mov	r3, r5
 310              	.LVL34:
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 311              		.loc 1 172 0
 312 0058 1546     		mov	r5, r2
 313              	.LVL35:
 314              	.L23:
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 315              		.loc 1 169 0
 316 005a 6A68     		ldr	r2, [r5, #4]
 317 005c A242     		cmp	r2, r4
 318 005e 02D2     		bcs	.L22
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 18


 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 319              		.loc 1 169 0 is_stmt 0 discriminator 1
 320 0060 2A68     		ldr	r2, [r5]
 321 0062 002A     		cmp	r2, #0
 322 0064 F7D1     		bne	.L33
 323              	.L22:
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 324              		.loc 1 177 0 is_stmt 1
 325 0066 254A     		ldr	r2, .L37
 326 0068 1268     		ldr	r2, [r2]
 327 006a AA42     		cmp	r2, r5
 328 006c 41D0     		beq	.L34
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 329              		.loc 1 181 0
 330 006e 1E68     		ldr	r6, [r3]
 331 0070 0836     		adds	r6, r6, #8
 332              	.LVL36:
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 333              		.loc 1 185 0
 334 0072 2A68     		ldr	r2, [r5]
 335 0074 1A60     		str	r2, [r3]
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 336              		.loc 1 189 0
 337 0076 6B68     		ldr	r3, [r5, #4]
 338              	.LVL37:
 339 0078 1B1B     		subs	r3, r3, r4
 340 007a 102B     		cmp	r3, #16
 341 007c 10D9     		bls	.L24
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 342              		.loc 1 195 0
 343 007e 2819     		adds	r0, r5, r4
 344              	.LVL38:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 345              		.loc 1 196 0
 346 0080 10F0070F 		tst	r0, #7
 347 0084 08D0     		beq	.L25
 348              	.LBB14:
 349              	.LBB15:
 350              		.loc 2 195 0
 351              		.syntax unified
 352              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 353 0086 4FF05003 			mov r3, #80												
 354 008a 83F31188 		msr basepri, r3											
 355 008e BFF36F8F 		isb														
 356 0092 BFF34F8F 		dsb														
 357              	
 358              	@ 0 "" 2
 359              	.LVL39:
 360              		.thumb
 361              		.syntax unified
 362              	.L26:
 363 0096 FEE7     		b	.L26
 364              	.L25:
 365              	.LBE15:
 366              	.LBE14:
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxBlock->xBlockSize = xWantedSize;
 367              		.loc 1 200 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 19


 368 0098 4360     		str	r3, [r0, #4]
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 369              		.loc 1 201 0
 370 009a 6C60     		str	r4, [r5, #4]
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 371              		.loc 1 204 0
 372 009c FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 373              	.LVL40:
 374              	.L24:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 375              		.loc 1 211 0
 376 00a0 6A68     		ldr	r2, [r5, #4]
 377 00a2 1849     		ldr	r1, .L37+8
 378 00a4 0B68     		ldr	r3, [r1]
 379 00a6 9B1A     		subs	r3, r3, r2
 380 00a8 0B60     		str	r3, [r1]
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 381              		.loc 1 213 0
 382 00aa 1849     		ldr	r1, .L37+16
 383 00ac 0968     		ldr	r1, [r1]
 384 00ae 8B42     		cmp	r3, r1
 385 00b0 01D2     		bcs	.L27
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 386              		.loc 1 215 0
 387 00b2 1649     		ldr	r1, .L37+16
 388 00b4 0B60     		str	r3, [r1]
 389              	.L27:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->pxNextFreeBlock = NULL;
 390              		.loc 1 224 0
 391 00b6 124B     		ldr	r3, .L37+4
 392 00b8 1B68     		ldr	r3, [r3]
 393 00ba 1343     		orrs	r3, r3, r2
 394 00bc 6B60     		str	r3, [r5, #4]
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xNumberOfSuccessfulAllocations++;
 395              		.loc 1 225 0
 396 00be 0023     		movs	r3, #0
 397 00c0 2B60     		str	r3, [r5]
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 398              		.loc 1 226 0
 399 00c2 134A     		ldr	r2, .L37+20
 400 00c4 1368     		ldr	r3, [r2]
 401 00c6 0133     		adds	r3, r3, #1
 402 00c8 1360     		str	r3, [r2]
 403              	.LVL41:
 404              	.L19:
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 405              		.loc 1 245 0
 406 00ca FFF7FEFF 		bl	xTaskResumeAll
 407              	.LVL42:
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return pvReturn;
 408              		.loc 1 261 0
 409 00ce 16F0070F 		tst	r6, #7
 410 00d2 10D0     		beq	.L17
 411              	.LBB16:
 412              	.LBB17:
 413              		.loc 2 195 0
 414              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 20


 415              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 416 00d4 4FF05003 			mov r3, #80												
 417 00d8 83F31188 		msr basepri, r3											
 418 00dc BFF36F8F 		isb														
 419 00e0 BFF34F8F 		dsb														
 420              	
 421              	@ 0 "" 2
 422              	.LVL43:
 423              		.thumb
 424              		.syntax unified
 425              	.L29:
 426 00e4 FEE7     		b	.L29
 427              	.LVL44:
 428              	.L30:
 429              	.LBE17:
 430              	.LBE16:
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 431              		.loc 1 118 0
 432 00e6 0026     		movs	r6, #0
 433 00e8 EFE7     		b	.L19
 434              	.L31:
 435 00ea 0026     		movs	r6, #0
 436 00ec EDE7     		b	.L19
 437              	.L32:
 438 00ee 0026     		movs	r6, #0
 439 00f0 EBE7     		b	.L19
 440              	.LVL45:
 441              	.L34:
 442 00f2 0026     		movs	r6, #0
 443 00f4 E9E7     		b	.L19
 444              	.LVL46:
 445              	.L17:
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 446              		.loc 1 263 0
 447 00f6 3046     		mov	r0, r6
 448 00f8 70BD     		pop	{r4, r5, r6, pc}
 449              	.LVL47:
 450              	.L38:
 451 00fa 00BF     		.align	2
 452              	.L37:
 453 00fc 00000000 		.word	.LANCHOR1
 454 0100 00000000 		.word	.LANCHOR4
 455 0104 00000000 		.word	.LANCHOR3
 456 0108 00000000 		.word	.LANCHOR0
 457 010c 00000000 		.word	.LANCHOR2
 458 0110 00000000 		.word	.LANCHOR5
 459              		.cfi_endproc
 460              	.LFE5:
 462              		.section	.text.vPortFree,"ax",%progbits
 463              		.align	1
 464              		.global	vPortFree
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 468              		.fpu fpv4-sp-d16
 470              	vPortFree:
 471              	.LFB6:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 21


 267:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc = ( uint8_t * ) pv;
 472              		.loc 1 267 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              	.LVL48:
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 477              		.loc 1 271 0
 478 0000 0028     		cmp	r0, #0
 479 0002 34D0     		beq	.L46
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc = ( uint8_t * ) pv;
 480              		.loc 1 267 0
 481 0004 38B5     		push	{r3, r4, r5, lr}
 482              	.LCFI4:
 483              		.cfi_def_cfa_offset 16
 484              		.cfi_offset 3, -16
 485              		.cfi_offset 4, -12
 486              		.cfi_offset 5, -8
 487              		.cfi_offset 14, -4
 488 0006 0446     		mov	r4, r0
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 489              		.loc 1 275 0
 490 0008 A0F10805 		sub	r5, r0, #8
 491              	.LVL49:
 281:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 492              		.loc 1 281 0
 493 000c 50F8042C 		ldr	r2, [r0, #-4]
 494 0010 1749     		ldr	r1, .L49
 495 0012 0968     		ldr	r1, [r1]
 496 0014 0A42     		tst	r2, r1
 497 0016 08D1     		bne	.L41
 498              	.LBB18:
 499              	.LBB19:
 500              		.loc 2 195 0
 501              		.syntax unified
 502              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 503 0018 4FF05003 			mov r3, #80												
 504 001c 83F31188 		msr basepri, r3											
 505 0020 BFF36F8F 		isb														
 506 0024 BFF34F8F 		dsb														
 507              	
 508              	@ 0 "" 2
 509              	.LVL50:
 510              		.thumb
 511              		.syntax unified
 512              	.L42:
 513 0028 FEE7     		b	.L42
 514              	.L41:
 515              	.LBE19:
 516              	.LBE18:
 282:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 517              		.loc 1 282 0
 518 002a 50F8080C 		ldr	r0, [r0, #-8]
 519              	.LVL51:
 520 002e 40B1     		cbz	r0, .L43
 521              	.LBB20:
 522              	.LBB21:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 22


 523              		.loc 2 195 0
 524              		.syntax unified
 525              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 526 0030 4FF05003 			mov r3, #80												
 527 0034 83F31188 		msr basepri, r3											
 528 0038 BFF36F8F 		isb														
 529 003c BFF34F8F 		dsb														
 530              	
 531              	@ 0 "" 2
 532              	.LVL52:
 533              		.thumb
 534              		.syntax unified
 535              	.L44:
 536 0040 FEE7     		b	.L44
 537              	.L43:
 538              	.LBE21:
 539              	.LBE20:
 290:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 540              		.loc 1 290 0
 541 0042 22EA0102 		bic	r2, r2, r1
 542 0046 44F8042C 		str	r2, [r4, #-4]
 292:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 543              		.loc 1 292 0
 544 004a FFF7FEFF 		bl	vTaskSuspendAll
 545              	.LVL53:
 295:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					traceFREE( pv, pxLink->xBlockSize );
 546              		.loc 1 295 0
 547 004e 54F8041C 		ldr	r1, [r4, #-4]
 548 0052 084A     		ldr	r2, .L49+4
 549 0054 1368     		ldr	r3, [r2]
 550 0056 0B44     		add	r3, r3, r1
 551 0058 1360     		str	r3, [r2]
 297:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xNumberOfSuccessfulFrees++;
 552              		.loc 1 297 0
 553 005a 2846     		mov	r0, r5
 554 005c FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 555              	.LVL54:
 298:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 556              		.loc 1 298 0
 557 0060 054A     		ldr	r2, .L49+8
 558 0062 1368     		ldr	r3, [r2]
 559 0064 0133     		adds	r3, r3, #1
 560 0066 1360     		str	r3, [r2]
 300:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 561              		.loc 1 300 0
 562 0068 FFF7FEFF 		bl	xTaskResumeAll
 563              	.LVL55:
 312:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 564              		.loc 1 312 0
 565 006c 38BD     		pop	{r3, r4, r5, pc}
 566              	.LVL56:
 567              	.L46:
 568              	.LCFI5:
 569              		.cfi_def_cfa_offset 0
 570              		.cfi_restore 3
 571              		.cfi_restore 4
 572              		.cfi_restore 5
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 23


 573              		.cfi_restore 14
 574 006e 7047     		bx	lr
 575              	.L50:
 576              		.align	2
 577              	.L49:
 578 0070 00000000 		.word	.LANCHOR4
 579 0074 00000000 		.word	.LANCHOR3
 580 0078 00000000 		.word	.LANCHOR6
 581              		.cfi_endproc
 582              	.LFE6:
 584              		.section	.text.xPortGetFreeHeapSize,"ax",%progbits
 585              		.align	1
 586              		.global	xPortGetFreeHeapSize
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	xPortGetFreeHeapSize:
 593              	.LFB7:
 316:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xFreeBytesRemaining;
 594              		.loc 1 316 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 318:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 599              		.loc 1 318 0
 600 0000 014B     		ldr	r3, .L52
 601 0002 1868     		ldr	r0, [r3]
 602 0004 7047     		bx	lr
 603              	.L53:
 604 0006 00BF     		.align	2
 605              	.L52:
 606 0008 00000000 		.word	.LANCHOR3
 607              		.cfi_endproc
 608              	.LFE7:
 610              		.section	.text.xPortGetMinimumEverFreeHeapSize,"ax",%progbits
 611              		.align	1
 612              		.global	xPortGetMinimumEverFreeHeapSize
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 616              		.fpu fpv4-sp-d16
 618              	xPortGetMinimumEverFreeHeapSize:
 619              	.LFB8:
 322:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xMinimumEverFreeBytesRemaining;
 620              		.loc 1 322 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 324:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 625              		.loc 1 324 0
 626 0000 014B     		ldr	r3, .L55
 627 0002 1868     		ldr	r0, [r3]
 628 0004 7047     		bx	lr
 629              	.L56:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 24


 630 0006 00BF     		.align	2
 631              	.L55:
 632 0008 00000000 		.word	.LANCHOR2
 633              		.cfi_endproc
 634              	.LFE8:
 636              		.section	.text.vPortInitialiseBlocks,"ax",%progbits
 637              		.align	1
 638              		.global	vPortInitialiseBlocks
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 642              		.fpu fpv4-sp-d16
 644              	vPortInitialiseBlocks:
 645              	.LFB9:
 328:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* This just exists to keep the linker quiet. */
 646              		.loc 1 328 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 330:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 651              		.loc 1 330 0
 652 0000 7047     		bx	lr
 653              		.cfi_endproc
 654              	.LFE9:
 656              		.section	.text.vPortGetHeapStats,"ax",%progbits
 657              		.align	1
 658              		.global	vPortGetHeapStats
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv4-sp-d16
 664              	vPortGetHeapStats:
 665              	.LFB12:
 440:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortGetHeapStats( HeapStats_t *pxHeapStats )
 443:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 666              		.loc 1 443 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              	.LVL57:
 671 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 672              	.LCFI6:
 673              		.cfi_def_cfa_offset 24
 674              		.cfi_offset 3, -24
 675              		.cfi_offset 4, -20
 676              		.cfi_offset 5, -16
 677              		.cfi_offset 6, -12
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 0746     		mov	r7, r0
 681              	.LVL58:
 444:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxBlock;
 445:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xBlocks = 0, xMaxSize = 0, xMinSize = portMAX_DELAY; /* portMAX_DELAY used as a portable way
 446:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 25


 447:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	vTaskSuspendAll();
 682              		.loc 1 447 0
 683 0004 FFF7FEFF 		bl	vTaskSuspendAll
 684              	.LVL59:
 448:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 449:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlock = xStart.pxNextFreeBlock;
 685              		.loc 1 449 0
 686 0008 174B     		ldr	r3, .L67
 687 000a 1B68     		ldr	r3, [r3]
 688              	.LVL60:
 450:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 451:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* pxBlock will be NULL if the heap has not been initialised.  The heap
 452:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		is initialised automatically when the first allocation is made. */
 453:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxBlock != NULL )
 689              		.loc 1 453 0
 690 000c 93B1     		cbz	r3, .L63
 445:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 691              		.loc 1 445 0
 692 000e 4FF0FF36 		mov	r6, #-1
 693 0012 0025     		movs	r5, #0
 694 0014 2C46     		mov	r4, r5
 695 0016 04E0     		b	.L62
 696              	.LVL61:
 697              	.L61:
 454:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 455:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			do
 456:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 457:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Increment the number of blocks and record the largest block seen
 458:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				so far. */
 459:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				xBlocks++;
 460:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 461:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( pxBlock->xBlockSize > xMaxSize )
 462:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 463:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xMaxSize = pxBlock->xBlockSize;
 464:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 465:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( pxBlock->xBlockSize < xMinSize )
 467:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 468:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xMinSize = pxBlock->xBlockSize;
 469:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 470:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 471:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Move to the next block in the chain until the last block is
 472:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				reached. */
 473:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxBlock = pxBlock->pxNextFreeBlock;
 698              		.loc 1 473 0
 699 0018 1B68     		ldr	r3, [r3]
 700              	.LVL62:
 474:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			} while( pxBlock != pxEnd );
 701              		.loc 1 474 0
 702 001a 144A     		ldr	r2, .L67+4
 703 001c 1268     		ldr	r2, [r2]
 704 001e 9A42     		cmp	r2, r3
 705 0020 0CD0     		beq	.L59
 706              	.LVL63:
 707              	.L62:
 459:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 708              		.loc 1 459 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 26


 709 0022 0134     		adds	r4, r4, #1
 710              	.LVL64:
 461:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 711              		.loc 1 461 0
 712 0024 5A68     		ldr	r2, [r3, #4]
 713 0026 AA42     		cmp	r2, r5
 714 0028 00D9     		bls	.L60
 463:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 715              		.loc 1 463 0
 716 002a 1546     		mov	r5, r2
 717              	.LVL65:
 718              	.L60:
 466:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 719              		.loc 1 466 0
 720 002c B242     		cmp	r2, r6
 721 002e F3D2     		bcs	.L61
 468:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 722              		.loc 1 468 0
 723 0030 1646     		mov	r6, r2
 724              	.LVL66:
 725 0032 F1E7     		b	.L61
 726              	.LVL67:
 727              	.L63:
 445:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 728              		.loc 1 445 0
 729 0034 4FF0FF36 		mov	r6, #-1
 730 0038 0025     		movs	r5, #0
 731 003a 2C46     		mov	r4, r5
 732              	.LVL68:
 733              	.L59:
 475:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 476:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 477:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xTaskResumeAll();
 734              		.loc 1 477 0
 735 003c FFF7FEFF 		bl	xTaskResumeAll
 736              	.LVL69:
 478:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 479:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxHeapStats->xSizeOfLargestFreeBlockInBytes = xMaxSize;
 737              		.loc 1 479 0
 738 0040 7D60     		str	r5, [r7, #4]
 480:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxHeapStats->xSizeOfSmallestFreeBlockInBytes = xMinSize;
 739              		.loc 1 480 0
 740 0042 BE60     		str	r6, [r7, #8]
 481:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxHeapStats->xNumberOfFreeBlocks = xBlocks;
 741              		.loc 1 481 0
 742 0044 FC60     		str	r4, [r7, #12]
 482:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 483:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	taskENTER_CRITICAL();
 743              		.loc 1 483 0
 744 0046 FFF7FEFF 		bl	vPortEnterCritical
 745              	.LVL70:
 484:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 485:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxHeapStats->xAvailableHeapSpaceInBytes = xFreeBytesRemaining;
 746              		.loc 1 485 0
 747 004a 094B     		ldr	r3, .L67+8
 748 004c 1B68     		ldr	r3, [r3]
 749 004e 3B60     		str	r3, [r7]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 27


 486:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxHeapStats->xNumberOfSuccessfulAllocations = xNumberOfSuccessfulAllocations;
 750              		.loc 1 486 0
 751 0050 084B     		ldr	r3, .L67+12
 752 0052 1B68     		ldr	r3, [r3]
 753 0054 7B61     		str	r3, [r7, #20]
 487:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxHeapStats->xNumberOfSuccessfulFrees = xNumberOfSuccessfulFrees;
 754              		.loc 1 487 0
 755 0056 084B     		ldr	r3, .L67+16
 756 0058 1B68     		ldr	r3, [r3]
 757 005a BB61     		str	r3, [r7, #24]
 488:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxHeapStats->xMinimumEverFreeBytesRemaining = xMinimumEverFreeBytesRemaining;
 758              		.loc 1 488 0
 759 005c 074B     		ldr	r3, .L67+20
 760 005e 1B68     		ldr	r3, [r3]
 761 0060 3B61     		str	r3, [r7, #16]
 489:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 490:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	taskEXIT_CRITICAL();
 762              		.loc 1 490 0
 763 0062 FFF7FEFF 		bl	vPortExitCritical
 764              	.LVL71:
 491:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 765              		.loc 1 491 0
 766 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 767              	.LVL72:
 768              	.L68:
 769              		.align	2
 770              	.L67:
 771 0068 00000000 		.word	.LANCHOR0
 772 006c 00000000 		.word	.LANCHOR1
 773 0070 00000000 		.word	.LANCHOR3
 774 0074 00000000 		.word	.LANCHOR5
 775 0078 00000000 		.word	.LANCHOR6
 776 007c 00000000 		.word	.LANCHOR2
 777              		.cfi_endproc
 778              	.LFE12:
 780              		.section	.bss.pxEnd,"aw",%nobits
 781              		.align	2
 782              		.set	.LANCHOR1,. + 0
 785              	pxEnd:
 786 0000 00000000 		.space	4
 787              		.section	.bss.ucHeap,"aw",%nobits
 788              		.align	2
 791              	ucHeap:
 792 0000 00000000 		.space	10240
 792      00000000 
 792      00000000 
 792      00000000 
 792      00000000 
 793              		.section	.bss.xBlockAllocatedBit,"aw",%nobits
 794              		.align	2
 795              		.set	.LANCHOR4,. + 0
 798              	xBlockAllocatedBit:
 799 0000 00000000 		.space	4
 800              		.section	.bss.xFreeBytesRemaining,"aw",%nobits
 801              		.align	2
 802              		.set	.LANCHOR3,. + 0
 805              	xFreeBytesRemaining:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 28


 806 0000 00000000 		.space	4
 807              		.section	.bss.xMinimumEverFreeBytesRemaining,"aw",%nobits
 808              		.align	2
 809              		.set	.LANCHOR2,. + 0
 812              	xMinimumEverFreeBytesRemaining:
 813 0000 00000000 		.space	4
 814              		.section	.bss.xNumberOfSuccessfulAllocations,"aw",%nobits
 815              		.align	2
 816              		.set	.LANCHOR5,. + 0
 819              	xNumberOfSuccessfulAllocations:
 820 0000 00000000 		.space	4
 821              		.section	.bss.xNumberOfSuccessfulFrees,"aw",%nobits
 822              		.align	2
 823              		.set	.LANCHOR6,. + 0
 826              	xNumberOfSuccessfulFrees:
 827 0000 00000000 		.space	4
 828              		.section	.bss.xStart,"aw",%nobits
 829              		.align	2
 830              		.set	.LANCHOR0,. + 0
 833              	xStart:
 834 0000 00000000 		.space	8
 834      00000000 
 835              		.text
 836              	.Letext0:
 837              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 838              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 839              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 840              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 841              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 842              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 843              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 844              		.file 10 "Inc/FreeRTOSConfig.h"
 845              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 846              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 heap_4.c
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:18     .text.prvHeapInit:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:24     .text.prvHeapInit:00000000 prvHeapInit
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:103    .text.prvHeapInit:0000004c $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:791    .bss.ucHeap:00000000 ucHeap
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:113    .text.prvInsertBlockIntoFreeList:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:119    .text.prvInsertBlockIntoFreeList:00000000 prvInsertBlockIntoFreeList
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:208    .text.prvInsertBlockIntoFreeList:00000050 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:214    .text.pvPortMalloc:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:221    .text.pvPortMalloc:00000000 pvPortMalloc
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:453    .text.pvPortMalloc:000000fc $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:463    .text.vPortFree:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:470    .text.vPortFree:00000000 vPortFree
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:578    .text.vPortFree:00000070 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:585    .text.xPortGetFreeHeapSize:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:592    .text.xPortGetFreeHeapSize:00000000 xPortGetFreeHeapSize
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:606    .text.xPortGetFreeHeapSize:00000008 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:611    .text.xPortGetMinimumEverFreeHeapSize:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:618    .text.xPortGetMinimumEverFreeHeapSize:00000000 xPortGetMinimumEverFreeHeapSize
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:632    .text.xPortGetMinimumEverFreeHeapSize:00000008 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:637    .text.vPortInitialiseBlocks:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:644    .text.vPortInitialiseBlocks:00000000 vPortInitialiseBlocks
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:657    .text.vPortGetHeapStats:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:664    .text.vPortGetHeapStats:00000000 vPortGetHeapStats
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:771    .text.vPortGetHeapStats:00000068 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:781    .bss.pxEnd:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:785    .bss.pxEnd:00000000 pxEnd
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:788    .bss.ucHeap:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:794    .bss.xBlockAllocatedBit:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:798    .bss.xBlockAllocatedBit:00000000 xBlockAllocatedBit
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:801    .bss.xFreeBytesRemaining:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:805    .bss.xFreeBytesRemaining:00000000 xFreeBytesRemaining
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:808    .bss.xMinimumEverFreeBytesRemaining:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:812    .bss.xMinimumEverFreeBytesRemaining:00000000 xMinimumEverFreeBytesRemaining
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:815    .bss.xNumberOfSuccessfulAllocations:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:819    .bss.xNumberOfSuccessfulAllocations:00000000 xNumberOfSuccessfulAllocations
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:822    .bss.xNumberOfSuccessfulFrees:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:826    .bss.xNumberOfSuccessfulFrees:00000000 xNumberOfSuccessfulFrees
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:829    .bss.xStart:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccBWM0NV.s:833    .bss.xStart:00000000 xStart

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
vPortEnterCritical
vPortExitCritical
