ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_ADC1_Init:
  26              	.LFB333:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** 
   2:Src/adc.c     **** #include "adc.h"
   3:Src/adc.c     **** #include "global.h"
   4:Src/adc.c     **** float bus_voltage_ = 0;
   5:Src/adc.c     **** volatile s16 VOLT_ADC_Array[VOLT_SAMPNUM] = {0};								//ï¿½ï¿½Ñ¹Ä£ï¿½ï¿½ï¿½ÅºÅµï¿½ADCÔ­Ê¼Öµ
   6:Src/adc.c     **** volatile s16 TEMP_ADC_Array[TEMP_SAMPNUM] = {0};								//ï¿½Â¶ï¿½Ä£ï¿½ï¿½ï¿½ÅºÅµï¿½ADCÔ­Ê¼Öµ
   7:Src/adc.c     **** volatile s16 VOLT_ADC_Array_Index = 0;
   8:Src/adc.c     **** volatile s16 TEMP_ADC_Array_Index = 0;
   9:Src/adc.c     **** volatile s16 VOLT_Filter = 0;																		//ï¿½ï¿½Ñ¹(mV)
  10:Src/adc.c     **** volatile s16 TEMP_Filter = 0;																		//ï¿½Â¶ï¿½(0.1ï¿½ï¿½)
  11:Src/adc.c     **** volatile u8 Flag_VOLT_ADC_Array_Filled = 0;											//ï¿½ï¿½Ñ¹ADCï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  12:Src/adc.c     **** volatile u8 Flag_TEMP_ADC_Array_Filled = 0;											//ï¿½Â¶ï¿½ADCï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  13:Src/adc.c     **** uint32_t calibration_value[4] = {0};
  14:Src/adc.c     **** #define NUM_POS_AFILTER 32
  15:Src/adc.c     **** s32 Pos_ADC_Array[NUM_POS_AFILTER] = {0};                     //Ì¼Ä¤Î»ï¿½ï¿½ADCï¿½ï¿½Æ½ï¿½ï¿½ï¿½Ë²ï
  16:Src/adc.c     **** s32 Index_Pos_ADC_Array = 0;                                  //Ì¼Ä¤Î»ï¿½ï¿½ADCï¿½ï¿½Æ½ï¿½ï¿½ï¿½Ë²ï
  17:Src/adc.c     **** s32 sum_Pos_ADC_Array = 0;                                  //Ì¼Ä¤Î»ï¿½ï¿½ADCï¿½ï¿½Æ½ï¿½ï¿½ï¿½Ë²ï¿½
  18:Src/adc.c     **** volatile s32 MU_Value_base_0 = 0;
  19:Src/adc.c     **** #define YBP_ARRAY_BIT 3 //5
  20:Src/adc.c     **** #define YBP_ARRAY_SIZE (1<<YBP_ARRAY_BIT)
  21:Src/adc.c     **** volatile uint16_t index_YBP_Array = 0;
  22:Src/adc.c     **** volatile int16_t YBP_Array[YBP_ARRAY_SIZE] = {0};
  23:Src/adc.c     **** volatile int32_t YBP_Sum = 0;
  24:Src/adc.c     **** 
  25:Src/adc.c     **** #define FORCE_ARRAY_BIT 0
  26:Src/adc.c     **** #define FORCE_ARRAY_SIZE (1<<FORCE_ARRAY_BIT)
  27:Src/adc.c     **** volatile uint16_t index_force_Array = 0;
  28:Src/adc.c     **** volatile int16_t force_Array[FORCE_ARRAY_SIZE] = {0};
  29:Src/adc.c     **** volatile int32_t force_Sum = 0;
  30:Src/adc.c     **** 
  31:Src/adc.c     **** ADC_HandleTypeDef hadc1;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 2


  32:Src/adc.c     **** ADC_HandleTypeDef hadc2;
  33:Src/adc.c     **** DMA_HandleTypeDef hdma_adc2;
  34:Src/adc.c     **** volatile int16_t g_Rt_Map[71] = {11,18,23,29,34,12,43,48,52,57,62,68,73,79,86,93,101,110,120,130,14
  35:Src/adc.c     **** };
  36:Src/adc.c     **** 
  37:Src/adc.c     **** volatile uint16_t adc_measurements_[2] = { 0 };
  38:Src/adc.c     **** 
  39:Src/adc.c     **** 
  40:Src/adc.c     **** 
  41:Src/adc.c     **** /**
  42:Src/adc.c     ****   * @brief ADC1 Initialization Function
  43:Src/adc.c     ****   * @param None
  44:Src/adc.c     ****   * @retval None
  45:Src/adc.c     ****   */
  46:Src/adc.c     ****  void MX_ADC1_Init(void)
  47:Src/adc.c     **** {
  28              		.loc 1 47 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 104
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  48:Src/adc.c     **** 
  49:Src/adc.c     **** 	int factor;
  50:Src/adc.c     ****   /* USER CODE BEGIN ADC1_Init 0 */
  51:Src/adc.c     **** 
  52:Src/adc.c     ****   /* USER CODE END ADC1_Init 0 */
  53:Src/adc.c     **** 
  54:Src/adc.c     ****   ADC_MultiModeTypeDef multimode = {0};
  37              		.loc 1 54 0
  38 0002 0024     		movs	r4, #0
  47:Src/adc.c     **** 
  39              		.loc 1 47 0
  40 0004 9AB0     		sub	sp, sp, #104
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 112
  55:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  43              		.loc 1 55 0
  44 0006 2022     		movs	r2, #32
  45 0008 2146     		mov	r1, r4
  46 000a 03A8     		add	r0, sp, #12
  54:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  47              		.loc 1 54 0
  48 000c CDE90044 		strd	r4, r4, [sp]
  49 0010 0294     		str	r4, [sp, #8]
  50              		.loc 1 55 0
  51 0012 FFF7FEFF 		bl	memset
  52              	.LVL0:
  56:Src/adc.c     ****   ADC_InjectionConfTypeDef sConfigInjected = {0};
  53              		.loc 1 56 0
  54 0016 3C22     		movs	r2, #60
  55 0018 2146     		mov	r1, r4
  56 001a 0BA8     		add	r0, sp, #44
  57 001c FFF7FEFF 		bl	memset
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 3


  58              	.LVL1:
  57:Src/adc.c     **** 
  58:Src/adc.c     ****   /* USER CODE BEGIN ADC1_Init 1 */
  59:Src/adc.c     **** 
  60:Src/adc.c     ****   /* USER CODE END ADC1_Init 1 */
  61:Src/adc.c     ****   /** Common config
  62:Src/adc.c     ****   */
  63:Src/adc.c     ****   hadc1.Instance = ADC1;
  59              		.loc 1 63 0
  60 0020 3448     		ldr	r0, .L18
  64:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  61              		.loc 1 64 0
  62 0022 4FF44033 		mov	r3, #196608
  63 0026 4FF0A04E 		mov	lr, #1342177280
  64 002a C0E900E3 		strd	lr, r3, [r0]
  65:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  66:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  67:Src/adc.c     ****   hadc1.Init.GainCompensation = 0;
  68:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  69:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
  65              		.loc 1 69 0
  66 002e 0822     		movs	r2, #8
  67 0030 0123     		movs	r3, #1
  66:Src/adc.c     ****   hadc1.Init.GainCompensation = 0;
  68              		.loc 1 66 0
  69 0032 C0E90244 		strd	r4, r4, [r0, #8]
  67:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  70              		.loc 1 67 0
  71 0036 0461     		str	r4, [r0, #16]
  72              		.loc 1 69 0
  73 0038 C0E90532 		strd	r3, r2, [r0, #20]
  70:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  74              		.loc 1 70 0
  75 003c 0477     		strb	r4, [r0, #28]
  71:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  76              		.loc 1 71 0
  77 003e 4377     		strb	r3, [r0, #29]
  72:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  78              		.loc 1 72 0
  79 0040 0362     		str	r3, [r0, #32]
  73:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = ENABLE;
  80              		.loc 1 73 0
  81 0042 80F82430 		strb	r3, [r0, #36]
  74:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  75:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  82              		.loc 1 75 0
  83 0046 C0E90B44 		strd	r4, r4, [r0, #44]
  76:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  84              		.loc 1 76 0
  85 004a 80F83840 		strb	r4, [r0, #56]
  77:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
  86              		.loc 1 77 0
  87 004e C463     		str	r4, [r0, #60]
  78:Src/adc.c     ****   hadc1.Init.OversamplingMode = DISABLE;
  88              		.loc 1 78 0
  89 0050 80F84040 		strb	r4, [r0, #64]
  79:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 4


  90              		.loc 1 79 0
  91 0054 FFF7FEFF 		bl	HAL_ADC_Init
  92              	.LVL2:
  93 0058 08B1     		cbz	r0, .L2
  94              	.LBB2:
  80:Src/adc.c     ****   {
  81:Src/adc.c     ****     Error_Handler();
  95              		.loc 1 81 0
  96 005a FFF7FEFF 		bl	Error_Handler
  97              	.LVL3:
  98              	.L2:
  99              	.LBE2:
  82:Src/adc.c     ****   }
  83:Src/adc.c     ****   /** Configure the ADC multi-mode
  84:Src/adc.c     ****   */
  85:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
  86:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 100              		.loc 1 86 0
 101 005e 6946     		mov	r1, sp
 102 0060 2448     		ldr	r0, .L18
  85:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 103              		.loc 1 85 0
 104 0062 0094     		str	r4, [sp]
 105              		.loc 1 86 0
 106 0064 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 107              	.LVL4:
 108 0068 08B1     		cbz	r0, .L3
 109              	.LBB3:
  87:Src/adc.c     ****   {
  88:Src/adc.c     ****     Error_Handler();
 110              		.loc 1 88 0
 111 006a FFF7FEFF 		bl	Error_Handler
 112              	.LVL5:
 113              	.L3:
 114              	.LBE3:
  89:Src/adc.c     ****   }
  90:Src/adc.c     ****   /** Configure Regular Channel
  91:Src/adc.c     ****   */
  92:Src/adc.c     **** 	#if 1
  93:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_4;
  94:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 115              		.loc 1 94 0
 116 006e 224C     		ldr	r4, .L18+4
  95:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_247CYCLES_5;
  96:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
  97:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
  98:Src/adc.c     ****   sConfig.Offset = 0;
  99:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 117              		.loc 1 99 0
 118 0070 2048     		ldr	r0, .L18
  94:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_247CYCLES_5;
 119              		.loc 1 94 0
 120 0072 0623     		movs	r3, #6
 121 0074 CDE90343 		strd	r4, r3, [sp, #12]
  95:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_247CYCLES_5;
 122              		.loc 1 95 0
 123 0078 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 5


  97:Src/adc.c     ****   sConfig.Offset = 0;
 124              		.loc 1 97 0
 125 007a 4FF07F0C 		mov	ip, #127
 126 007e 0423     		movs	r3, #4
 127 0080 CDE906C3 		strd	ip, r3, [sp, #24]
 128              		.loc 1 99 0
 129 0084 03A9     		add	r1, sp, #12
  98:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 130              		.loc 1 98 0
 131 0086 0023     		movs	r3, #0
 132 0088 0893     		str	r3, [sp, #32]
 133              		.loc 1 99 0
 134 008a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 135              	.LVL6:
 136 008e 08B1     		cbz	r0, .L4
 137              	.LBB4:
 100:Src/adc.c     ****   {
 101:Src/adc.c     ****     Error_Handler();
 138              		.loc 1 101 0
 139 0090 FFF7FEFF 		bl	Error_Handler
 140              	.LVL7:
 141              	.L4:
 142              	.LBE4:
 102:Src/adc.c     ****   }
 103:Src/adc.c     **** 	#endif
 104:Src/adc.c     ****   /** Configure Injected Channel
 105:Src/adc.c     ****   */
 106:Src/adc.c     **** 
 107:Src/adc.c     **** 	#if 1 
 108:Src/adc.c     ****   sConfigInjected.InjectedChannel = ADC_CHANNEL_1;
 109:Src/adc.c     ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 143              		.loc 1 109 0
 144 0094 194A     		ldr	r2, .L18+8
 145 0096 0923     		movs	r3, #9
 146 0098 CDE90B23 		strd	r2, r3, [sp, #44]
 110:Src/adc.c     ****   sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_24CYCLES_5;
 111:Src/adc.c     ****   sConfigInjected.InjectedSingleDiff = ADC_SINGLE_ENDED;
 147              		.loc 1 111 0
 148 009c 0321     		movs	r1, #3
 149 009e 7F23     		movs	r3, #127
 150 00a0 CDE90D13 		strd	r1, r3, [sp, #52]
 112:Src/adc.c     ****   sConfigInjected.InjectedOffsetNumber = ADC_OFFSET_NONE;
 113:Src/adc.c     ****   sConfigInjected.InjectedOffset = 0;
 151              		.loc 1 113 0
 152 00a4 0420     		movs	r0, #4
 153 00a6 0023     		movs	r3, #0
 114:Src/adc.c     ****   sConfigInjected.InjectedNbrOfConversion = 1;
 154              		.loc 1 114 0
 155 00a8 0122     		movs	r2, #1
 113:Src/adc.c     ****   sConfigInjected.InjectedNbrOfConversion = 1;
 156              		.loc 1 113 0
 157 00aa CDE90F03 		strd	r0, r3, [sp, #60]
 158              		.loc 1 114 0
 159 00ae 1392     		str	r2, [sp, #76]
 115:Src/adc.c     ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 116:Src/adc.c     ****   sConfigInjected.AutoInjectedConv = DISABLE;
 117:Src/adc.c     ****   sConfigInjected.QueueInjectedContext = DISABLE;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 6


 118:Src/adc.c     ****   sConfigInjected.ExternalTrigInjecConv = ADC_EXTERNALTRIGINJEC_T1_TRGO;
 119:Src/adc.c     ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 120:Src/adc.c     ****   sConfigInjected.InjecOversamplingMode = DISABLE;
 121:Src/adc.c     **** 	
 122:Src/adc.c     ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 160              		.loc 1 122 0
 161 00b0 0BA9     		add	r1, sp, #44
 118:Src/adc.c     ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 162              		.loc 1 118 0
 163 00b2 8022     		movs	r2, #128
 164              		.loc 1 122 0
 165 00b4 0F48     		ldr	r0, .L18
 115:Src/adc.c     ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 166              		.loc 1 115 0
 167 00b6 8DF85030 		strb	r3, [sp, #80]
 116:Src/adc.c     ****   sConfigInjected.QueueInjectedContext = DISABLE;
 168              		.loc 1 116 0
 169 00ba 8DF85130 		strb	r3, [sp, #81]
 117:Src/adc.c     ****   sConfigInjected.ExternalTrigInjecConv = ADC_EXTERNALTRIGINJEC_T1_TRGO;
 170              		.loc 1 117 0
 171 00be 8DF85230 		strb	r3, [sp, #82]
 119:Src/adc.c     ****   sConfigInjected.InjecOversamplingMode = DISABLE;
 172              		.loc 1 119 0
 173 00c2 CDE91522 		strd	r2, r2, [sp, #84]
 120:Src/adc.c     **** 	
 174              		.loc 1 120 0
 175 00c6 8DF85C30 		strb	r3, [sp, #92]
 176              		.loc 1 122 0
 177 00ca FFF7FEFF 		bl	HAL_ADCEx_InjectedConfigChannel
 178              	.LVL8:
 179 00ce 08B1     		cbz	r0, .L5
 180              	.LBB5:
 123:Src/adc.c     ****   {
 124:Src/adc.c     ****     Error_Handler();
 181              		.loc 1 124 0
 182 00d0 FFF7FEFF 		bl	Error_Handler
 183              	.LVL9:
 184              	.L5:
 185              	.LBE5:
 125:Src/adc.c     ****   }
 126:Src/adc.c     **** 	#endif
 127:Src/adc.c     **** 	
 128:Src/adc.c     **** //  if (HAL_ADCEx_EnableInjectedQueue(&hadc1) != HAL_OK)
 129:Src/adc.c     **** //  {
 130:Src/adc.c     **** //    Error_Handler();
 131:Src/adc.c     **** //  }
 132:Src/adc.c     ****   /* USER CODE BEGIN ADC1_Init 2 */
 133:Src/adc.c     **** 
 134:Src/adc.c     ****   /* USER CODE END ADC1_Init 2 */
 135:Src/adc.c     **** 
 136:Src/adc.c     **** 	HAL_ADCEx_Calibration_Start(&hadc1,ADC_SINGLE_ENDED);
 186              		.loc 1 136 0
 187 00d4 7F21     		movs	r1, #127
 188 00d6 0748     		ldr	r0, .L18
 189 00d8 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 190              	.LVL10:
 137:Src/adc.c     **** 	factor = HAL_ADCEx_Calibration_GetValue(&hadc1,ADC_SINGLE_ENDED);
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 7


 191              		.loc 1 137 0
 192 00dc 7F21     		movs	r1, #127
 193 00de 0548     		ldr	r0, .L18
 194 00e0 FFF7FEFF 		bl	HAL_ADCEx_Calibration_GetValue
 195              	.LVL11:
 138:Src/adc.c     **** 	HAL_ADCEx_Calibration_SetValue(&hadc1,ADC_SINGLE_ENDED,factor);
 196              		.loc 1 138 0
 197 00e4 7F21     		movs	r1, #127
 198 00e6 0246     		mov	r2, r0
 199 00e8 0248     		ldr	r0, .L18
 200              	.LVL12:
 201 00ea FFF7FEFF 		bl	HAL_ADCEx_Calibration_SetValue
 202              	.LVL13:
 139:Src/adc.c     **** 	
 140:Src/adc.c     **** 	
 141:Src/adc.c     **** 	
 142:Src/adc.c     **** }
 203              		.loc 1 142 0
 204 00ee 1AB0     		add	sp, sp, #104
 205              	.LCFI2:
 206              		.cfi_def_cfa_offset 8
 207              		@ sp needed
 208 00f0 10BD     		pop	{r4, pc}
 209              	.L19:
 210 00f2 00BF     		.align	2
 211              	.L18:
 212 00f4 00000000 		.word	hadc1
 213 00f8 1000C010 		.word	281018384
 214 00fc 02003004 		.word	70254594
 215              		.cfi_endproc
 216              	.LFE333:
 218              		.section	.text.MX_ADC2_Init,"ax",%progbits
 219              		.align	1
 220              		.global	MX_ADC2_Init
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	MX_ADC2_Init:
 227              	.LFB334:
 143:Src/adc.c     **** 
 144:Src/adc.c     **** /**
 145:Src/adc.c     ****   * @brief ADC2 Initialization Function
 146:Src/adc.c     ****   * @param None
 147:Src/adc.c     ****   * @retval None
 148:Src/adc.c     ****   */
 149:Src/adc.c     **** void MX_ADC2_Init(void)
 150:Src/adc.c     **** {
 228              		.loc 1 150 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 96
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 00B5     		push	{lr}
 233              	.LCFI3:
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 14, -4
 236 0002 99B0     		sub	sp, sp, #100
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 8


 237              	.LCFI4:
 238              		.cfi_def_cfa_offset 104
 151:Src/adc.c     ****   int factor;
 152:Src/adc.c     **** 
 153:Src/adc.c     ****   /* USER CODE BEGIN ADC2_Init 0 */
 154:Src/adc.c     **** 
 155:Src/adc.c     ****   /* USER CODE END ADC2_Init 0 */
 156:Src/adc.c     **** 
 157:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
 239              		.loc 1 157 0
 240 0004 2022     		movs	r2, #32
 241 0006 0021     		movs	r1, #0
 242 0008 01A8     		add	r0, sp, #4
 243 000a FFF7FEFF 		bl	memset
 244              	.LVL14:
 158:Src/adc.c     ****   ADC_InjectionConfTypeDef sConfigInjected = {0};
 245              		.loc 1 158 0
 246 000e 3C22     		movs	r2, #60
 247 0010 0021     		movs	r1, #0
 248 0012 09A8     		add	r0, sp, #36
 249 0014 FFF7FEFF 		bl	memset
 250              	.LVL15:
 159:Src/adc.c     ****   /* USER CODE BEGIN ADC2_Init 1 */
 160:Src/adc.c     **** 
 161:Src/adc.c     ****   /* USER CODE END ADC2_Init 1 */
 162:Src/adc.c     ****   /** Common config
 163:Src/adc.c     ****   */
 164:Src/adc.c     ****   hadc2.Instance = ADC2;
 251              		.loc 1 164 0
 252 0018 3D48     		ldr	r0, .L37
 165:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 253              		.loc 1 165 0
 254 001a DFF800C1 		ldr	ip, .L37+12
 166:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 167:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 168:Src/adc.c     ****   hadc2.Init.GainCompensation = 0;
 169:Src/adc.c     ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 170:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 255              		.loc 1 170 0
 256 001e 0122     		movs	r2, #1
 165:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 257              		.loc 1 165 0
 258 0020 4FF44033 		mov	r3, #196608
 259              		.loc 1 170 0
 260 0024 0421     		movs	r1, #4
 261 0026 C0E90521 		strd	r2, r1, [r0, #20]
 165:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 262              		.loc 1 165 0
 263 002a C0E900C3 		strd	ip, r3, [r0]
 171:Src/adc.c     ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 172:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = ENABLE;
 264              		.loc 1 172 0
 265 002e 4277     		strb	r2, [r0, #29]
 166:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 266              		.loc 1 166 0
 267 0030 0023     		movs	r3, #0
 173:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 2;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 9


 268              		.loc 1 173 0
 269 0032 0221     		movs	r1, #2
 174:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 175:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 176:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 177:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 270              		.loc 1 177 0
 271 0034 80F83820 		strb	r2, [r0, #56]
 178:Src/adc.c     ****   hadc2.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 272              		.loc 1 178 0
 273 0038 4FF48052 		mov	r2, #4096
 167:Src/adc.c     ****   hadc2.Init.GainCompensation = 0;
 274              		.loc 1 167 0
 275 003c C0E90233 		strd	r3, r3, [r0, #8]
 168:Src/adc.c     ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 276              		.loc 1 168 0
 277 0040 0361     		str	r3, [r0, #16]
 171:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = ENABLE;
 278              		.loc 1 171 0
 279 0042 0377     		strb	r3, [r0, #28]
 173:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 280              		.loc 1 173 0
 281 0044 0162     		str	r1, [r0, #32]
 174:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 282              		.loc 1 174 0
 283 0046 80F82430 		strb	r3, [r0, #36]
 176:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 284              		.loc 1 176 0
 285 004a C0E90B33 		strd	r3, r3, [r0, #44]
 286              		.loc 1 178 0
 287 004e C263     		str	r2, [r0, #60]
 179:Src/adc.c     ****   hadc2.Init.OversamplingMode = DISABLE;
 288              		.loc 1 179 0
 289 0050 80F84030 		strb	r3, [r0, #64]
 180:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 290              		.loc 1 180 0
 291 0054 FFF7FEFF 		bl	HAL_ADC_Init
 292              	.LVL16:
 293 0058 08B1     		cbz	r0, .L21
 294              	.LBB6:
 181:Src/adc.c     ****   {
 182:Src/adc.c     ****     Error_Handler();
 295              		.loc 1 182 0
 296 005a FFF7FEFF 		bl	Error_Handler
 297              	.LVL17:
 298              	.L21:
 299              	.LBE6:
 183:Src/adc.c     ****   }
 184:Src/adc.c     **** 
 185:Src/adc.c     ****   /** Configure Regular Channel
 186:Src/adc.c     ****   */
 187:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
 188:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 300              		.loc 1 188 0
 301 005e DFF8C0E0 		ldr	lr, .L37+16
 189:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 190:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 10


 191:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 192:Src/adc.c     ****   sConfig.Offset = 0;
 193:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 302              		.loc 1 193 0
 303 0062 2B48     		ldr	r0, .L37
 188:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 304              		.loc 1 188 0
 305 0064 0623     		movs	r3, #6
 306 0066 CDE901E3 		strd	lr, r3, [sp, #4]
 190:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 307              		.loc 1 190 0
 308 006a 0222     		movs	r2, #2
 309 006c 7F23     		movs	r3, #127
 192:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 310              		.loc 1 192 0
 311 006e 0421     		movs	r1, #4
 190:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 312              		.loc 1 190 0
 313 0070 CDE90323 		strd	r2, r3, [sp, #12]
 192:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 314              		.loc 1 192 0
 315 0074 0023     		movs	r3, #0
 316 0076 CDE90513 		strd	r1, r3, [sp, #20]
 317              		.loc 1 193 0
 318 007a 01A9     		add	r1, sp, #4
 319 007c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 320              	.LVL18:
 321 0080 08B1     		cbz	r0, .L22
 322              	.LBB7:
 194:Src/adc.c     ****   {
 195:Src/adc.c     ****     Error_Handler();
 323              		.loc 1 195 0
 324 0082 FFF7FEFF 		bl	Error_Handler
 325              	.LVL19:
 326              	.L22:
 327              	.LBE7:
 196:Src/adc.c     ****   }
 197:Src/adc.c     **** 
 198:Src/adc.c     ****   /** Configure Regular Channel
 199:Src/adc.c     ****   */
 200:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_4;
 201:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 328              		.loc 1 201 0
 329 0086 DFF89CC0 		ldr	ip, .L37+20
 202:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 330              		.loc 1 202 0
 331 008a 2148     		ldr	r0, .L37
 201:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 332              		.loc 1 201 0
 333 008c 0C23     		movs	r3, #12
 334              		.loc 1 202 0
 335 008e 01A9     		add	r1, sp, #4
 201:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 336              		.loc 1 201 0
 337 0090 CDE901C3 		strd	ip, r3, [sp, #4]
 338              		.loc 1 202 0
 339 0094 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 11


 340              	.LVL20:
 341 0098 08B1     		cbz	r0, .L23
 342              	.LBB8:
 203:Src/adc.c     ****   {
 204:Src/adc.c     ****     Error_Handler();
 343              		.loc 1 204 0
 344 009a FFF7FEFF 		bl	Error_Handler
 345              	.LVL21:
 346              	.L23:
 347              	.LBE8:
 205:Src/adc.c     ****   }
 206:Src/adc.c     **** 	
 207:Src/adc.c     ****   sConfigInjected.InjectedChannel = ADC_CHANNEL_2;
 208:Src/adc.c     ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 348              		.loc 1 208 0
 349 009e 1D4A     		ldr	r2, .L37+4
 350 00a0 0923     		movs	r3, #9
 351 00a2 CDE90923 		strd	r2, r3, [sp, #36]
 209:Src/adc.c     ****   sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_24CYCLES_5;
 210:Src/adc.c     ****   sConfigInjected.InjectedSingleDiff = ADC_SINGLE_ENDED;
 352              		.loc 1 210 0
 353 00a6 0321     		movs	r1, #3
 354 00a8 7F23     		movs	r3, #127
 355 00aa CDE90B13 		strd	r1, r3, [sp, #44]
 211:Src/adc.c     ****   sConfigInjected.InjectedOffsetNumber = ADC_OFFSET_NONE;
 212:Src/adc.c     ****   sConfigInjected.InjectedOffset = 0;
 356              		.loc 1 212 0
 357 00ae 0420     		movs	r0, #4
 358 00b0 0023     		movs	r3, #0
 213:Src/adc.c     ****   sConfigInjected.InjectedNbrOfConversion = 1;
 359              		.loc 1 213 0
 360 00b2 0122     		movs	r2, #1
 212:Src/adc.c     ****   sConfigInjected.InjectedNbrOfConversion = 1;
 361              		.loc 1 212 0
 362 00b4 CDE90D03 		strd	r0, r3, [sp, #52]
 363              		.loc 1 213 0
 364 00b8 1192     		str	r2, [sp, #68]
 214:Src/adc.c     ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 215:Src/adc.c     ****   sConfigInjected.AutoInjectedConv = DISABLE;
 216:Src/adc.c     ****   sConfigInjected.QueueInjectedContext = DISABLE;
 217:Src/adc.c     ****   sConfigInjected.ExternalTrigInjecConv = ADC_EXTERNALTRIGINJEC_T1_TRGO;
 218:Src/adc.c     ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 219:Src/adc.c     ****   sConfigInjected.InjecOversamplingMode = DISABLE;
 220:Src/adc.c     ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc2, &sConfigInjected) != HAL_OK)
 365              		.loc 1 220 0
 366 00ba 09A9     		add	r1, sp, #36
 217:Src/adc.c     ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 367              		.loc 1 217 0
 368 00bc 8022     		movs	r2, #128
 369              		.loc 1 220 0
 370 00be 1448     		ldr	r0, .L37
 214:Src/adc.c     ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 371              		.loc 1 214 0
 372 00c0 8DF84830 		strb	r3, [sp, #72]
 215:Src/adc.c     ****   sConfigInjected.QueueInjectedContext = DISABLE;
 373              		.loc 1 215 0
 374 00c4 8DF84930 		strb	r3, [sp, #73]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 12


 216:Src/adc.c     ****   sConfigInjected.ExternalTrigInjecConv = ADC_EXTERNALTRIGINJEC_T1_TRGO;
 375              		.loc 1 216 0
 376 00c8 8DF84A30 		strb	r3, [sp, #74]
 218:Src/adc.c     ****   sConfigInjected.InjecOversamplingMode = DISABLE;
 377              		.loc 1 218 0
 378 00cc CDE91322 		strd	r2, r2, [sp, #76]
 219:Src/adc.c     ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc2, &sConfigInjected) != HAL_OK)
 379              		.loc 1 219 0
 380 00d0 8DF85430 		strb	r3, [sp, #84]
 381              		.loc 1 220 0
 382 00d4 FFF7FEFF 		bl	HAL_ADCEx_InjectedConfigChannel
 383              	.LVL22:
 384 00d8 08B1     		cbz	r0, .L24
 385              	.LBB9:
 221:Src/adc.c     ****   {
 222:Src/adc.c     ****     Error_Handler();
 386              		.loc 1 222 0
 387 00da FFF7FEFF 		bl	Error_Handler
 388              	.LVL23:
 389              	.L24:
 390              	.LBE9:
 223:Src/adc.c     ****   }
 224:Src/adc.c     ****   /* USER CODE BEGIN ADC2_Init 2 */
 225:Src/adc.c     **** 
 226:Src/adc.c     ****   /* USER CODE END ADC2_Init 2 */
 227:Src/adc.c     **** 
 228:Src/adc.c     **** 	
 229:Src/adc.c     ****   HAL_ADCEx_Calibration_Start(&hadc2, ADC_SINGLE_ENDED);
 391              		.loc 1 229 0
 392 00de 7F21     		movs	r1, #127
 393 00e0 0B48     		ldr	r0, .L37
 394 00e2 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 395              	.LVL24:
 230:Src/adc.c     ****   factor = HAL_ADCEx_Calibration_GetValue(&hadc2, ADC_SINGLE_ENDED);
 396              		.loc 1 230 0
 397 00e6 7F21     		movs	r1, #127
 398 00e8 0948     		ldr	r0, .L37
 399 00ea FFF7FEFF 		bl	HAL_ADCEx_Calibration_GetValue
 400              	.LVL25:
 231:Src/adc.c     ****   HAL_ADCEx_Calibration_SetValue(&hadc2, ADC_SINGLE_ENDED, factor);
 401              		.loc 1 231 0
 402 00ee 7F21     		movs	r1, #127
 403 00f0 0246     		mov	r2, r0
 404 00f2 0748     		ldr	r0, .L37
 405              	.LVL26:
 406 00f4 FFF7FEFF 		bl	HAL_ADCEx_Calibration_SetValue
 407              	.LVL27:
 232:Src/adc.c     **** 	
 233:Src/adc.c     ****   HAL_ADCEx_InjectedStart(&hadc2);
 408              		.loc 1 233 0
 409 00f8 0548     		ldr	r0, .L37
 410 00fa FFF7FEFF 		bl	HAL_ADCEx_InjectedStart
 411              	.LVL28:
 234:Src/adc.c     ****   HAL_ADC_Start_DMA(&hadc2, (uint32_t*)(adc_measurements_), 2);
 412              		.loc 1 234 0
 413 00fe 0222     		movs	r2, #2
 414 0100 0549     		ldr	r1, .L37+8
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 13


 415 0102 0348     		ldr	r0, .L37
 416 0104 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 417              	.LVL29:
 235:Src/adc.c     **** }
 418              		.loc 1 235 0
 419 0108 19B0     		add	sp, sp, #100
 420              	.LCFI5:
 421              		.cfi_def_cfa_offset 4
 422              		@ sp needed
 423 010a 5DF804FB 		ldr	pc, [sp], #4
 424              	.L38:
 425 010e 00BF     		.align	2
 426              	.L37:
 427 0110 00000000 		.word	hadc2
 428 0114 04006008 		.word	140509188
 429 0118 00000000 		.word	.LANCHOR0
 430 011c 00010050 		.word	1342177536
 431 0120 0800900C 		.word	210763784
 432 0124 1000C010 		.word	281018384
 433              		.cfi_endproc
 434              	.LFE334:
 436              		.global	__aeabi_f2d
 437              		.global	__aeabi_dmul
 438              		.global	__aeabi_dadd
 439              		.global	__aeabi_d2f
 440              		.section	.text.start_temperature_adc,"ax",%progbits
 441              		.align	1
 442              		.global	start_temperature_adc
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv4-sp-d16
 448              	start_temperature_adc:
 449              	.LFB335:
 236:Src/adc.c     **** 
 237:Src/adc.c     **** 
 238:Src/adc.c     **** 
 239:Src/adc.c     **** 
 240:Src/adc.c     **** 
 241:Src/adc.c     **** void start_temperature_adc(void)
 242:Src/adc.c     **** {
 450              		.loc 1 242 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454 0000 D0B5     		push	{r4, r6, r7, lr}
 455              	.LCFI6:
 456              		.cfi_def_cfa_offset 16
 457              		.cfi_offset 4, -16
 458              		.cfi_offset 6, -12
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 243:Src/adc.c     **** 	HAL_ADC_Start(&hadc1);
 461              		.loc 1 243 0
 462 0002 1D4C     		ldr	r4, .L40+8
 242:Src/adc.c     **** 	HAL_ADC_Start(&hadc1);
 463              		.loc 1 242 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 14


 464 0004 2DED028B 		vpush.64	{d8}
 465              	.LCFI7:
 466              		.cfi_def_cfa_offset 24
 467              		.cfi_offset 80, -24
 468              		.cfi_offset 81, -20
 469              		.loc 1 243 0
 470 0008 2046     		mov	r0, r4
 471 000a FFF7FEFF 		bl	HAL_ADC_Start
 472              	.LVL30:
 244:Src/adc.c     **** 	//g_CmdMap[CMD_TEMP] = get_temperature_value(hadc1.Instance->DR);
 245:Src/adc.c     **** 	float bus_voltage = ((float)(26.833f*3.3f*(hadc1.Instance->DR)))/4096.0f;
 473              		.loc 1 245 0
 474 000e 2368     		ldr	r3, [r4]
 246:Src/adc.c     **** 	bus_voltage_ += 0.1 * (bus_voltage - bus_voltage_);
 475              		.loc 1 246 0
 476 0010 1A4C     		ldr	r4, .L40+12
 245:Src/adc.c     **** 	bus_voltage_ += 0.1 * (bus_voltage - bus_voltage_);
 477              		.loc 1 245 0
 478 0012 D3ED107A 		vldr.32	s15, [r3, #64]	@ int
 479              	.LVL31:
 480 0016 9FED1A7A 		vldr.32	s14, .L40+16
 481              		.loc 1 246 0
 482 001a 94ED008A 		vldr.32	s16, [r4]
 245:Src/adc.c     **** 	bus_voltage_ += 0.1 * (bus_voltage - bus_voltage_);
 483              		.loc 1 245 0
 484 001e F8EE677A 		vcvt.f32.u32	s15, s15
 485              	.LVL32:
 486              		.loc 1 246 0
 487 0022 F0EE486A 		vmov.f32	s13, s16
 245:Src/adc.c     **** 	bus_voltage_ += 0.1 * (bus_voltage - bus_voltage_);
 488              		.loc 1 245 0
 489 0026 67EE877A 		vmul.f32	s15, s15, s14
 490              		.loc 1 246 0
 491 002a 9FED167A 		vldr.32	s14, .L40+20
 492 002e D7EE876A 		vfnms.f32	s13, s15, s14
 493 0032 16EE900A 		vmov	r0, s13
 494 0036 FFF7FEFF 		bl	__aeabi_f2d
 495              	.LVL33:
 496 003a 0DA3     		adr	r3, .L40
 497 003c D3E90023 		ldrd	r2, [r3]
 498 0040 FFF7FEFF 		bl	__aeabi_dmul
 499              	.LVL34:
 500 0044 0646     		mov	r6, r0
 501 0046 18EE100A 		vmov	r0, s16
 502 004a 0F46     		mov	r7, r1
 503 004c FFF7FEFF 		bl	__aeabi_f2d
 504              	.LVL35:
 505 0050 0246     		mov	r2, r0
 506 0052 0B46     		mov	r3, r1
 507 0054 3046     		mov	r0, r6
 508 0056 3946     		mov	r1, r7
 509 0058 FFF7FEFF 		bl	__aeabi_dadd
 510              	.LVL36:
 511 005c FFF7FEFF 		bl	__aeabi_d2f
 512              	.LVL37:
 247:Src/adc.c     **** 	g_CmdMap[CMD_TEMP] = 0;
 248:Src/adc.c     **** }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 15


 513              		.loc 1 248 0
 514 0060 BDEC028B 		vldm	sp!, {d8}
 515              	.LCFI8:
 516              		.cfi_restore 80
 517              		.cfi_restore 81
 518              		.cfi_def_cfa_offset 16
 247:Src/adc.c     **** 	g_CmdMap[CMD_TEMP] = 0;
 519              		.loc 1 247 0
 520 0064 084B     		ldr	r3, .L40+24
 246:Src/adc.c     **** 	g_CmdMap[CMD_TEMP] = 0;
 521              		.loc 1 246 0
 522 0066 2060     		str	r0, [r4]	@ float
 247:Src/adc.c     **** 	g_CmdMap[CMD_TEMP] = 0;
 523              		.loc 1 247 0
 524 0068 0022     		movs	r2, #0
 525 006a A3F85620 		strh	r2, [r3, #86]	@ movhi
 526              		.loc 1 248 0
 527 006e D0BD     		pop	{r4, r6, r7, pc}
 528              	.L41:
 529              		.align	3
 530              	.L40:
 531 0070 9A999999 		.word	-1717986918
 532 0074 9999B93F 		.word	1069128089
 533 0078 00000000 		.word	hadc1
 534 007c 00000000 		.word	.LANCHOR1
 535 0080 0919B142 		.word	1118902537
 536 0084 00008039 		.word	964689920
 537 0088 00000000 		.word	g_CmdMap
 538              		.cfi_endproc
 539              	.LFE335:
 541              		.section	.text.get_average_forceSensor_adc,"ax",%progbits
 542              		.align	1
 543              		.global	get_average_forceSensor_adc
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv4-sp-d16
 549              	get_average_forceSensor_adc:
 550              	.LFB336:
 249:Src/adc.c     **** 
 250:Src/adc.c     **** 
 251:Src/adc.c     **** 
 252:Src/adc.c     **** 
 253:Src/adc.c     **** 
 254:Src/adc.c     **** 
 255:Src/adc.c     **** 
 256:Src/adc.c     **** //ADC2->JDR3  g_CmdMap[CMD_YBP_ADC_12BIT]  g_CmdMap[CMD_FORCE_ACT_RAW_PU]  g_CmdMap[CMD_FORCE_ACT_P
 257:Src/adc.c     **** void get_average_forceSensor_adc(void)
 258:Src/adc.c     **** {
 551              		.loc 1 258 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              	.LVL38:
 259:Src/adc.c     **** 	s16 data_in=0,data_out=0;	
 260:Src/adc.c     **** 	data_in = ADC2->JDR2;
 261:Src/adc.c     **** 	data_out = YBP_Array[index_YBP_Array];
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 16


 556              		.loc 1 261 0
 557 0000 1048     		ldr	r0, .L43
 260:Src/adc.c     **** 	data_out = YBP_Array[index_YBP_Array];
 558              		.loc 1 260 0
 559 0002 114B     		ldr	r3, .L43+4
 560              		.loc 1 261 0
 561 0004 114A     		ldr	r2, .L43+8
 260:Src/adc.c     **** 	data_out = YBP_Array[index_YBP_Array];
 562              		.loc 1 260 0
 563 0006 D3F88410 		ldr	r1, [r3, #132]
 564              		.loc 1 261 0
 565 000a 0388     		ldrh	r3, [r0]
 566 000c 9BB2     		uxth	r3, r3
 258:Src/adc.c     **** 	s16 data_in=0,data_out=0;	
 567              		.loc 1 258 0
 568 000e 10B5     		push	{r4, lr}
 569              	.LCFI9:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 4, -8
 572              		.cfi_offset 14, -4
 573              		.loc 1 261 0
 574 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 575 0014 1CB2     		sxth	r4, r3
 262:Src/adc.c     **** 	YBP_Array[index_YBP_Array] = data_in;
 576              		.loc 1 262 0
 577 0016 0388     		ldrh	r3, [r0]
 578 0018 9BB2     		uxth	r3, r3
 260:Src/adc.c     **** 	data_out = YBP_Array[index_YBP_Array];
 579              		.loc 1 260 0
 580 001a 09B2     		sxth	r1, r1
 581              	.LVL39:
 582              		.loc 1 262 0
 583 001c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 263:Src/adc.c     **** 	index_YBP_Array= (index_YBP_Array + 1)%YBP_ARRAY_SIZE;
 584              		.loc 1 263 0
 585 0020 0288     		ldrh	r2, [r0]
 586 0022 0132     		adds	r2, r2, #1
 587 0024 02F00702 		and	r2, r2, #7
 588 0028 0280     		strh	r2, [r0]	@ movhi
 264:Src/adc.c     **** 	YBP_Sum = YBP_Sum - data_out + data_in;
 589              		.loc 1 264 0
 590 002a 094A     		ldr	r2, .L43+12
 591 002c 1368     		ldr	r3, [r2]
 592 002e 1B1B     		subs	r3, r3, r4
 593 0030 0B44     		add	r3, r3, r1
 594 0032 1360     		str	r3, [r2]
 265:Src/adc.c     **** 	g_CmdMap[CMD_YBP_ADC_12BIT] = YBP_Sum>>YBP_ARRAY_BIT;	
 595              		.loc 1 265 0
 596 0034 1368     		ldr	r3, [r2]
 597 0036 074A     		ldr	r2, .L43+16
 598 0038 43F3CF03 		sbfx	r3, r3, #3, #16
 599 003c A2F86830 		strh	r3, [r2, #104]	@ movhi
 266:Src/adc.c     **** }
 600              		.loc 1 266 0
 601 0040 10BD     		pop	{r4, pc}
 602              	.L44:
 603 0042 00BF     		.align	2
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 17


 604              	.L43:
 605 0044 00000000 		.word	.LANCHOR2
 606 0048 00010050 		.word	1342177536
 607 004c 00000000 		.word	.LANCHOR3
 608 0050 00000000 		.word	.LANCHOR4
 609 0054 00000000 		.word	g_CmdMap
 610              		.cfi_endproc
 611              	.LFE336:
 613              		.global	__aeabi_ldivmod
 614              		.section	.text.get_average_force_data,"ax",%progbits
 615              		.align	1
 616              		.global	get_average_force_data
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu fpv4-sp-d16
 622              	get_average_force_data:
 623              	.LFB337:
 267:Src/adc.c     **** void get_average_force_data(void)
 268:Src/adc.c     **** {
 624              		.loc 1 268 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              	.LVL40:
 629 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 630              	.LCFI10:
 631              		.cfi_def_cfa_offset 24
 632              		.cfi_offset 3, -24
 633              		.cfi_offset 4, -20
 634              		.cfi_offset 5, -16
 635              		.cfi_offset 6, -12
 636              		.cfi_offset 7, -8
 637              		.cfi_offset 14, -4
 269:Src/adc.c     **** 	s16 force_act_raw_pu = 0,data_in=0,data_out=0;
 270:Src/adc.c     **** 	if(g_CmdMap[SYS_YBP_ADC_DIR] == 0)
 638              		.loc 1 270 0
 639 0002 214C     		ldr	r4, .L52
 640 0004 B4F89A32 		ldrh	r3, [r4, #666]
 641 0008 1BB2     		sxth	r3, r3
 642 000a 002B     		cmp	r3, #0
 643 000c 32D1     		bne	.L46
 271:Src/adc.c     **** 	{
 272:Src/adc.c     **** 		force_act_raw_pu = ((int64_t)(g_CmdMap[CMD_YBP_ADC_12BIT] - g_CmdMap[SYS_YBP_BASE_VALUE_12BIT])*1
 644              		.loc 1 272 0
 645 000e B4F86810 		ldrh	r1, [r4, #104]
 646 0012 B4F89632 		ldrh	r3, [r4, #662]
 647 0016 09B2     		sxth	r1, r1
 648              	.L50:
 273:Src/adc.c     **** 	}
 274:Src/adc.c     **** 	else
 275:Src/adc.c     **** 	{
 276:Src/adc.c     **** 		force_act_raw_pu = ((int64_t)(g_CmdMap[SYS_YBP_BASE_VALUE_12BIT] - g_CmdMap[CMD_YBP_ADC_12BIT])*1
 649              		.loc 1 276 0
 650 0018 1BB2     		sxth	r3, r3
 651 001a C91A     		subs	r1, r1, r3
 652 001c B4F89822 		ldrh	r2, [r4, #664]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 18


 653 0020 CF17     		asrs	r7, r1, #31
 654 0022 12B2     		sxth	r2, r2
 655 0024 BD03     		lsls	r5, r7, #14
 656 0026 D317     		asrs	r3, r2, #31
 657 0028 8803     		lsls	r0, r1, #14
 658 002a 45EA9141 		orr	r1, r5, r1, lsr #18
 659 002e FFF7FEFF 		bl	__aeabi_ldivmod
 660              	.LVL41:
 277:Src/adc.c     **** 	}
 278:Src/adc.c     **** 	//
 279:Src/adc.c     **** 	if(g_CmdMap[CMD_FORCE_DIR] == 0)
 661              		.loc 1 279 0
 662 0032 638D     		ldrh	r3, [r4, #42]
 663 0034 1BB2     		sxth	r3, r3
 276:Src/adc.c     **** 	}
 664              		.loc 1 276 0
 665 0036 00B2     		sxth	r0, r0
 666              	.LVL42:
 667              		.loc 1 279 0
 668 0038 13BB     		cbnz	r3, .L48
 669              	.LVL43:
 670              	.L51:
 280:Src/adc.c     **** 	{
 281:Src/adc.c     **** 		g_CmdMap[CMD_FORCE_ACT_RAW_PU] = force_act_raw_pu;
 282:Src/adc.c     **** 	}
 283:Src/adc.c     **** 	else
 284:Src/adc.c     **** 	{
 285:Src/adc.c     **** 		g_CmdMap[CMD_FORCE_ACT_RAW_PU] = 0-force_act_raw_pu;
 286:Src/adc.c     **** 	}	
 287:Src/adc.c     **** 	data_in = g_CmdMap[CMD_FORCE_ACT_RAW_PU];
 288:Src/adc.c     **** 	data_out = force_Array[index_force_Array];
 671              		.loc 1 288 0
 672 003a 144A     		ldr	r2, .L52+4
 285:Src/adc.c     **** 	}	
 673              		.loc 1 285 0
 674 003c A4F85A00 		strh	r0, [r4, #90]	@ movhi
 287:Src/adc.c     **** 	data_out = force_Array[index_force_Array];
 675              		.loc 1 287 0
 676 0040 B4F85A30 		ldrh	r3, [r4, #90]
 677              	.LVL44:
 678              		.loc 1 288 0
 679 0044 1188     		ldrh	r1, [r2]
 680 0046 124D     		ldr	r5, .L52+8
 681 0048 89B2     		uxth	r1, r1
 682 004a 35F81110 		ldrh	r1, [r5, r1, lsl #1]
 683 004e 08B2     		sxth	r0, r1
 684              	.LVL45:
 289:Src/adc.c     **** 	force_Array[index_force_Array] = data_in;
 685              		.loc 1 289 0
 686 0050 1188     		ldrh	r1, [r2]
 687              	.LVL46:
 688 0052 89B2     		uxth	r1, r1
 689 0054 25F81130 		strh	r3, [r5, r1, lsl #1]	@ movhi
 290:Src/adc.c     **** 	index_force_Array= (index_force_Array + 1)%FORCE_ARRAY_SIZE;
 690              		.loc 1 290 0
 691 0058 1188     		ldrh	r1, [r2]
 692 005a 0021     		movs	r1, #0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 19


 693 005c 1180     		strh	r1, [r2]	@ movhi
 291:Src/adc.c     **** 	force_Sum = force_Sum - data_out + data_in;
 694              		.loc 1 291 0
 695 005e 0D4A     		ldr	r2, .L52+12
 696 0060 1168     		ldr	r1, [r2]
 697 0062 091A     		subs	r1, r1, r0
 698 0064 01FA83F3 		sxtah	r3, r1, r3
 699              	.LVL47:
 700 0068 1360     		str	r3, [r2]
 292:Src/adc.c     **** 	g_CmdMap[CMD_FORCE_ACT_PU] = force_Sum>>FORCE_ARRAY_BIT;
 701              		.loc 1 292 0
 702 006a 1368     		ldr	r3, [r2]
 703 006c 1BB2     		sxth	r3, r3
 704 006e A4F85230 		strh	r3, [r4, #82]	@ movhi
 293:Src/adc.c     **** }
 705              		.loc 1 293 0
 706 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 707              	.LVL48:
 708              	.L46:
 276:Src/adc.c     **** 	}
 709              		.loc 1 276 0
 710 0074 B4F89612 		ldrh	r1, [r4, #662]
 711 0078 B4F86830 		ldrh	r3, [r4, #104]
 712 007c 09B2     		sxth	r1, r1
 713 007e CBE7     		b	.L50
 714              	.LVL49:
 715              	.L48:
 285:Src/adc.c     **** 	}	
 716              		.loc 1 285 0
 717 0080 4042     		negs	r0, r0
 718              	.LVL50:
 719 0082 00B2     		sxth	r0, r0
 720              	.LVL51:
 721 0084 D9E7     		b	.L51
 722              	.L53:
 723 0086 00BF     		.align	2
 724              	.L52:
 725 0088 00000000 		.word	g_CmdMap
 726 008c 00000000 		.word	.LANCHOR5
 727 0090 00000000 		.word	.LANCHOR6
 728 0094 00000000 		.word	.LANCHOR7
 729              		.cfi_endproc
 730              	.LFE337:
 732              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 733              		.align	1
 734              		.global	ADC1_2_IRQHandler
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv4-sp-d16
 740              	ADC1_2_IRQHandler:
 741              	.LFB338:
 294:Src/adc.c     **** //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ø¹ï¿½
 295:Src/adc.c     **** //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 296:Src/adc.c     **** //ï¿½ï¿½ï¿½ï¿½Ä£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 297:Src/adc.c     **** void ADC1_2_IRQHandler(void)////ADC3_JEOCï¿½Ð¶ï¿½     Ö´ï¿½ï¿½Æµï¿½ï¿½ï¿½ï¿½PWMÆµï¿½ï¿½ï¿½ï¿½Í¬
 298:Src/adc.c     **** { 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 20


 742              		.loc 1 298 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 299:Src/adc.c     ****   if( __HAL_ADC_GET_IT_SOURCE(&hadc1,ADC_IT_JEOS)!=RESET)
 747              		.loc 1 299 0
 748 0000 064B     		ldr	r3, .L56
 749 0002 1B68     		ldr	r3, [r3]
 750 0004 5B68     		ldr	r3, [r3, #4]
 751 0006 5B06     		lsls	r3, r3, #25
 752 0008 07D5     		bpl	.L54
 300:Src/adc.c     **** 	 {
 301:Src/adc.c     **** //		 HAL_GPIO_WritePin(GPIOA,GPIO_PIN_6,1);
 302:Src/adc.c     **** 			ADC1->ISR |= (u32)ADC_FLAG_JEOC; 
 753              		.loc 1 302 0
 754 000a 4FF0A042 		mov	r2, #1342177280
 755 000e 1368     		ldr	r3, [r2]
 756 0010 43F02003 		orr	r3, r3, #32
 757 0014 1360     		str	r3, [r2]
 303:Src/adc.c     **** 			ServoPro_Fast();
 758              		.loc 1 303 0
 759 0016 FFF7FEBF 		b	ServoPro_Fast
 760              	.LVL52:
 761              	.L54:
 304:Src/adc.c     **** //			get_average_forceSensor_adc();
 305:Src/adc.c     **** //		 HAL_GPIO_WritePin(GPIOA,GPIO_PIN_6,0);
 306:Src/adc.c     **** 	 }
 307:Src/adc.c     **** }
 762              		.loc 1 307 0
 763 001a 7047     		bx	lr
 764              	.L57:
 765              		.align	2
 766              	.L56:
 767 001c 00000000 		.word	hadc1
 768              		.cfi_endproc
 769              	.LFE338:
 771              		.section	.text.Get_VOLT_Filter,"ax",%progbits
 772              		.align	1
 773              		.global	Get_VOLT_Filter
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv4-sp-d16
 779              	Get_VOLT_Filter:
 780              	.LFB339:
 308:Src/adc.c     **** s32 Get_VOLT_Filter(void) //Flag_VOLT_ADC_Array_Filled==1Ê±Ö´ï¿½ï¿½
 309:Src/adc.c     **** {
 781              		.loc 1 309 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              		@ link register save eliminated.
 786              	.LVL53:
 310:Src/adc.c     **** 	s16 i = 0;
 311:Src/adc.c     **** 	s32 sum = 0;
 312:Src/adc.c     **** 	Flag_TEMP_ADC_Array_Filled = 0;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 21


 787              		.loc 1 312 0
 788 0000 0C4A     		ldr	r2, .L61
 313:Src/adc.c     **** 	sum = 0;
 314:Src/adc.c     **** 	for(i=0;i<VOLT_SAMPNUM;i++)
 315:Src/adc.c     **** 	{
 316:Src/adc.c     **** 		sum = sum + VOLT_ADC_Array[i];
 789              		.loc 1 316 0
 790 0002 0D48     		ldr	r0, .L61+4
 312:Src/adc.c     **** 	sum = 0;
 791              		.loc 1 312 0
 792 0004 0023     		movs	r3, #0
 793 0006 1370     		strb	r3, [r2]
 313:Src/adc.c     **** 	sum = 0;
 794              		.loc 1 313 0
 795 0008 1A46     		mov	r2, r3
 796              	.LVL54:
 797              	.L59:
 798              		.loc 1 316 0 discriminator 3
 799 000a 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 800 000e 0133     		adds	r3, r3, #1
 801              	.LVL55:
 314:Src/adc.c     **** 	{
 802              		.loc 1 314 0 discriminator 3
 803 0010 142B     		cmp	r3, #20
 804              		.loc 1 316 0 discriminator 3
 805 0012 02FA81F2 		sxtah	r2, r2, r1
 806              	.LVL56:
 314:Src/adc.c     **** 	{
 807              		.loc 1 314 0 discriminator 3
 808 0016 F8D1     		bne	.L59
 317:Src/adc.c     **** 	}
 318:Src/adc.c     **** 	VOLT_Filter = (800*sum)/(VOLT_SAMPNUM*905);
 809              		.loc 1 318 0
 810 0018 4FF44873 		mov	r3, #800
 811 001c 5343     		muls	r3, r2, r3
 812 001e 44F2B462 		movw	r2, #18100
 813              	.LVL57:
 814 0022 93FBF2F3 		sdiv	r3, r3, r2
 815 0026 054A     		ldr	r2, .L61+8
 816 0028 1BB2     		sxth	r3, r3
 817 002a 1380     		strh	r3, [r2]	@ movhi
 319:Src/adc.c     **** 	return VOLT_Filter;
 818              		.loc 1 319 0
 819 002c 1088     		ldrh	r0, [r2]
 320:Src/adc.c     **** }
 820              		.loc 1 320 0
 821 002e 00B2     		sxth	r0, r0
 822 0030 7047     		bx	lr
 823              	.L62:
 824 0032 00BF     		.align	2
 825              	.L61:
 826 0034 00000000 		.word	.LANCHOR8
 827 0038 00000000 		.word	.LANCHOR9
 828 003c 00000000 		.word	.LANCHOR10
 829              		.cfi_endproc
 830              	.LFE339:
 832              		.section	.text.pos_linearity_ini,"ax",%progbits
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 22


 833              		.align	1
 834              		.global	pos_linearity_ini
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 838              		.fpu fpv4-sp-d16
 840              	pos_linearity_ini:
 841              	.LFB340:
 321:Src/adc.c     **** //ADC ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ïµï¿½ï¿½ï¿½ï¿½ï¿½Ä¬ï¿½Ï²ï¿½ï¿½ï¿½ 700-3700 ï¿½ï¿½ 0 - 16384ï¿½ï¿½ï¿½Ô
 322:Src/adc.c     **** void pos_linearity_ini(void)
 323:Src/adc.c     **** {
 842              		.loc 1 323 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              	.LVL58:
 847 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 848              	.LCFI11:
 849              		.cfi_def_cfa_offset 20
 850              		.cfi_offset 4, -20
 851              		.cfi_offset 5, -16
 852              		.cfi_offset 6, -12
 853              		.cfi_offset 7, -8
 854              		.cfi_offset 14, -4
 324:Src/adc.c     **** 	s16 i = 0;
 325:Src/adc.c     **** 	for(i=0;i<NUM_LINEARITY_SEG;i++)
 326:Src/adc.c     **** 	{
 327:Src/adc.c     **** 		L_Slop_Array[i] = (((int32_t)(g_CmdMap[POS_LINEARITY_PU(i+1)] - g_CmdMap[POS_LINEARITY_PU(i)]))<<
 855              		.loc 1 327 0
 856 0002 104C     		ldr	r4, .L66
 857 0004 104E     		ldr	r6, .L66+4
 323:Src/adc.c     **** 	s16 i = 0;
 858              		.loc 1 323 0
 859 0006 40F27312 		movw	r2, #371
 860 000a 0020     		movs	r0, #0
 861              	.LVL59:
 862              	.L64:
 863 000c 971E     		subs	r7, r2, #2
 864 000e 511E     		subs	r1, r2, #1
 865 0010 D51E     		subs	r5, r2, #3
 866              		.loc 1 327 0 discriminator 3
 867 0012 34F81230 		ldrh	r3, [r4, r2, lsl #1]
 868 0016 34F81770 		ldrh	r7, [r4, r7, lsl #1]
 869 001a 34F81110 		ldrh	r1, [r4, r1, lsl #1]
 870 001e 34F81550 		ldrh	r5, [r4, r5, lsl #1]
 871 0022 1BB2     		sxth	r3, r3
 872 0024 3FB2     		sxth	r7, r7
 873 0026 09B2     		sxth	r1, r1
 874 0028 2DB2     		sxth	r5, r5
 875 002a DB1B     		subs	r3, r3, r7
 876 002c 9B02     		lsls	r3, r3, #10
 877 002e 491B     		subs	r1, r1, r5
 878 0030 93FBF1F3 		sdiv	r3, r3, r1
 879 0034 46F82030 		str	r3, [r6, r0, lsl #2]
 880              	.LVL60:
 881 0038 0130     		adds	r0, r0, #1
 882              	.LVL61:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 23


 325:Src/adc.c     **** 	{
 883              		.loc 1 325 0 discriminator 3
 884 003a BE28     		cmp	r0, #190
 885 003c 02F10202 		add	r2, r2, #2
 886 0040 E4D1     		bne	.L64
 328:Src/adc.c     **** 	}
 329:Src/adc.c     **** }
 887              		.loc 1 329 0
 888 0042 F0BD     		pop	{r4, r5, r6, r7, pc}
 889              	.L67:
 890              		.align	2
 891              	.L66:
 892 0044 00000000 		.word	g_CmdMap
 893 0048 00000000 		.word	L_Slop_Array
 894              		.cfi_endproc
 895              	.LFE340:
 897              		.section	.text.Pos_Correct,"ax",%progbits
 898              		.align	1
 899              		.global	Pos_Correct
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv4-sp-d16
 905              	Pos_Correct:
 906              	.LFB341:
 330:Src/adc.c     **** ////ADC ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ïµï¿½ï¿½ï¿½ï¿½ï¿½Ä¬ï¿½Ï²ï¿½ï¿½ï¿½ 700-3700 ï¿½ï¿½ 0 - 16384ï¿½ï¿½ï¿
 331:Src/adc.c     **** //void pos_linearity_set_default(void)
 332:Src/adc.c     **** //{
 333:Src/adc.c     **** //	s16 i = 0;
 334:Src/adc.c     **** //	for(i = 0;i < 31;i++)
 335:Src/adc.c     **** //	{
 336:Src/adc.c     **** //			g_CmdMap[POS_LINEARITY_ADC(i)]	= 700 + 90*i;	//Ì¼Ä¤ADCï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ïµã£¬ADCï¿½ï¿½Öµ
 337:Src/adc.c     **** //			g_CmdMap[POS_LINEARITY_PU(i)] 	= 0 + 16384*i/30;	//Ì¼Ä¤ADCï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ïµã£¬Êµï¿½ï¿½ï¿½Ð³
 338:Src/adc.c     **** //	}
 339:Src/adc.c     **** //	for(i=0;i<=29;i++)
 340:Src/adc.c     **** //	{
 341:Src/adc.c     **** //		L_Slop_Array[i] = (((int32_t)(g_CmdMap[POS_LINEARITY_PU(i+1)] - g_CmdMap[POS_LINEARITY_PU(i)]))
 342:Src/adc.c     **** //	}
 343:Src/adc.c     **** //}
 344:Src/adc.c     **** s16 Pos_Corrected_last = 0;
 345:Src/adc.c     **** s16 MU_Value_error_cnt = 0;
 346:Src/adc.c     **** s16 index_pos_array = 0;
 347:Src/adc.c     **** s16 pos_array[128] = {0};
 348:Src/adc.c     **** s32 pos_sum = 0;
 349:Src/adc.c     **** s16 pos_filterd = 0;
 350:Src/adc.c     **** s16 pos_valid = 0;
 351:Src/adc.c     **** int32_t Pos_Correct(int32_t Pos_Org)
 352:Src/adc.c     **** {
 907              		.loc 1 352 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              	.LVL62:
 353:Src/adc.c     **** 	s32 slopTotall = 0;
 354:Src/adc.c     **** 	s16 in_data,out_data;
 355:Src/adc.c     **** 	int32_t Pos_Corrected = 0;
 356:Src/adc.c     **** 	int32_t Index_A,Index_B = 0;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 24


 357:Src/adc.c     **** 	s16 i = 0;
 358:Src/adc.c     **** 	if(Pos_Org>=g_CmdMap[POS_LINEARITY_ADC(0)] && Pos_Org<g_CmdMap[POS_LINEARITY_ADC(NUM_LINEARITY_SEG
 912              		.loc 1 358 0
 913 0000 494B     		ldr	r3, .L78
 914 0002 B3F8E022 		ldrh	r2, [r3, #736]
 915 0006 12B2     		sxth	r2, r2
 916 0008 8242     		cmp	r2, r0
 352:Src/adc.c     **** 	s32 slopTotall = 0;
 917              		.loc 1 352 0
 918 000a F0B5     		push	{r4, r5, r6, r7, lr}
 919              	.LCFI12:
 920              		.cfi_def_cfa_offset 20
 921              		.cfi_offset 4, -20
 922              		.cfi_offset 5, -16
 923              		.cfi_offset 6, -12
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926              		.loc 1 358 0
 927 000c 56DC     		bgt	.L69
 928              		.loc 1 358 0 is_stmt 0 discriminator 1
 929 000e B3F8D825 		ldrh	r2, [r3, #1496]
 930 0012 12B2     		sxth	r2, r2
 931 0014 8242     		cmp	r2, r0
 932 0016 51DD     		ble	.L69
 359:Src/adc.c     **** 	{
 360:Src/adc.c     **** 		//ï¿½ï¿½ï¿½Ö·ï¿½
 361:Src/adc.c     **** 		Index_A = 0;Index_B = NUM_LINEARITY_SEG;
 933              		.loc 1 361 0 is_stmt 1
 934 0018 BE25     		movs	r5, #190
 935 001a 0021     		movs	r1, #0
 362:Src/adc.c     **** 		while(1)
 363:Src/adc.c     **** 		{
 364:Src/adc.c     **** 			if(Index_B-Index_A == 1)
 365:Src/adc.c     **** 			{
 366:Src/adc.c     **** 				break;
 367:Src/adc.c     **** 			}
 368:Src/adc.c     **** 			i = (Index_A + Index_B)/2;
 936              		.loc 1 368 0
 937 001c 0226     		movs	r6, #2
 938              	.LVL63:
 939              	.L71:
 364:Src/adc.c     **** 			{
 940              		.loc 1 364 0
 941 001e 6A1A     		subs	r2, r5, r1
 942 0020 012A     		cmp	r2, #1
 943 0022 0ED0     		beq	.L70
 944              	.LVL64:
 945              		.loc 1 368 0
 946 0024 6A18     		adds	r2, r5, r1
 947 0026 92FBF6F2 		sdiv	r2, r2, r6
 369:Src/adc.c     **** 			if(Pos_Org<=g_CmdMap[POS_LINEARITY_ADC(i)])
 948              		.loc 1 369 0
 949 002a 12B2     		sxth	r2, r2
 950 002c 02F1B804 		add	r4, r2, #184
 951 0030 6400     		lsls	r4, r4, #1
 952 0032 33F81440 		ldrh	r4, [r3, r4, lsl #1]
 953 0036 24B2     		sxth	r4, r4
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 25


 954 0038 8442     		cmp	r4, r0
 955 003a B4BF     		ite	lt
 956 003c 1146     		movlt	r1, r2
 957              	.LVL65:
 958 003e 1546     		movge	r5, r2
 959              	.LVL66:
 960 0040 EDE7     		b	.L71
 961              	.LVL67:
 962              	.L70:
 370:Src/adc.c     **** 			{
 371:Src/adc.c     **** 				Index_B = i;
 372:Src/adc.c     **** 			}
 373:Src/adc.c     **** 			else
 374:Src/adc.c     **** 			{
 375:Src/adc.c     **** 				Index_A = i;
 376:Src/adc.c     **** 			}
 377:Src/adc.c     **** 		}
 378:Src/adc.c     **** 		Pos_Corrected = (((int32_t)(Pos_Org - g_CmdMap[POS_LINEARITY_ADC(Index_A)])* L_Slop_Array[Index_A
 963              		.loc 1 378 0
 964 0042 01F1B802 		add	r2, r1, #184
 965 0046 5200     		lsls	r2, r2, #1
 966 0048 384D     		ldr	r5, .L78+4
 967              	.LVL68:
 968 004a 33F81240 		ldrh	r4, [r3, r2, lsl #1]
 969 004e 55F82110 		ldr	r1, [r5, r1, lsl #2]
 970              	.LVL69:
 971 0052 24B2     		sxth	r4, r4
 972 0054 0132     		adds	r2, r2, #1
 973 0056 001B     		subs	r0, r0, r4
 974              	.LVL70:
 975 0058 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 976 005c 4843     		muls	r0, r1, r0
 977 005e 8012     		asrs	r0, r0, #10
 978 0060 00FA82F0 		sxtah	r0, r0, r2
 979              	.LVL71:
 980              	.L73:
 379:Src/adc.c     **** 	}
 380:Src/adc.c     **** 	else if(Pos_Org<g_CmdMap[POS_LINEARITY_ADC(0)])
 381:Src/adc.c     **** 	{
 382:Src/adc.c     **** 		Pos_Corrected = Pos_Org-g_CmdMap[POS_LINEARITY_ADC(0)]; 
 383:Src/adc.c     **** 				if( Pos_Corrected < - 16384)
 384:Src/adc.c     **** 		{
 385:Src/adc.c     **** 			Pos_Corrected = -16384;
 386:Src/adc.c     **** 		}
 387:Src/adc.c     **** 	}	
 388:Src/adc.c     **** 	else
 389:Src/adc.c     **** 	{
 390:Src/adc.c     **** 			slopTotall = (((int32_t)(g_CmdMap[POS_LINEARITY_PU(NUM_LINEARITY_SEG)] - g_CmdMap[POS_LINEARITY_
 391:Src/adc.c     **** 			Pos_Corrected = (((int32_t)(Pos_Org - g_CmdMap[POS_LINEARITY_ADC(NUM_LINEARITY_SEG)])* slopTotal
 392:Src/adc.c     **** 			if( Pos_Corrected> 32767 )
 393:Src/adc.c     **** 			{
 394:Src/adc.c     **** 				Pos_Corrected = 32767;
 395:Src/adc.c     **** 			}
 396:Src/adc.c     **** 		
 397:Src/adc.c     **** 	}
 398:Src/adc.c     **** 	in_data = Pos_Corrected;
 399:Src/adc.c     **** 	out_data = pos_array[index_pos_array];
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 26


 981              		.loc 1 399 0
 982 0064 324F     		ldr	r7, .L78+8
 983 0066 334E     		ldr	r6, .L78+12
 984 0068 B7F90040 		ldrsh	r4, [r7]
 398:Src/adc.c     **** 	out_data = pos_array[index_pos_array];
 985              		.loc 1 398 0
 986 006c 02B2     		sxth	r2, r0
 987              		.loc 1 399 0
 988 006e 36F914C0 		ldrsh	ip, [r6, r4, lsl #1]
 989              	.LVL72:
 400:Src/adc.c     **** 	pos_array[index_pos_array] = in_data;
 990              		.loc 1 400 0
 991 0072 26F81420 		strh	r2, [r6, r4, lsl #1]	@ movhi
 401:Src/adc.c     **** 	index_pos_array= (index_pos_array + 1)%128;
 992              		.loc 1 401 0
 993 0076 0134     		adds	r4, r4, #1
 994 0078 6642     		rsbs	r6, r4, #0
 995 007a 06F07F06 		and	r6, r6, #127
 996 007e 04F07F04 		and	r4, r4, #127
 997 0082 58BF     		it	pl
 998 0084 7442     		rsbpl	r4, r6, #0
 999 0086 3C80     		strh	r4, [r7]	@ movhi
 402:Src/adc.c     **** 	pos_sum = pos_sum - out_data + in_data;
 1000              		.loc 1 402 0
 1001 0088 2B4C     		ldr	r4, .L78+16
 1002 008a 2168     		ldr	r1, [r4]
 400:Src/adc.c     **** 	pos_array[index_pos_array] = in_data;
 1003              		.loc 1 400 0
 1004 008c 1546     		mov	r5, r2
 1005              		.loc 1 402 0
 1006 008e A1EB0C02 		sub	r2, r1, ip
 1007 0092 2A44     		add	r2, r2, r5
 403:Src/adc.c     **** 	pos_filterd = pos_sum>>7;
 1008              		.loc 1 403 0
 1009 0094 2949     		ldr	r1, .L78+20
 402:Src/adc.c     **** 	pos_sum = pos_sum - out_data + in_data;
 1010              		.loc 1 402 0
 1011 0096 2260     		str	r2, [r4]
 1012              		.loc 1 403 0
 1013 0098 42F3CF12 		sbfx	r2, r2, #7, #16
 1014 009c 0A80     		strh	r2, [r1]	@ movhi
 404:Src/adc.c     **** 	if(ABS(Pos_Corrected-pos_filterd)>8192)
 1015              		.loc 1 404 0
 1016 009e 821A     		subs	r2, r0, r2
 1017 00a0 002A     		cmp	r2, #0
 1018 00a2 B8BF     		it	lt
 1019 00a4 5242     		rsblt	r2, r2, #0
 1020 00a6 B2F5005F 		cmp	r2, #8192
 1021 00aa 254A     		ldr	r2, .L78+24
 1022 00ac 35DD     		ble	.L75
 405:Src/adc.c     **** 	{
 406:Src/adc.c     **** 		
 407:Src/adc.c     **** 		MU_Value_error_cnt++;
 1023              		.loc 1 407 0
 1024 00ae 2549     		ldr	r1, .L78+28
 408:Src/adc.c     **** 	//	if(MU_Value_error_cnt>10) while(1);
 409:Src/adc.c     **** 		return pos_valid;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 27


 1025              		.loc 1 409 0
 1026 00b0 B2F90000 		ldrsh	r0, [r2]
 1027              	.LVL73:
 407:Src/adc.c     **** 	//	if(MU_Value_error_cnt>10) while(1);
 1028              		.loc 1 407 0
 1029 00b4 0B88     		ldrh	r3, [r1]
 1030 00b6 0133     		adds	r3, r3, #1
 1031 00b8 0B80     		strh	r3, [r1]	@ movhi
 1032              	.L68:
 410:Src/adc.c     **** 	}
 411:Src/adc.c     **** 	else
 412:Src/adc.c     **** 	{
 413:Src/adc.c     **** 		pos_valid = Pos_Corrected - g_CmdMap[SYS_POS_OFFSET];
 414:Src/adc.c     **** 		return pos_valid;
 415:Src/adc.c     **** 	}	
 416:Src/adc.c     **** }
 1033              		.loc 1 416 0
 1034 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1035              	.LVL74:
 1036              	.L69:
 380:Src/adc.c     **** 	{
 1037              		.loc 1 380 0
 1038 00bc B3F8E022 		ldrh	r2, [r3, #736]
 1039 00c0 12B2     		sxth	r2, r2
 1040 00c2 8242     		cmp	r2, r0
 1041 00c4 08DD     		ble	.L74
 382:Src/adc.c     **** 				if( Pos_Corrected < - 16384)
 1042              		.loc 1 382 0
 1043 00c6 B3F8E022 		ldrh	r2, [r3, #736]
 1044 00ca 12B2     		sxth	r2, r2
 1045              	.LVL75:
 1046 00cc 801A     		subs	r0, r0, r2
 1047              	.LVL76:
 1048 00ce 1E4A     		ldr	r2, .L78+32
 1049              	.LVL77:
 1050 00d0 9042     		cmp	r0, r2
 1051 00d2 B8BF     		it	lt
 1052 00d4 1046     		movlt	r0, r2
 1053 00d6 C5E7     		b	.L73
 1054              	.LVL78:
 1055              	.L74:
 390:Src/adc.c     **** 			Pos_Corrected = (((int32_t)(Pos_Org - g_CmdMap[POS_LINEARITY_ADC(NUM_LINEARITY_SEG)])* slopTotal
 1056              		.loc 1 390 0
 1057 00d8 B3F8DA25 		ldrh	r2, [r3, #1498]
 1058 00dc B3F8E272 		ldrh	r7, [r3, #738]
 1059 00e0 B3F8D815 		ldrh	r1, [r3, #1496]
 1060 00e4 B3F8E052 		ldrh	r5, [r3, #736]
 391:Src/adc.c     **** 			if( Pos_Corrected> 32767 )
 1061              		.loc 1 391 0
 1062 00e8 B3F8D845 		ldrh	r4, [r3, #1496]
 1063 00ec B3F8DA65 		ldrh	r6, [r3, #1498]
 390:Src/adc.c     **** 			Pos_Corrected = (((int32_t)(Pos_Org - g_CmdMap[POS_LINEARITY_ADC(NUM_LINEARITY_SEG)])* slopTotal
 1064              		.loc 1 390 0
 1065 00f0 12B2     		sxth	r2, r2
 1066 00f2 3FB2     		sxth	r7, r7
 391:Src/adc.c     **** 			if( Pos_Corrected> 32767 )
 1067              		.loc 1 391 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 28


 1068 00f4 24B2     		sxth	r4, r4
 390:Src/adc.c     **** 			Pos_Corrected = (((int32_t)(Pos_Org - g_CmdMap[POS_LINEARITY_ADC(NUM_LINEARITY_SEG)])* slopTotal
 1069              		.loc 1 390 0
 1070 00f6 09B2     		sxth	r1, r1
 1071 00f8 2DB2     		sxth	r5, r5
 1072              	.LVL79:
 1073 00fa D21B     		subs	r2, r2, r7
 1074              	.LVL80:
 391:Src/adc.c     **** 			if( Pos_Corrected> 32767 )
 1075              		.loc 1 391 0
 1076 00fc 001B     		subs	r0, r0, r4
 1077              	.LVL81:
 390:Src/adc.c     **** 			Pos_Corrected = (((int32_t)(Pos_Org - g_CmdMap[POS_LINEARITY_ADC(NUM_LINEARITY_SEG)])* slopTotal
 1078              		.loc 1 390 0
 1079 00fe 9202     		lsls	r2, r2, #10
 1080 0100 491B     		subs	r1, r1, r5
 1081 0102 92FBF1F2 		sdiv	r2, r2, r1
 391:Src/adc.c     **** 			if( Pos_Corrected> 32767 )
 1082              		.loc 1 391 0
 1083 0106 5043     		muls	r0, r2, r0
 1084 0108 8012     		asrs	r0, r0, #10
 1085 010a 00FA86F0 		sxtah	r0, r0, r6
 1086 010e 47F6FF72 		movw	r2, #32767
 1087 0112 9042     		cmp	r0, r2
 1088 0114 A8BF     		it	ge
 1089 0116 1046     		movge	r0, r2
 1090 0118 A4E7     		b	.L73
 1091              	.LVL82:
 1092              	.L75:
 413:Src/adc.c     **** 		return pos_valid;
 1093              		.loc 1 413 0
 1094 011a B3F87E32 		ldrh	r3, [r3, #638]
 1095 011e C01A     		subs	r0, r0, r3
 1096              	.LVL83:
 1097 0120 00B2     		sxth	r0, r0
 1098 0122 1080     		strh	r0, [r2]	@ movhi
 414:Src/adc.c     **** 	}	
 1099              		.loc 1 414 0
 1100 0124 C9E7     		b	.L68
 1101              	.L79:
 1102 0126 00BF     		.align	2
 1103              	.L78:
 1104 0128 00000000 		.word	g_CmdMap
 1105 012c 00000000 		.word	L_Slop_Array
 1106 0130 00000000 		.word	.LANCHOR11
 1107 0134 00000000 		.word	.LANCHOR12
 1108 0138 00000000 		.word	.LANCHOR13
 1109 013c 00000000 		.word	.LANCHOR14
 1110 0140 00000000 		.word	.LANCHOR16
 1111 0144 00000000 		.word	.LANCHOR15
 1112 0148 00C0FFFF 		.word	-16384
 1113              		.cfi_endproc
 1114              	.LFE341:
 1116              		.section	.text.Get_Pos_Rod,"ax",%progbits
 1117              		.align	1
 1118              		.global	Get_Pos_Rod
 1119              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 29


 1120              		.thumb
 1121              		.thumb_func
 1122              		.fpu fpv4-sp-d16
 1124              	Get_Pos_Rod:
 1125              	.LFB342:
 417:Src/adc.c     **** //ï¿½ï¿½ï¿½ï¿½ï¿½Æ¸ï¿½Ä©ï¿½ï¿½Î»ï¿½Ã£ï¿½ï¿½ï¿½Ïµï¿½ï¿½Ä©ï¿½Ë´Å±ï¿½ï¿½Åºï¿½ ï¿½ï¿½ Ì¼Ä¤Î»ï¿½ï¿½
 418:Src/adc.c     **** void Get_Pos_Rod(void)
 419:Src/adc.c     **** {
 1126              		.loc 1 419 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1131              	.LCFI13:
 1132              		.cfi_def_cfa_offset 32
 1133              		.cfi_offset 4, -20
 1134              		.cfi_offset 5, -16
 1135              		.cfi_offset 6, -12
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 420:Src/adc.c     **** 	s32 pos_noCorrect;
 421:Src/adc.c     **** 	if(g_CmdMap[SYS_MU_COMM_TO_PC] == 1)     //MU Ð¾Æ¬ï¿½ê¶¨Ä£Ê½
 1138              		.loc 1 421 0
 1139 0002 3B4E     		ldr	r6, .L88
 1140 0004 3B4F     		ldr	r7, .L88+4
 1141 0006 B6F81832 		ldrh	r3, [r6, #536]
 1142 000a 1BB2     		sxth	r3, r3
 1143 000c 012B     		cmp	r3, #1
 1144 000e 36D1     		bne	.L81
 422:Src/adc.c     **** 	{	
 423:Src/adc.c     **** 		Encode_Single_to_Multi_R(0,0,g_MechanicsAngle_15bit,&rod_pos_Muti_Encoder,0x8000,0x40000);
 1145              		.loc 1 423 0
 1146 0010 394B     		ldr	r3, .L88+8
 1147 0012 3A4D     		ldr	r5, .L88+12
 1148 0014 1A68     		ldr	r2, [r3]
 1149 0016 4FF48021 		mov	r1, #262144
 1150 001a 4FF40043 		mov	r3, #32768
 1151 001e CDE90031 		strd	r3, r1, [sp]
 1152 0022 0021     		movs	r1, #0
 1153 0024 2B46     		mov	r3, r5
 1154 0026 0846     		mov	r0, r1
 1155 0028 FFF7FEFF 		bl	Encode_Single_to_Multi_R
 1156              	.LVL84:
 424:Src/adc.c     **** 		g_CmdMap[CMD_POS_ACT_PU] = ((int64_t)rod_pos_Muti_Encoder*g_CmdMap[SCREW_UM_RES]/(32767*(int64_t)
 1157              		.loc 1 424 0
 1158 002c B6F84E02 		ldrh	r0, [r6, #590]
 1159 0030 2B68     		ldr	r3, [r5]
 1160 0032 B6F85042 		ldrh	r4, [r6, #592]
 1161 0036 00B2     		sxth	r0, r0
 1162 0038 24B2     		sxth	r4, r4
 1163 003a 80FB0301 		smull	r0, r1, r0, r3
 1164 003e 47F6FF73 		movw	r3, #32767
 1165 0042 84FB0345 		smull	r4, r5, r4, r3
 1166 0046 002C     		cmp	r4, #0
 1167 0048 75F10003 		sbcs	r3, r5, #0
 1168 004c 02DA     		bge	.L82
 1169 004e FF34     		adds	r4, r4, #255
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 30


 1170 0050 45F10005 		adc	r5, r5, #0
 1171              	.L82:
 1172 0054 220A     		lsrs	r2, r4, #8
 1173 0056 42EA0562 		orr	r2, r2, r5, lsl #24
 1174 005a 2B12     		asrs	r3, r5, #8
 1175 005c FFF7FEFF 		bl	__aeabi_ldivmod
 1176              	.LVL85:
 1177 0060 3B68     		ldr	r3, [r7]
 1178 0062 1A68     		ldr	r2, [r3]
 1179 0064 0446     		mov	r4, r0
 1180 0066 8903     		lsls	r1, r1, #14
 1181 0068 D317     		asrs	r3, r2, #31
 1182 006a A003     		lsls	r0, r4, #14
 1183 006c 41EA9441 		orr	r1, r1, r4, lsr #18
 1184 0070 FFF7FEFF 		bl	__aeabi_ldivmod
 1185              	.LVL86:
 1186              	.L87:
 425:Src/adc.c     **** 	}
 426:Src/adc.c     **** 	else	
 427:Src/adc.c     **** 	{
 428:Src/adc.c     **** 		if(*g_pMU_value_offset > vlaue_icmu_offset_overturn)  
 429:Src/adc.c     **** 		{
 430:Src/adc.c     **** 			if(MU_Value<range_icmu_vlaue_need_addMax)//range_icmu_vlaue_at_stroke
 431:Src/adc.c     **** 			{
 432:Src/adc.c     **** 				MU_Value = MAX_VALUE_ICMU+MU_Value;
 433:Src/adc.c     **** 			}
 434:Src/adc.c     **** 			else
 435:Src/adc.c     **** 			{			
 436:Src/adc.c     **** 			}
 437:Src/adc.c     **** 		}
 438:Src/adc.c     **** 		else
 439:Src/adc.c     **** 		{
 440:Src/adc.c     **** 			MU_Value = MU_Value;
 441:Src/adc.c     **** 		}		
 442:Src/adc.c     **** 		
 443:Src/adc.c     **** 		#if 1
 444:Src/adc.c     **** 		MU_Value_base_0 = MU_Value-*g_pMU_value_offset;
 445:Src/adc.c     **** //		MU_Value_base_0 = MU_Value - 12803800;
 446:Src/adc.c     **** 		pos_nm_MU150 = (DISTANCE_NM_ICMU*(int64_t)(MU_Value_base_0-*g_pMU_0mm_offset))>>MU_DATA_SPI_RES;	
 447:Src/adc.c     **** //		pos_nm_MU150 = (DISTANCE_NM_ICMU*(int64_t)(MU_Value_base_0))>>MU_DATA_SPI_RES;		
 448:Src/adc.c     **** 		pos_noCorrect = ((int64_t)pos_nm_MU150<<14)/((int64_t)*g_pPos_ref_base_um*1000);
 449:Src/adc.c     **** 		
 450:Src/adc.c     **** 		g_CmdMap[CMD_POS_ACT_PU] = Pos_Correct(pos_noCorrect);
 1187              		.loc 1 450 0
 1188 0074 00B2     		sxth	r0, r0
 1189 0076 A6F84C00 		strh	r0, [r6, #76]	@ movhi
 451:Src/adc.c     **** 		
 452:Src/adc.c     **** //		g_CmdMap[CMD_POS_ACT_PU] = pos_noCorrect;
 453:Src/adc.c     **** 		
 454:Src/adc.c     **** 		#endif
 455:Src/adc.c     **** 		
 456:Src/adc.c     **** //		MU_Value_base_0 = MU_Value - 10003800;
 457:Src/adc.c     **** //		pos_nm_MU150 = (DISTANCE_NM_ICMU*(int64_t)(MU_Value_base_0))>>MU_DATA_SPI_RES;		
 458:Src/adc.c     **** //		pos_noCorrect = ((int64_t)pos_nm_MU150<<14)/((int64_t)*g_pPos_ref_base_um*1000);
 459:Src/adc.c     **** //		g_CmdMap[CMD_POS_ACT_PU] = pos_noCorrect;
 460:Src/adc.c     **** 	}
 461:Src/adc.c     **** 	
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 31


 462:Src/adc.c     **** 	
 463:Src/adc.c     **** //ï¿½ï¿½ï¿½ï¿½Î»ï¿½Ã´ï¿½ï¿½ï¿½ï¿½ï¿½(IC_Hause_MU ï¿½ï¿½Õ¤ï¿½ï¿½ï¿½ï¿½)
 464:Src/adc.c     **** 		
 465:Src/adc.c     **** 	
 466:Src/adc.c     **** //ï¿½ï¿½ï¿½ï¿½Ì¼Ä¤ADCï¿½ï¿½ï¿½ï¿½	
 467:Src/adc.c     **** //	g_CmdMap[CMD_POS_ADC_12BIT] = sum_Pos_ADC_Array>>5;//(ADC1->JDR2 & 0x0000FFFF);
 468:Src/adc.c     **** //	g_CmdMap[CMD_POS_ACT_PU_ADC] = Pos_Correct(g_CmdMap[CMD_POS_ADC_12BIT]);	
 469:Src/adc.c     **** 	
 470:Src/adc.c     **** 	
 471:Src/adc.c     **** //ï¿½ï¿½ï¿½ï¿½È¦ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½	
 472:Src/adc.c     **** //    ï¿½ï¿½ï¿½ï¿½ï¿½Æ¸ï¿½Êµï¿½ï¿½ï¿½Ð³ï¿½		
 473:Src/adc.c     **** //		Encode_Single_to_Multi_R(0,0,g_MechanicsAngle_15bit,&rod_pos_Muti_Encoder,0x8000,0x40000);	
 474:Src/adc.c     **** //		if(g_CmdMap[TAG_MOTOR_ENABLE] == 0 || PosAtDead_Flag == 1)
 475:Src/adc.c     **** //		{
 476:Src/adc.c     **** //			rod_pos_Muti_Encoder = 32767*((int64_t)(g_CmdMap[CMD_POS_ADC_12BIT_FILTER] - 300)*11*10000/330
 477:Src/adc.c     **** //		}
 478:Src/adc.c     **** //		g_CmdMap[CMD_POS_ACT_PU] = ((int64_t)rod_pos_Muti_Encoder*g_CmdMap[SCREW_UM_RES]/(32767*(int64_
 479:Src/adc.c     **** //	g_CmdMap[CMD_POS_ACT_PU] = g_CmdMap[CMD_POS_ACT_PU_ADC];	
 480:Src/adc.c     **** }
 1190              		.loc 1 480 0
 1191 007a 03B0     		add	sp, sp, #12
 1192              	.LCFI14:
 1193              		.cfi_remember_state
 1194              		.cfi_def_cfa_offset 20
 1195              		@ sp needed
 1196 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 1197              	.L81:
 1198              	.LCFI15:
 1199              		.cfi_restore_state
 428:Src/adc.c     **** 		{
 1200              		.loc 1 428 0
 1201 007e 204B     		ldr	r3, .L88+16
 1202 0080 1968     		ldr	r1, [r3]
 1203 0082 204B     		ldr	r3, .L88+20
 1204 0084 0A68     		ldr	r2, [r1]
 1205 0086 1B68     		ldr	r3, [r3]
 1206 0088 9A42     		cmp	r2, r3
 1207 008a 1F4B     		ldr	r3, .L88+24
 1208 008c 2DDD     		ble	.L84
 430:Src/adc.c     **** 			{
 1209              		.loc 1 430 0
 1210 008e 1F4A     		ldr	r2, .L88+28
 1211 0090 1868     		ldr	r0, [r3]
 1212 0092 1268     		ldr	r2, [r2]
 1213 0094 9042     		cmp	r0, r2
 1214 0096 05DA     		bge	.L85
 432:Src/adc.c     **** 			}
 1215              		.loc 1 432 0
 1216 0098 1A68     		ldr	r2, [r3]
 1217 009a 02F1FF12 		add	r2, r2, #16711935
 1218 009e 02F57F42 		add	r2, r2, #65280
 1219              	.L86:
 440:Src/adc.c     **** 		}		
 1220              		.loc 1 440 0
 1221 00a2 1A60     		str	r2, [r3]
 1222              	.L85:
 444:Src/adc.c     **** //		MU_Value_base_0 = MU_Value - 12803800;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 32


 1223              		.loc 1 444 0
 1224 00a4 1B68     		ldr	r3, [r3]
 1225 00a6 0A68     		ldr	r2, [r1]
 1226 00a8 9B1A     		subs	r3, r3, r2
 1227 00aa 194A     		ldr	r2, .L88+32
 1228 00ac 1360     		str	r3, [r2]
 446:Src/adc.c     **** //		pos_nm_MU150 = (DISTANCE_NM_ICMU*(int64_t)(MU_Value_base_0))>>MU_DATA_SPI_RES;		
 1229              		.loc 1 446 0
 1230 00ae 194B     		ldr	r3, .L88+36
 1231 00b0 1268     		ldr	r2, [r2]
 1232 00b2 1B68     		ldr	r3, [r3]
 1233 00b4 1B68     		ldr	r3, [r3]
 1234 00b6 D21A     		subs	r2, r2, r3
 1235 00b8 174B     		ldr	r3, .L88+40
 1236 00ba 82FB0334 		smull	r3, r4, r2, r3
 1237 00be 1A0E     		lsrs	r2, r3, #24
 1238 00c0 164B     		ldr	r3, .L88+44
 1239 00c2 42EA0422 		orr	r2, r2, r4, lsl #8
 1240 00c6 1A60     		str	r2, [r3]
 448:Src/adc.c     **** 		
 1241              		.loc 1 448 0
 1242 00c8 1968     		ldr	r1, [r3]
 1243              	.LVL87:
 1244 00ca CB17     		asrs	r3, r1, #31
 1245 00cc 9C03     		lsls	r4, r3, #14
 1246 00ce 3B68     		ldr	r3, [r7]
 1247 00d0 1A68     		ldr	r2, [r3]
 1248 00d2 4FF47A73 		mov	r3, #1000
 1249 00d6 82FB0323 		smull	r2, r3, r2, r3
 1250 00da 8803     		lsls	r0, r1, #14
 1251 00dc 44EA9141 		orr	r1, r4, r1, lsr #18
 1252              	.LVL88:
 1253 00e0 FFF7FEFF 		bl	__aeabi_ldivmod
 1254              	.LVL89:
 450:Src/adc.c     **** 		
 1255              		.loc 1 450 0
 1256 00e4 FFF7FEFF 		bl	Pos_Correct
 1257              	.LVL90:
 1258 00e8 C4E7     		b	.L87
 1259              	.L84:
 440:Src/adc.c     **** 		}		
 1260              		.loc 1 440 0
 1261 00ea 1A68     		ldr	r2, [r3]
 1262 00ec D9E7     		b	.L86
 1263              	.L89:
 1264 00ee 00BF     		.align	2
 1265              	.L88:
 1266 00f0 00000000 		.word	g_CmdMap
 1267 00f4 00000000 		.word	g_pPos_ref_base_um
 1268 00f8 00000000 		.word	g_MechanicsAngle_15bit
 1269 00fc 00000000 		.word	rod_pos_Muti_Encoder
 1270 0100 00000000 		.word	g_pMU_value_offset
 1271 0104 00000000 		.word	vlaue_icmu_offset_overturn
 1272 0108 00000000 		.word	MU_Value
 1273 010c 00000000 		.word	range_icmu_vlaue_need_addMax
 1274 0110 00000000 		.word	.LANCHOR17
 1275 0114 00000000 		.word	g_pMU_0mm_offset
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 33


 1276 0118 006CDC02 		.word	48000000
 1277 011c 00000000 		.word	pos_nm_MU150
 1278              		.cfi_endproc
 1279              	.LFE342:
 1281              		.section	.text.check_linearity,"ax",%progbits
 1282              		.align	1
 1283              		.global	check_linearity
 1284              		.syntax unified
 1285              		.thumb
 1286              		.thumb_func
 1287              		.fpu fpv4-sp-d16
 1289              	check_linearity:
 1290              	.LFB343:
 481:Src/adc.c     **** s16 check_linearity(void)
 482:Src/adc.c     **** {
 1291              		.loc 1 482 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295              	.LVL91:
 483:Src/adc.c     **** 	s16 i = 0;
 484:Src/adc.c     **** 	if(g_CmdMap[POS_LINEARITY_ADC(0)]<0 || g_CmdMap[POS_LINEARITY_ADC(0)]>19000)
 1296              		.loc 1 484 0
 1297 0000 144B     		ldr	r3, .L99
 1298 0002 B3F8E022 		ldrh	r2, [r3, #736]
 482:Src/adc.c     **** 	s16 i = 0;
 1299              		.loc 1 482 0
 1300 0006 10B5     		push	{r4, lr}
 1301              	.LCFI16:
 1302              		.cfi_def_cfa_offset 8
 1303              		.cfi_offset 4, -8
 1304              		.cfi_offset 14, -4
 1305              		.loc 1 484 0
 1306 0008 1404     		lsls	r4, r2, #16
 1307 000a 20D4     		bmi	.L97
 1308              		.loc 1 484 0 is_stmt 0 discriminator 1
 1309 000c B3F8E022 		ldrh	r2, [r3, #736]
 1310 0010 44F63821 		movw	r1, #19000
 1311 0014 12B2     		sxth	r2, r2
 1312 0016 8A42     		cmp	r2, r1
 1313 0018 19DC     		bgt	.L97
 1314 001a 4FF4B972 		mov	r2, #370
 1315              	.LVL92:
 1316              	.L92:
 485:Src/adc.c     **** 	{
 486:Src/adc.c     **** 		return 0;
 487:Src/adc.c     **** 	}
 488:Src/adc.c     **** 	for(i = 1;i < NUM_LINEARITY_SEG;i++)
 489:Src/adc.c     **** 	{
 490:Src/adc.c     **** 			if(g_CmdMap[POS_LINEARITY_ADC(i)]<0|| g_CmdMap[POS_LINEARITY_ADC(i)]>19000)
 1317              		.loc 1 490 0 is_stmt 1
 1318 001e 33F81200 		ldrh	r0, [r3, r2, lsl #1]
 1319 0022 0004     		lsls	r0, r0, #16
 1320 0024 13D4     		bmi	.L97
 1321              		.loc 1 490 0 is_stmt 0 discriminator 1
 1322 0026 33F81200 		ldrh	r0, [r3, r2, lsl #1]
 1323 002a 00B2     		sxth	r0, r0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 34


 1324 002c 8842     		cmp	r0, r1
 1325 002e 0EDC     		bgt	.L97
 1326 0030 901E     		subs	r0, r2, #2
 491:Src/adc.c     **** 			{
 492:Src/adc.c     **** 				return 0;
 493:Src/adc.c     **** 			}
 494:Src/adc.c     **** 			if(g_CmdMap[POS_LINEARITY_ADC(i-1)]>g_CmdMap[POS_LINEARITY_ADC(i)])
 1327              		.loc 1 494 0 is_stmt 1
 1328 0032 33F81040 		ldrh	r4, [r3, r0, lsl #1]
 1329 0036 33F81200 		ldrh	r0, [r3, r2, lsl #1]
 1330 003a 24B2     		sxth	r4, r4
 1331 003c 00B2     		sxth	r0, r0
 1332 003e 8442     		cmp	r4, r0
 1333 0040 05DC     		bgt	.L97
 1334 0042 0232     		adds	r2, r2, #2
 488:Src/adc.c     **** 	{
 1335              		.loc 1 488 0 discriminator 2
 1336 0044 B2F53B7F 		cmp	r2, #748
 1337 0048 E9D1     		bne	.L92
 495:Src/adc.c     **** 			{
 496:Src/adc.c     **** 				return 0;
 497:Src/adc.c     **** 			}
 498:Src/adc.c     **** 	}
 499:Src/adc.c     **** 	return 1;
 1338              		.loc 1 499 0
 1339 004a 0120     		movs	r0, #1
 1340              	.L91:
 500:Src/adc.c     **** }
 1341              		.loc 1 500 0
 1342 004c 10BD     		pop	{r4, pc}
 1343              	.L97:
 486:Src/adc.c     **** 	}
 1344              		.loc 1 486 0
 1345 004e 0020     		movs	r0, #0
 1346 0050 FCE7     		b	.L91
 1347              	.L100:
 1348 0052 00BF     		.align	2
 1349              	.L99:
 1350 0054 00000000 		.word	g_CmdMap
 1351              		.cfi_endproc
 1352              	.LFE343:
 1354              		.section	.text.get_temperature_value,"ax",%progbits
 1355              		.align	1
 1356              		.global	get_temperature_value
 1357              		.syntax unified
 1358              		.thumb
 1359              		.thumb_func
 1360              		.fpu fpv4-sp-d16
 1362              	get_temperature_value:
 1363              	.LFB344:
 501:Src/adc.c     **** 
 502:Src/adc.c     **** //g_CmdMap[CMD_TEMP] = get_temperature_value(ADC1->JDR2)
 503:Src/adc.c     **** int16_t get_temperature_value(int16_t para_val)
 504:Src/adc.c     **** {
 1364              		.loc 1 504 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 35


 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368              	.LVL93:
 1369 0000 30B5     		push	{r4, r5, lr}
 1370              	.LCFI17:
 1371              		.cfi_def_cfa_offset 12
 1372              		.cfi_offset 4, -12
 1373              		.cfi_offset 5, -8
 1374              		.cfi_offset 14, -4
 505:Src/adc.c     **** 	int16_t index_A = 0,index_B = 70,index_Mid;
 506:Src/adc.c     **** 	para_val = 3300*para_val/NCT_VOLT;
 507:Src/adc.c     **** 	while(1)
 508:Src/adc.c     **** 	{
 509:Src/adc.c     **** 		index_Mid = (index_A+index_B)>>1;		
 510:Src/adc.c     **** 		if(para_val<=g_Rt_Map[index_Mid])
 1375              		.loc 1 510 0
 1376 0002 0E4D     		ldr	r5, .L107
 505:Src/adc.c     **** 	int16_t index_A = 0,index_B = 70,index_Mid;
 1377              		.loc 1 505 0
 1378 0004 4621     		movs	r1, #70
 1379 0006 0023     		movs	r3, #0
 1380              	.LVL94:
 1381              	.L104:
 509:Src/adc.c     **** 		if(para_val<=g_Rt_Map[index_Mid])
 1382              		.loc 1 509 0
 1383 0008 5A18     		adds	r2, r3, r1
 1384 000a 42F34F02 		sbfx	r2, r2, #1, #16
 1385              	.LVL95:
 1386              		.loc 1 510 0
 1387 000e 35F81240 		ldrh	r4, [r5, r2, lsl #1]
 1388 0012 24B2     		sxth	r4, r4
 1389 0014 8442     		cmp	r4, r0
 1390 0016 0FDA     		bge	.L105
 511:Src/adc.c     **** 		{
 512:Src/adc.c     **** 			index_B = index_Mid;
 513:Src/adc.c     **** 		}
 514:Src/adc.c     **** 		else if(para_val>g_Rt_Map[index_Mid])
 1391              		.loc 1 514 0
 1392 0018 35F81240 		ldrh	r4, [r5, r2, lsl #1]
 1393 001c 24B2     		sxth	r4, r4
 515:Src/adc.c     **** 		{
 516:Src/adc.c     **** 			index_A = index_Mid;		
 1394              		.loc 1 516 0
 1395 001e 8442     		cmp	r4, r0
 1396 0020 B8BF     		it	lt
 1397 0022 1346     		movlt	r3, r2
 1398              	.LVL96:
 1399              	.L102:
 517:Src/adc.c     **** 		}
 518:Src/adc.c     **** 		if(index_B == (index_A+1) || index_B == index_A)
 1400              		.loc 1 518 0
 1401 0024 5A1C     		adds	r2, r3, #1
 1402              	.LVL97:
 1403 0026 9142     		cmp	r1, r2
 1404 0028 01D0     		beq	.L103
 1405              		.loc 1 518 0 is_stmt 0 discriminator 1
 1406 002a 8B42     		cmp	r3, r1
 1407 002c ECD1     		bne	.L104
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 36


 1408              	.L103:
 519:Src/adc.c     **** 		{
 520:Src/adc.c     **** 			break;
 521:Src/adc.c     **** 		}
 522:Src/adc.c     **** 	}
 523:Src/adc.c     **** 	return 2*index_A-40;
 1409              		.loc 1 523 0 is_stmt 1
 1410 002e A3F11400 		sub	r0, r3, #20
 1411              	.LVL98:
 1412 0032 4000     		lsls	r0, r0, #1
 524:Src/adc.c     **** }
 1413              		.loc 1 524 0
 1414 0034 00B2     		sxth	r0, r0
 1415 0036 30BD     		pop	{r4, r5, pc}
 1416              	.LVL99:
 1417              	.L105:
 512:Src/adc.c     **** 		}
 1418              		.loc 1 512 0
 1419 0038 1146     		mov	r1, r2
 1420              	.LVL100:
 1421 003a F3E7     		b	.L102
 1422              	.L108:
 1423              		.align	2
 1424              	.L107:
 1425 003c 00000000 		.word	.LANCHOR18
 1426              		.cfi_endproc
 1427              	.LFE344:
 1429              		.section	.text.pos_linearity_set_default,"ax",%progbits
 1430              		.align	1
 1431              		.global	pos_linearity_set_default
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1435              		.fpu fpv4-sp-d16
 1437              	pos_linearity_set_default:
 1438              	.LFB345:
 525:Src/adc.c     **** void pos_linearity_set_default(void)
 526:Src/adc.c     **** {
 1439              		.loc 1 526 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443              	.LVL101:
 527:Src/adc.c     **** 	s16 i = 0;
 528:Src/adc.c     **** 	s32 inc_per_seg = 16384/NUM_LINEARITY_SEG;
 529:Src/adc.c     **** 	for(i = 0;i < NUM_LINEARITY_SEG+1;i++)
 530:Src/adc.c     **** 	{
 531:Src/adc.c     **** 			g_CmdMap[POS_LINEARITY_ADC(i)]	= inc_per_seg*i;	//
 1444              		.loc 1 531 0
 1445 0000 1949     		ldr	r1, .L114
 526:Src/adc.c     **** 	s16 i = 0;
 1446              		.loc 1 526 0
 1447 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1448              	.LCFI18:
 1449              		.cfi_def_cfa_offset 20
 1450              		.cfi_offset 4, -20
 1451              		.cfi_offset 5, -16
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 37


 1452              		.cfi_offset 6, -12
 1453              		.cfi_offset 7, -8
 1454              		.cfi_offset 14, -4
 526:Src/adc.c     **** 	s16 i = 0;
 1455              		.loc 1 526 0
 1456 0004 4FF4B873 		mov	r3, #368
 1457 0008 0022     		movs	r2, #0
 529:Src/adc.c     **** 	{
 1458              		.loc 1 529 0
 1459 000a 40F2EE25 		movw	r5, #750
 1460 000e 0C46     		mov	r4, r1
 1461              	.LVL102:
 1462              	.L110:
 1463              		.loc 1 531 0 discriminator 3
 1464 0010 10B2     		sxth	r0, r2
 1465 0012 21F81300 		strh	r0, [r1, r3, lsl #1]	@ movhi
 1466 0016 5E1C     		adds	r6, r3, #1
 1467 0018 0233     		adds	r3, r3, #2
 1468 001a 5632     		adds	r2, r2, #86
 529:Src/adc.c     **** 	{
 1469              		.loc 1 529 0 discriminator 3
 1470 001c AB42     		cmp	r3, r5
 532:Src/adc.c     **** 			g_CmdMap[POS_LINEARITY_PU(i)] 	= inc_per_seg*i;	//
 1471              		.loc 1 532 0 discriminator 3
 1472 001e 21F81600 		strh	r0, [r1, r6, lsl #1]	@ movhi
 1473 0022 92B2     		uxth	r2, r2
 529:Src/adc.c     **** 	{
 1474              		.loc 1 529 0 discriminator 3
 1475 0024 F4D1     		bne	.L110
 533:Src/adc.c     **** 	}
 534:Src/adc.c     **** 	for(i=0;i<NUM_LINEARITY_SEG;i++)
 535:Src/adc.c     **** 	{
 536:Src/adc.c     **** 		L_Slop_Array[i] = (((int32_t)(g_CmdMap[POS_LINEARITY_PU(i+1)] - g_CmdMap[POS_LINEARITY_PU(i)]))<<
 1476              		.loc 1 536 0
 1477 0026 114E     		ldr	r6, .L114+4
 1478 0028 40F27312 		movw	r2, #371
 1479 002c 0020     		movs	r0, #0
 1480              	.L111:
 1481              	.LVL103:
 1482 002e 971E     		subs	r7, r2, #2
 1483 0030 511E     		subs	r1, r2, #1
 1484 0032 D51E     		subs	r5, r2, #3
 1485              		.loc 1 536 0 is_stmt 0 discriminator 3
 1486 0034 34F81230 		ldrh	r3, [r4, r2, lsl #1]
 1487 0038 34F81770 		ldrh	r7, [r4, r7, lsl #1]
 1488 003c 34F81110 		ldrh	r1, [r4, r1, lsl #1]
 1489 0040 34F81550 		ldrh	r5, [r4, r5, lsl #1]
 1490 0044 1BB2     		sxth	r3, r3
 1491 0046 3FB2     		sxth	r7, r7
 1492 0048 09B2     		sxth	r1, r1
 1493 004a 2DB2     		sxth	r5, r5
 1494 004c DB1B     		subs	r3, r3, r7
 1495 004e 9B02     		lsls	r3, r3, #10
 1496 0050 491B     		subs	r1, r1, r5
 1497 0052 93FBF1F3 		sdiv	r3, r3, r1
 1498 0056 46F82030 		str	r3, [r6, r0, lsl #2]
 1499              	.LVL104:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 38


 1500 005a 0130     		adds	r0, r0, #1
 1501              	.LVL105:
 534:Src/adc.c     **** 	{
 1502              		.loc 1 534 0 is_stmt 1 discriminator 3
 1503 005c BE28     		cmp	r0, #190
 1504 005e 02F10202 		add	r2, r2, #2
 1505 0062 E4D1     		bne	.L111
 537:Src/adc.c     **** 	}
 538:Src/adc.c     **** }
 1506              		.loc 1 538 0
 1507 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 1508              	.L115:
 1509 0066 00BF     		.align	2
 1510              	.L114:
 1511 0068 00000000 		.word	g_CmdMap
 1512 006c 00000000 		.word	L_Slop_Array
 1513              		.cfi_endproc
 1514              	.LFE345:
 1516              		.global	pos_valid
 1517              		.global	pos_filterd
 1518              		.global	pos_sum
 1519              		.global	pos_array
 1520              		.global	index_pos_array
 1521              		.global	MU_Value_error_cnt
 1522              		.global	Pos_Corrected_last
 1523              		.global	adc_measurements_
 1524              		.global	g_Rt_Map
 1525              		.comm	hdma_adc2,96,4
 1526              		.comm	hadc2,108,4
 1527              		.comm	hadc1,108,4
 1528              		.global	force_Sum
 1529              		.global	force_Array
 1530              		.global	index_force_Array
 1531              		.global	YBP_Sum
 1532              		.global	YBP_Array
 1533              		.global	index_YBP_Array
 1534              		.global	MU_Value_base_0
 1535              		.global	sum_Pos_ADC_Array
 1536              		.global	Index_Pos_ADC_Array
 1537              		.global	Pos_ADC_Array
 1538              		.global	calibration_value
 1539              		.global	Flag_TEMP_ADC_Array_Filled
 1540              		.global	Flag_VOLT_ADC_Array_Filled
 1541              		.global	TEMP_Filter
 1542              		.global	VOLT_Filter
 1543              		.global	TEMP_ADC_Array_Index
 1544              		.global	VOLT_ADC_Array_Index
 1545              		.global	TEMP_ADC_Array
 1546              		.global	VOLT_ADC_Array
 1547              		.global	bus_voltage_
 1548              		.section	.bss.Flag_TEMP_ADC_Array_Filled,"aw",%nobits
 1549              		.set	.LANCHOR8,. + 0
 1552              	Flag_TEMP_ADC_Array_Filled:
 1553 0000 00       		.space	1
 1554              		.section	.bss.Flag_VOLT_ADC_Array_Filled,"aw",%nobits
 1557              	Flag_VOLT_ADC_Array_Filled:
 1558 0000 00       		.space	1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 39


 1559              		.section	.bss.Index_Pos_ADC_Array,"aw",%nobits
 1560              		.align	2
 1563              	Index_Pos_ADC_Array:
 1564 0000 00000000 		.space	4
 1565              		.section	.bss.MU_Value_base_0,"aw",%nobits
 1566              		.align	2
 1567              		.set	.LANCHOR17,. + 0
 1570              	MU_Value_base_0:
 1571 0000 00000000 		.space	4
 1572              		.section	.bss.MU_Value_error_cnt,"aw",%nobits
 1573              		.align	1
 1574              		.set	.LANCHOR15,. + 0
 1577              	MU_Value_error_cnt:
 1578 0000 0000     		.space	2
 1579              		.section	.bss.Pos_ADC_Array,"aw",%nobits
 1580              		.align	2
 1583              	Pos_ADC_Array:
 1584 0000 00000000 		.space	128
 1584      00000000 
 1584      00000000 
 1584      00000000 
 1584      00000000 
 1585              		.section	.bss.Pos_Corrected_last,"aw",%nobits
 1586              		.align	1
 1589              	Pos_Corrected_last:
 1590 0000 0000     		.space	2
 1591              		.section	.bss.TEMP_ADC_Array,"aw",%nobits
 1592              		.align	1
 1595              	TEMP_ADC_Array:
 1596 0000 00000000 		.space	40
 1596      00000000 
 1596      00000000 
 1596      00000000 
 1596      00000000 
 1597              		.section	.bss.TEMP_ADC_Array_Index,"aw",%nobits
 1598              		.align	1
 1601              	TEMP_ADC_Array_Index:
 1602 0000 0000     		.space	2
 1603              		.section	.bss.TEMP_Filter,"aw",%nobits
 1604              		.align	1
 1607              	TEMP_Filter:
 1608 0000 0000     		.space	2
 1609              		.section	.bss.VOLT_ADC_Array,"aw",%nobits
 1610              		.align	1
 1611              		.set	.LANCHOR9,. + 0
 1614              	VOLT_ADC_Array:
 1615 0000 00000000 		.space	40
 1615      00000000 
 1615      00000000 
 1615      00000000 
 1615      00000000 
 1616              		.section	.bss.VOLT_ADC_Array_Index,"aw",%nobits
 1617              		.align	1
 1620              	VOLT_ADC_Array_Index:
 1621 0000 0000     		.space	2
 1622              		.section	.bss.VOLT_Filter,"aw",%nobits
 1623              		.align	1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 40


 1624              		.set	.LANCHOR10,. + 0
 1627              	VOLT_Filter:
 1628 0000 0000     		.space	2
 1629              		.section	.bss.YBP_Array,"aw",%nobits
 1630              		.align	1
 1631              		.set	.LANCHOR3,. + 0
 1634              	YBP_Array:
 1635 0000 00000000 		.space	16
 1635      00000000 
 1635      00000000 
 1635      00000000 
 1636              		.section	.bss.YBP_Sum,"aw",%nobits
 1637              		.align	2
 1638              		.set	.LANCHOR4,. + 0
 1641              	YBP_Sum:
 1642 0000 00000000 		.space	4
 1643              		.section	.bss.adc_measurements_,"aw",%nobits
 1644              		.align	1
 1645              		.set	.LANCHOR0,. + 0
 1648              	adc_measurements_:
 1649 0000 00000000 		.space	4
 1650              		.section	.bss.bus_voltage_,"aw",%nobits
 1651              		.align	2
 1652              		.set	.LANCHOR1,. + 0
 1655              	bus_voltage_:
 1656 0000 00000000 		.space	4
 1657              		.section	.bss.calibration_value,"aw",%nobits
 1658              		.align	2
 1661              	calibration_value:
 1662 0000 00000000 		.space	16
 1662      00000000 
 1662      00000000 
 1662      00000000 
 1663              		.section	.bss.force_Array,"aw",%nobits
 1664              		.align	1
 1665              		.set	.LANCHOR6,. + 0
 1668              	force_Array:
 1669 0000 0000     		.space	2
 1670              		.section	.bss.force_Sum,"aw",%nobits
 1671              		.align	2
 1672              		.set	.LANCHOR7,. + 0
 1675              	force_Sum:
 1676 0000 00000000 		.space	4
 1677              		.section	.bss.index_YBP_Array,"aw",%nobits
 1678              		.align	1
 1679              		.set	.LANCHOR2,. + 0
 1682              	index_YBP_Array:
 1683 0000 0000     		.space	2
 1684              		.section	.bss.index_force_Array,"aw",%nobits
 1685              		.align	1
 1686              		.set	.LANCHOR5,. + 0
 1689              	index_force_Array:
 1690 0000 0000     		.space	2
 1691              		.section	.bss.index_pos_array,"aw",%nobits
 1692              		.align	1
 1693              		.set	.LANCHOR11,. + 0
 1696              	index_pos_array:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 41


 1697 0000 0000     		.space	2
 1698              		.section	.bss.pos_array,"aw",%nobits
 1699              		.align	1
 1700              		.set	.LANCHOR12,. + 0
 1703              	pos_array:
 1704 0000 00000000 		.space	256
 1704      00000000 
 1704      00000000 
 1704      00000000 
 1704      00000000 
 1705              		.section	.bss.pos_filterd,"aw",%nobits
 1706              		.align	1
 1707              		.set	.LANCHOR14,. + 0
 1710              	pos_filterd:
 1711 0000 0000     		.space	2
 1712              		.section	.bss.pos_sum,"aw",%nobits
 1713              		.align	2
 1714              		.set	.LANCHOR13,. + 0
 1717              	pos_sum:
 1718 0000 00000000 		.space	4
 1719              		.section	.bss.pos_valid,"aw",%nobits
 1720              		.align	1
 1721              		.set	.LANCHOR16,. + 0
 1724              	pos_valid:
 1725 0000 0000     		.space	2
 1726              		.section	.bss.sum_Pos_ADC_Array,"aw",%nobits
 1727              		.align	2
 1730              	sum_Pos_ADC_Array:
 1731 0000 00000000 		.space	4
 1732              		.section	.data.g_Rt_Map,"aw",%progbits
 1733              		.align	1
 1734              		.set	.LANCHOR18,. + 0
 1737              	g_Rt_Map:
 1738 0000 0B00     		.short	11
 1739 0002 1200     		.short	18
 1740 0004 1700     		.short	23
 1741 0006 1D00     		.short	29
 1742 0008 2200     		.short	34
 1743 000a 0C00     		.short	12
 1744 000c 2B00     		.short	43
 1745 000e 3000     		.short	48
 1746 0010 3400     		.short	52
 1747 0012 3900     		.short	57
 1748 0014 3E00     		.short	62
 1749 0016 4400     		.short	68
 1750 0018 4900     		.short	73
 1751 001a 4F00     		.short	79
 1752 001c 5600     		.short	86
 1753 001e 5D00     		.short	93
 1754 0020 6500     		.short	101
 1755 0022 6E00     		.short	110
 1756 0024 7800     		.short	120
 1757 0026 8200     		.short	130
 1758 0028 8D00     		.short	141
 1759 002a 9900     		.short	153
 1760 002c A700     		.short	167
 1761 002e B500     		.short	181
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 42


 1762 0030 C400     		.short	196
 1763 0032 D400     		.short	212
 1764 0034 E600     		.short	230
 1765 0036 F900     		.short	249
 1766 0038 0C01     		.short	268
 1767 003a 2201     		.short	290
 1768 003c 3801     		.short	312
 1769 003e 5001     		.short	336
 1770 0040 6801     		.short	360
 1771 0042 8301     		.short	387
 1772 0044 9E01     		.short	414
 1773 0046 BB01     		.short	443
 1774 0048 D901     		.short	473
 1775 004a F901     		.short	505
 1776 004c 1902     		.short	537
 1777 004e 3B02     		.short	571
 1778 0050 5F02     		.short	607
 1779 0052 8302     		.short	643
 1780 0054 A902     		.short	681
 1781 0056 D102     		.short	721
 1782 0058 F902     		.short	761
 1783 005a 2303     		.short	803
 1784 005c 4D03     		.short	845
 1785 005e 7903     		.short	889
 1786 0060 2300     		.short	35
 1787 0062 D503     		.short	981
 1788 0064 0404     		.short	1028
 1789 0066 3404     		.short	1076
 1790 0068 6504     		.short	1125
 1791 006a 9704     		.short	1175
 1792 006c CA04     		.short	1226
 1793 006e FE04     		.short	1278
 1794 0070 3205     		.short	1330
 1795 0072 6805     		.short	1384
 1796 0074 9D05     		.short	1437
 1797 0076 D405     		.short	1492
 1798 0078 0A06     		.short	1546
 1799 007a 4206     		.short	1602
 1800 007c 7906     		.short	1657
 1801 007e B106     		.short	1713
 1802 0080 E906     		.short	1769
 1803 0082 2107     		.short	1825
 1804 0084 5907     		.short	1881
 1805 0086 9107     		.short	1937
 1806 0088 C807     		.short	1992
 1807 008a 0008     		.short	2048
 1808 008c 3708     		.short	2103
 1809              		.text
 1810              	.Letext0:
 1811              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1812              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1813              		.file 4 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 1814              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1815              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 1816              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1817              		.file 8 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1818              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 43


 1819              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1820              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 1821              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc_ex.h"
 1822              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 1823              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h"
 1824              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1825              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 1826              		.file 17 "Inc/adc.h"
 1827              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1828              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1829              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-ea
 1830              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1831              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1832              		.file 23 "Inc/uart.h"
 1833              		.file 24 "Inc/pwm.h"
 1834              		.file 25 "Inc/spi_MEncoder.h"
 1835              		.file 26 "Inc/stm32_math_sin.h"
 1836              		.file 27 "Inc/pid.h"
 1837              		.file 28 "Inc/profile_joint.h"
 1838              		.file 29 "Inc/icmu.h"
 1839              		.file 30 "Inc/performance_test.h"
 1840              		.file 31 "Inc/global.h"
 1841              		.file 32 "<built-in>"
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:18     .text.MX_ADC1_Init:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:25     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:212    .text.MX_ADC1_Init:000000f4 $d
                            *COM*:0000006c hadc1
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:219    .text.MX_ADC2_Init:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:226    .text.MX_ADC2_Init:00000000 MX_ADC2_Init
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:427    .text.MX_ADC2_Init:00000110 $d
                            *COM*:0000006c hadc2
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:441    .text.start_temperature_adc:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:448    .text.start_temperature_adc:00000000 start_temperature_adc
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:531    .text.start_temperature_adc:00000070 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:542    .text.get_average_forceSensor_adc:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:549    .text.get_average_forceSensor_adc:00000000 get_average_forceSensor_adc
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:605    .text.get_average_forceSensor_adc:00000044 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:615    .text.get_average_force_data:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:622    .text.get_average_force_data:00000000 get_average_force_data
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:725    .text.get_average_force_data:00000088 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:733    .text.ADC1_2_IRQHandler:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:740    .text.ADC1_2_IRQHandler:00000000 ADC1_2_IRQHandler
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:767    .text.ADC1_2_IRQHandler:0000001c $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:772    .text.Get_VOLT_Filter:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:779    .text.Get_VOLT_Filter:00000000 Get_VOLT_Filter
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:826    .text.Get_VOLT_Filter:00000034 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:833    .text.pos_linearity_ini:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:840    .text.pos_linearity_ini:00000000 pos_linearity_ini
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:892    .text.pos_linearity_ini:00000044 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:898    .text.Pos_Correct:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:905    .text.Pos_Correct:00000000 Pos_Correct
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1104   .text.Pos_Correct:00000128 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1117   .text.Get_Pos_Rod:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1124   .text.Get_Pos_Rod:00000000 Get_Pos_Rod
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1266   .text.Get_Pos_Rod:000000f0 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1282   .text.check_linearity:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1289   .text.check_linearity:00000000 check_linearity
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1350   .text.check_linearity:00000054 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1355   .text.get_temperature_value:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1362   .text.get_temperature_value:00000000 get_temperature_value
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1425   .text.get_temperature_value:0000003c $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1430   .text.pos_linearity_set_default:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1437   .text.pos_linearity_set_default:00000000 pos_linearity_set_default
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1511   .text.pos_linearity_set_default:00000068 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1724   .bss.pos_valid:00000000 pos_valid
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1710   .bss.pos_filterd:00000000 pos_filterd
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1717   .bss.pos_sum:00000000 pos_sum
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1703   .bss.pos_array:00000000 pos_array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1696   .bss.index_pos_array:00000000 index_pos_array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1577   .bss.MU_Value_error_cnt:00000000 MU_Value_error_cnt
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1589   .bss.Pos_Corrected_last:00000000 Pos_Corrected_last
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1648   .bss.adc_measurements_:00000000 adc_measurements_
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1737   .data.g_Rt_Map:00000000 g_Rt_Map
                            *COM*:00000060 hdma_adc2
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1675   .bss.force_Sum:00000000 force_Sum
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1668   .bss.force_Array:00000000 force_Array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1689   .bss.index_force_Array:00000000 index_force_Array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1641   .bss.YBP_Sum:00000000 YBP_Sum
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 45


C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1634   .bss.YBP_Array:00000000 YBP_Array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1682   .bss.index_YBP_Array:00000000 index_YBP_Array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1570   .bss.MU_Value_base_0:00000000 MU_Value_base_0
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1730   .bss.sum_Pos_ADC_Array:00000000 sum_Pos_ADC_Array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1563   .bss.Index_Pos_ADC_Array:00000000 Index_Pos_ADC_Array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1583   .bss.Pos_ADC_Array:00000000 Pos_ADC_Array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1661   .bss.calibration_value:00000000 calibration_value
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1552   .bss.Flag_TEMP_ADC_Array_Filled:00000000 Flag_TEMP_ADC_Array_Filled
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1557   .bss.Flag_VOLT_ADC_Array_Filled:00000000 Flag_VOLT_ADC_Array_Filled
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1607   .bss.TEMP_Filter:00000000 TEMP_Filter
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1627   .bss.VOLT_Filter:00000000 VOLT_Filter
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1601   .bss.TEMP_ADC_Array_Index:00000000 TEMP_ADC_Array_Index
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1620   .bss.VOLT_ADC_Array_Index:00000000 VOLT_ADC_Array_Index
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1595   .bss.TEMP_ADC_Array:00000000 TEMP_ADC_Array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1614   .bss.VOLT_ADC_Array:00000000 VOLT_ADC_Array
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1655   .bss.bus_voltage_:00000000 bus_voltage_
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1553   .bss.Flag_TEMP_ADC_Array_Filled:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1558   .bss.Flag_VOLT_ADC_Array_Filled:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1560   .bss.Index_Pos_ADC_Array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1566   .bss.MU_Value_base_0:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1573   .bss.MU_Value_error_cnt:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1580   .bss.Pos_ADC_Array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1586   .bss.Pos_Corrected_last:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1592   .bss.TEMP_ADC_Array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1598   .bss.TEMP_ADC_Array_Index:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1604   .bss.TEMP_Filter:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1610   .bss.VOLT_ADC_Array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1617   .bss.VOLT_ADC_Array_Index:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1623   .bss.VOLT_Filter:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1630   .bss.YBP_Array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1637   .bss.YBP_Sum:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1644   .bss.adc_measurements_:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1651   .bss.bus_voltage_:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1658   .bss.calibration_value:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1664   .bss.force_Array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1671   .bss.force_Sum:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1678   .bss.index_YBP_Array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1685   .bss.index_force_Array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1692   .bss.index_pos_array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1699   .bss.pos_array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1706   .bss.pos_filterd:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1713   .bss.pos_sum:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1720   .bss.pos_valid:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1727   .bss.sum_Pos_ADC_Array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccQrScee.s:1733   .data.g_Rt_Map:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_ADC_Init
Error_Handler
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_ADCEx_InjectedConfigChannel
HAL_ADCEx_Calibration_Start
HAL_ADCEx_Calibration_GetValue
HAL_ADCEx_Calibration_SetValue
HAL_ADCEx_InjectedStart
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccQrScee.s 			page 46


HAL_ADC_Start_DMA
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
HAL_ADC_Start
g_CmdMap
__aeabi_ldivmod
ServoPro_Fast
L_Slop_Array
Encode_Single_to_Multi_R
g_pPos_ref_base_um
g_MechanicsAngle_15bit
rod_pos_Muti_Encoder
g_pMU_value_offset
vlaue_icmu_offset_overturn
MU_Value
range_icmu_vlaue_need_addMax
g_pMU_0mm_offset
pos_nm_MU150
