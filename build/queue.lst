ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvIsQueueEmpty,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvIsQueueEmpty:
  25              	.LFB29:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** for the header files above, but not in this file, in order to generate the
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** being used for. */
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueuePointers
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } QueuePointers_t;
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct SemaphoreData
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } SemaphoreData_t;
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition 		/* The old naming convention is used to prevent breaking kernel aw
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate enough space to hold the maximum number of items that
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		can be in the queue at any time.  It is valid for uxItemSize to be
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		zero in the case the queue is used as a semaphore. */
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as th
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		two bytes). */
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Not used in this path. */
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					( void ) uxPreviousMessagesWaiting;
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 32


1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 33


1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 34


1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 35


1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 36


1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 37


2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 38


2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 39


2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 40


2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 41


2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  27              		.loc 1 2292 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              		.loc 1 2292 0
  38 0002 0446     		mov	r4, r0
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  39              		.loc 1 2295 0
  40 0004 FFF7FEFF 		bl	vPortEnterCritical
  41              	.LVL1:
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 42


  42              		.loc 1 2297 0
  43 0008 A46B     		ldr	r4, [r4, #56]
  44              	.LVL2:
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  45              		.loc 1 2306 0
  46 000a FFF7FEFF 		bl	vPortExitCritical
  47              	.LVL3:
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  48              		.loc 1 2309 0
  49 000e B4FA84F0 		clz	r0, r4
  50 0012 4009     		lsrs	r0, r0, #5
  51 0014 10BD     		pop	{r4, pc}
  52              		.cfi_endproc
  53              	.LFE29:
  55              		.section	.text.prvCopyDataToQueue,"ax",%progbits
  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu fpv4-sp-d16
  62              	prvCopyDataToQueue:
  63              	.LFB26:
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
  64              		.loc 1 2075 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              	.LVL4:
  69 0000 70B5     		push	{r4, r5, r6, lr}
  70              	.LCFI1:
  71              		.cfi_def_cfa_offset 16
  72              		.cfi_offset 4, -16
  73              		.cfi_offset 5, -12
  74              		.cfi_offset 6, -8
  75              		.cfi_offset 14, -4
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
  76              		.loc 1 2075 0
  77 0002 1546     		mov	r5, r2
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  78              		.loc 1 2083 0
  79 0004 026C     		ldr	r2, [r0, #64]
  80              	.LVL5:
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  81              		.loc 1 2081 0
  82 0006 866B     		ldr	r6, [r0, #56]
  83              	.LVL6:
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 43


  84              		.loc 1 2075 0
  85 0008 0446     		mov	r4, r0
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  86              		.loc 1 2083 0
  87 000a 42B9     		cbnz	r2, .L3
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
  88              		.loc 1 2087 0
  89 000c 0568     		ldr	r5, [r0]
  90              	.LVL7:
  91 000e 9DB9     		cbnz	r5, .L9
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
  92              		.loc 1 2090 0
  93 0010 8068     		ldr	r0, [r0, #8]
  94              	.LVL8:
  95 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
  96              	.LVL9:
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
  97              		.loc 1 2091 0
  98 0016 A560     		str	r5, [r4, #8]
  99              	.LVL10:
 100              	.L4:
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 101              		.loc 1 2147 0
 102 0018 0136     		adds	r6, r6, #1
 103              	.LVL11:
 104 001a A663     		str	r6, [r4, #56]
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 105              		.loc 1 2150 0
 106 001c 70BD     		pop	{r4, r5, r6, pc}
 107              	.LVL12:
 108              	.L3:
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 109              		.loc 1 2100 0
 110 001e 6DB9     		cbnz	r5, .L5
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 111              		.loc 1 2102 0
 112 0020 4068     		ldr	r0, [r0, #4]
 113              	.LVL13:
 114 0022 FFF7FEFF 		bl	memcpy
 115              	.LVL14:
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 116              		.loc 1 2103 0
 117 0026 6368     		ldr	r3, [r4, #4]
 118 0028 226C     		ldr	r2, [r4, #64]
 119 002a 1344     		add	r3, r3, r2
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 120              		.loc 1 2104 0
 121 002c A268     		ldr	r2, [r4, #8]
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 122              		.loc 1 2103 0
 123 002e 6360     		str	r3, [r4, #4]
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 124              		.loc 1 2104 0
 125 0030 9342     		cmp	r3, r2
 126 0032 01D3     		bcc	.L9
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 127              		.loc 1 2106 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 44


 128 0034 2368     		ldr	r3, [r4]
 129 0036 6360     		str	r3, [r4, #4]
 130              	.LVL15:
 131              	.L9:
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 132              		.loc 1 2076 0
 133 0038 0020     		movs	r0, #0
 134 003a EDE7     		b	.L4
 135              	.LVL16:
 136              	.L5:
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 137              		.loc 1 2115 0
 138 003c C068     		ldr	r0, [r0, #12]
 139              	.LVL17:
 140 003e FFF7FEFF 		bl	memcpy
 141              	.LVL18:
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 142              		.loc 1 2116 0
 143 0042 236C     		ldr	r3, [r4, #64]
 144 0044 E268     		ldr	r2, [r4, #12]
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 145              		.loc 1 2117 0
 146 0046 2168     		ldr	r1, [r4]
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 147              		.loc 1 2116 0
 148 0048 5B42     		negs	r3, r3
 149 004a 1A44     		add	r2, r2, r3
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 150              		.loc 1 2117 0
 151 004c 8A42     		cmp	r2, r1
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 152              		.loc 1 2116 0
 153 004e E260     		str	r2, [r4, #12]
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 154              		.loc 1 2119 0
 155 0050 3EBF     		ittt	cc
 156 0052 A268     		ldrcc	r2, [r4, #8]
 157 0054 9B18     		addcc	r3, r3, r2
 158 0056 E360     		strcc	r3, [r4, #12]
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 159              		.loc 1 2126 0
 160 0058 022D     		cmp	r5, #2
 161 005a EDD1     		bne	.L9
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 162              		.loc 1 2128 0
 163 005c 0EB1     		cbz	r6, .L10
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 164              		.loc 1 2134 0
 165 005e 013E     		subs	r6, r6, #1
 166              	.LVL19:
 167 0060 EAE7     		b	.L9
 168              	.L10:
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 169              		.loc 1 2076 0
 170 0062 3046     		mov	r0, r6
 171 0064 D8E7     		b	.L4
 172              		.cfi_endproc
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 45


 173              	.LFE26:
 175              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 176              		.align	1
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	prvCopyDataFromQueue:
 183              	.LFB27:
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 184              		.loc 1 2154 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL20:
 190 0000 0346     		mov	r3, r0
 191 0002 10B4     		push	{r4}
 192              	.LCFI2:
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 4, -4
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 195              		.loc 1 2155 0
 196 0004 1A6C     		ldr	r2, [r3, #64]
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 197              		.loc 1 2154 0
 198 0006 0846     		mov	r0, r1
 199              	.LVL21:
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 200              		.loc 1 2155 0
 201 0008 62B1     		cbz	r2, .L11
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 202              		.loc 1 2157 0
 203 000a D968     		ldr	r1, [r3, #12]
 204              	.LVL22:
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 205              		.loc 1 2158 0
 206 000c 9C68     		ldr	r4, [r3, #8]
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 207              		.loc 1 2157 0
 208 000e 1144     		add	r1, r1, r2
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 209              		.loc 1 2158 0
 210 0010 A142     		cmp	r1, r4
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 211              		.loc 1 2157 0
 212 0012 D960     		str	r1, [r3, #12]
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 213              		.loc 1 2160 0
 214 0014 24BF     		itt	cs
 215 0016 1968     		ldrcs	r1, [r3]
 216 0018 D960     		strcs	r1, [r3, #12]
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 217              		.loc 1 2166 0
 218 001a D968     		ldr	r1, [r3, #12]
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 219              		.loc 1 2168 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 46


 220 001c 5DF8044B 		ldr	r4, [sp], #4
 221              	.LCFI3:
 222              		.cfi_remember_state
 223              		.cfi_restore 4
 224              		.cfi_def_cfa_offset 0
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 225              		.loc 1 2166 0
 226 0020 FFF7FEBF 		b	memcpy
 227              	.LVL23:
 228              	.L11:
 229              	.LCFI4:
 230              		.cfi_restore_state
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 231              		.loc 1 2168 0
 232 0024 5DF8044B 		ldr	r4, [sp], #4
 233              	.LCFI5:
 234              		.cfi_restore 4
 235              		.cfi_def_cfa_offset 0
 236 0028 7047     		bx	lr
 237              		.cfi_endproc
 238              	.LFE27:
 240              		.section	.text.prvUnlockQueue,"ax",%progbits
 241              		.align	1
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu fpv4-sp-d16
 247              	prvUnlockQueue:
 248              	.LFB28:
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 249              		.loc 1 2172 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              	.LVL24:
 254 0000 70B5     		push	{r4, r5, r6, lr}
 255              	.LCFI6:
 256              		.cfi_def_cfa_offset 16
 257              		.cfi_offset 4, -16
 258              		.cfi_offset 5, -12
 259              		.cfi_offset 6, -8
 260              		.cfi_offset 14, -4
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 261              		.loc 1 2172 0
 262 0002 0446     		mov	r4, r0
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 263              		.loc 1 2179 0
 264 0004 FFF7FEFF 		bl	vPortEnterCritical
 265              	.LVL25:
 266              	.LBB93:
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 267              		.loc 1 2181 0
 268 0008 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 269              		.loc 1 2234 0
 270 000c 04F12406 		add	r6, r4, #36
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 47


 271              		.loc 1 2181 0
 272 0010 6DB2     		sxtb	r5, r5
 273              	.LVL26:
 274              	.L15:
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 275              		.loc 1 2184 0
 276 0012 002D     		cmp	r5, #0
 277 0014 14DC     		bgt	.L18
 278              	.L16:
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 279              		.loc 1 2255 0
 280 0016 FF23     		movs	r3, #255
 281 0018 84F84530 		strb	r3, [r4, #69]
 282              	.LBE93:
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 283              		.loc 1 2257 0
 284 001c FFF7FEFF 		bl	vPortExitCritical
 285              	.LVL27:
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 286              		.loc 1 2260 0
 287 0020 FFF7FEFF 		bl	vPortEnterCritical
 288              	.LVL28:
 289              	.LBB94:
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 290              		.loc 1 2262 0
 291 0024 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 292              	.LVL29:
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 293              		.loc 1 2268 0
 294 0028 04F11006 		add	r6, r4, #16
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 295              		.loc 1 2262 0
 296 002c 6DB2     		sxtb	r5, r5
 297              	.LVL30:
 298              	.L19:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 299              		.loc 1 2264 0
 300 002e 002D     		cmp	r5, #0
 301 0030 12DC     		bgt	.L22
 302              	.L20:
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 303              		.loc 1 2285 0
 304 0032 FF23     		movs	r3, #255
 305 0034 84F84430 		strb	r3, [r4, #68]
 306              	.LBE94:
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 307              		.loc 1 2288 0
 308 0038 BDE87040 		pop	{r4, r5, r6, lr}
 309              	.LCFI7:
 310              		.cfi_remember_state
 311              		.cfi_restore 14
 312              		.cfi_restore 6
 313              		.cfi_restore 5
 314              		.cfi_restore 4
 315              		.cfi_def_cfa_offset 0
 316              	.LVL31:
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 48


 317              		.loc 1 2287 0
 318 003c FFF7FEBF 		b	vPortExitCritical
 319              	.LVL32:
 320              	.L18:
 321              	.LCFI8:
 322              		.cfi_restore_state
 323              	.LBB95:
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 324              		.loc 1 2232 0
 325 0040 636A     		ldr	r3, [r4, #36]
 326 0042 002B     		cmp	r3, #0
 327 0044 E7D0     		beq	.L16
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 328              		.loc 1 2234 0
 329 0046 3046     		mov	r0, r6
 330 0048 FFF7FEFF 		bl	xTaskRemoveFromEventList
 331              	.LVL33:
 332 004c 08B1     		cbz	r0, .L17
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 333              		.loc 1 2238 0
 334 004e FFF7FEFF 		bl	vTaskMissedYield
 335              	.LVL34:
 336              	.L17:
 337 0052 013D     		subs	r5, r5, #1
 338              	.LVL35:
 339 0054 6DB2     		sxtb	r5, r5
 340              	.LVL36:
 341 0056 DCE7     		b	.L15
 342              	.LVL37:
 343              	.L22:
 344              	.LBE95:
 345              	.LBB96:
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 346              		.loc 1 2266 0
 347 0058 2369     		ldr	r3, [r4, #16]
 348 005a 002B     		cmp	r3, #0
 349 005c E9D0     		beq	.L20
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 350              		.loc 1 2268 0
 351 005e 3046     		mov	r0, r6
 352 0060 FFF7FEFF 		bl	xTaskRemoveFromEventList
 353              	.LVL38:
 354 0064 08B1     		cbz	r0, .L21
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 355              		.loc 1 2270 0
 356 0066 FFF7FEFF 		bl	vTaskMissedYield
 357              	.LVL39:
 358              	.L21:
 359 006a 013D     		subs	r5, r5, #1
 360              	.LVL40:
 361 006c 6DB2     		sxtb	r5, r5
 362              	.LVL41:
 363 006e DEE7     		b	.L19
 364              	.LBE96:
 365              		.cfi_endproc
 366              	.LFE28:
 368              		.section	.text.xQueueGenericReset,"ax",%progbits
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 49


 369              		.align	1
 370              		.global	xQueueGenericReset
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	xQueueGenericReset:
 377              	.LFB5:
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 378              		.loc 1 256 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              	.LVL42:
 383 0000 38B5     		push	{r3, r4, r5, lr}
 384              	.LCFI9:
 385              		.cfi_def_cfa_offset 16
 386              		.cfi_offset 3, -16
 387              		.cfi_offset 4, -12
 388              		.cfi_offset 5, -8
 389              		.cfi_offset 14, -4
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 390              		.loc 1 256 0
 391 0002 0D46     		mov	r5, r1
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392              		.loc 1 259 0
 393 0004 0446     		mov	r4, r0
 394 0006 40B9     		cbnz	r0, .L36
 395              	.LBB97:
 396              	.LBB98:
 397              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 50


  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 51


  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 52


 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 398              		.loc 2 195 0
 399              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 53


 400              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 401 0008 4FF05003 			mov r3, #80												
 402 000c 83F31188 		msr basepri, r3											
 403 0010 BFF36F8F 		isb														
 404 0014 BFF34F8F 		dsb														
 405              	
 406              	@ 0 "" 2
 407              	.LVL43:
 408              		.thumb
 409              		.syntax unified
 410              	.L37:
 411 0018 FEE7     		b	.L37
 412              	.L36:
 413              	.LBE98:
 414              	.LBE97:
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 415              		.loc 1 261 0
 416 001a FFF7FEFF 		bl	vPortEnterCritical
 417              	.LVL44:
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 418              		.loc 1 263 0
 419 001e D4E90F30 		ldrd	r3, r0, [r4, #60]
 420 0022 2268     		ldr	r2, [r4]
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 421              		.loc 1 265 0
 422 0024 6260     		str	r2, [r4, #4]
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 423              		.loc 1 263 0
 424 0026 4343     		muls	r3, r0, r3
 425 0028 D118     		adds	r1, r2, r3
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 426              		.loc 1 266 0
 427 002a 1B1A     		subs	r3, r3, r0
 428 002c 1344     		add	r3, r3, r2
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 429              		.loc 1 263 0
 430 002e A160     		str	r1, [r4, #8]
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 431              		.loc 1 266 0
 432 0030 E360     		str	r3, [r4, #12]
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 433              		.loc 1 264 0
 434 0032 0021     		movs	r1, #0
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 435              		.loc 1 267 0
 436 0034 FF23     		movs	r3, #255
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 437              		.loc 1 264 0
 438 0036 A163     		str	r1, [r4, #56]
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 439              		.loc 1 267 0
 440 0038 84F84430 		strb	r3, [r4, #68]
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 441              		.loc 1 268 0
 442 003c 84F84530 		strb	r3, [r4, #69]
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 443              		.loc 1 270 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 54


 444 0040 95B9     		cbnz	r5, .L38
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 445              		.loc 1 277 0
 446 0042 2369     		ldr	r3, [r4, #16]
 447 0044 63B1     		cbz	r3, .L40
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 448              		.loc 1 279 0
 449 0046 04F11000 		add	r0, r4, #16
 450 004a FFF7FEFF 		bl	xTaskRemoveFromEventList
 451              	.LVL45:
 452 004e 38B1     		cbz	r0, .L40
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 453              		.loc 1 281 0
 454 0050 0A4B     		ldr	r3, .L45
 455 0052 4FF08052 		mov	r2, #268435456
 456 0056 1A60     		str	r2, [r3]
 457              		.syntax unified
 458              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 459 0058 BFF34F8F 		dsb
 460              	@ 0 "" 2
 461              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 462 005c BFF36F8F 		isb
 463              	@ 0 "" 2
 464              		.thumb
 465              		.syntax unified
 466              	.L40:
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 467              		.loc 1 300 0
 468 0060 FFF7FEFF 		bl	vPortExitCritical
 469              	.LVL46:
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 470              		.loc 1 305 0
 471 0064 0120     		movs	r0, #1
 472 0066 38BD     		pop	{r3, r4, r5, pc}
 473              	.LVL47:
 474              	.L38:
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 475              		.loc 1 296 0
 476 0068 04F11000 		add	r0, r4, #16
 477 006c FFF7FEFF 		bl	vListInitialise
 478              	.LVL48:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 479              		.loc 1 297 0
 480 0070 04F12400 		add	r0, r4, #36
 481 0074 FFF7FEFF 		bl	vListInitialise
 482              	.LVL49:
 483 0078 F2E7     		b	.L40
 484              	.L46:
 485 007a 00BF     		.align	2
 486              	.L45:
 487 007c 04ED00E0 		.word	-536810236
 488              		.cfi_endproc
 489              	.LFE5:
 491              		.section	.text.xQueueGenericCreate,"ax",%progbits
 492              		.align	1
 493              		.global	xQueueGenericCreate
 494              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 55


 495              		.thumb
 496              		.thumb_func
 497              		.fpu fpv4-sp-d16
 499              	xQueueGenericCreate:
 500              	.LFB6:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 501              		.loc 1 369 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              	.LVL50:
 506 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 507              	.LCFI10:
 508              		.cfi_def_cfa_offset 24
 509              		.cfi_offset 3, -24
 510              		.cfi_offset 4, -20
 511              		.cfi_offset 5, -16
 512              		.cfi_offset 6, -12
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 515              		.loc 1 369 0
 516 0002 0D46     		mov	r5, r1
 517 0004 1746     		mov	r7, r2
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 518              		.loc 1 374 0
 519 0006 0646     		mov	r6, r0
 520 0008 40B9     		cbnz	r0, .L48
 521              	.LBB103:
 522              	.LBB104:
 523              		.loc 2 195 0
 524              		.syntax unified
 525              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 526 000a 4FF05003 			mov r3, #80												
 527 000e 83F31188 		msr basepri, r3											
 528 0012 BFF36F8F 		isb														
 529 0016 BFF34F8F 		dsb														
 530              	
 531              	@ 0 "" 2
 532              	.LVL51:
 533              		.thumb
 534              		.syntax unified
 535              	.L49:
 536 001a FEE7     		b	.L49
 537              	.L48:
 538              	.LVL52:
 539              	.LBE104:
 540              	.LBE103:
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 541              		.loc 1 379 0
 542 001c 4843     		muls	r0, r1, r0
 543              	.LVL53:
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 544              		.loc 1 390 0
 545 001e 5030     		adds	r0, r0, #80
 546              	.LVL54:
 547 0020 FFF7FEFF 		bl	pvPortMalloc
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 56


 548              	.LVL55:
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 549              		.loc 1 392 0
 550 0024 0446     		mov	r4, r0
 551 0026 60B1     		cbz	r0, .L47
 552              	.LVL56:
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 553              		.loc 1 397 0
 554 0028 00F15003 		add	r3, r0, #80
 555              	.LVL57:
 556              	.LBB105:
 557              	.LBB106:
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 558              		.loc 1 434 0
 559 002c 002D     		cmp	r5, #0
 560 002e 08BF     		it	eq
 561 0030 0346     		moveq	r3, r0
 562              	.LVL58:
 563 0032 0360     		str	r3, [r0]
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 564              		.loc 1 445 0
 565 0034 C0E90F65 		strd	r6, r5, [r0, #60]
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 566              		.loc 1 446 0
 567 0038 0121     		movs	r1, #1
 568 003a FFF7FEFF 		bl	xQueueGenericReset
 569              	.LVL59:
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 570              		.loc 1 450 0
 571 003e 84F84C70 		strb	r7, [r4, #76]
 572              	.LVL60:
 573              	.L47:
 574              	.LBE106:
 575              	.LBE105:
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 576              		.loc 1 417 0
 577 0042 2046     		mov	r0, r4
 578 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 579              		.cfi_endproc
 580              	.LFE6:
 582              		.section	.text.xQueueGenericSend,"ax",%progbits
 583              		.align	1
 584              		.global	xQueueGenericSend
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	xQueueGenericSend:
 591              	.LFB10:
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 592              		.loc 1 741 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 16
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              	.LVL61:
 597 0000 2DE9FF47 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 598              	.LCFI11:
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 57


 599              		.cfi_def_cfa_offset 48
 600              		.cfi_offset 4, -32
 601              		.cfi_offset 5, -28
 602              		.cfi_offset 6, -24
 603              		.cfi_offset 7, -20
 604              		.cfi_offset 8, -16
 605              		.cfi_offset 9, -12
 606              		.cfi_offset 10, -8
 607              		.cfi_offset 14, -4
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 608              		.loc 1 741 0
 609 0004 8846     		mov	r8, r1
 610 0006 0192     		str	r2, [sp, #4]
 611 0008 1F46     		mov	r7, r3
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 612              		.loc 1 746 0
 613 000a 0446     		mov	r4, r0
 614 000c 40B9     		cbnz	r0, .L57
 615              	.LBB117:
 616              	.LBB118:
 617              		.loc 2 195 0
 618              		.syntax unified
 619              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 620 000e 4FF05003 			mov r3, #80												
 621 0012 83F31188 		msr basepri, r3											
 622 0016 BFF36F8F 		isb														
 623 001a BFF34F8F 		dsb														
 624              	
 625              	@ 0 "" 2
 626              	.LVL62:
 627              		.thumb
 628              		.syntax unified
 629              	.L58:
 630 001e FEE7     		b	.L58
 631              	.LVL63:
 632              	.L57:
 633              	.LBE118:
 634              	.LBE117:
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 635              		.loc 1 747 0
 636 0020 51B9     		cbnz	r1, .L59
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 637              		.loc 1 747 0 is_stmt 0 discriminator 2
 638 0022 036C     		ldr	r3, [r0, #64]
 639              	.LVL64:
 640 0024 43B1     		cbz	r3, .L59
 641              	.LBB119:
 642              	.LBB120:
 643              		.loc 2 195 0 is_stmt 1
 644              		.syntax unified
 645              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 646 0026 4FF05003 			mov r3, #80												
 647 002a 83F31188 		msr basepri, r3											
 648 002e BFF36F8F 		isb														
 649 0032 BFF34F8F 		dsb														
 650              	
 651              	@ 0 "" 2
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 58


 652              	.LVL65:
 653              		.thumb
 654              		.syntax unified
 655              	.L60:
 656 0036 FEE7     		b	.L60
 657              	.L59:
 658              	.LBE120:
 659              	.LBE119:
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 660              		.loc 1 748 0
 661 0038 022F     		cmp	r7, #2
 662 003a 0BD1     		bne	.L61
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 663              		.loc 1 748 0 is_stmt 0 discriminator 2
 664 003c E36B     		ldr	r3, [r4, #60]
 665 003e 012B     		cmp	r3, #1
 666 0040 08D0     		beq	.L61
 667              	.LBB121:
 668              	.LBB122:
 669              		.loc 2 195 0 is_stmt 1
 670              		.syntax unified
 671              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 672 0042 4FF05003 			mov r3, #80												
 673 0046 83F31188 		msr basepri, r3											
 674 004a BFF36F8F 		isb														
 675 004e BFF34F8F 		dsb														
 676              	
 677              	@ 0 "" 2
 678              	.LVL66:
 679              		.thumb
 680              		.syntax unified
 681              	.L62:
 682 0052 FEE7     		b	.L62
 683              	.L61:
 684              	.LBE122:
 685              	.LBE121:
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 686              		.loc 1 751 0
 687 0054 FFF7FEFF 		bl	xTaskGetSchedulerState
 688              	.LVL67:
 689 0058 50B9     		cbnz	r0, .L81
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 690              		.loc 1 751 0 is_stmt 0 discriminator 2
 691 005a 019E     		ldr	r6, [sp, #4]
 692 005c 4EB1     		cbz	r6, .L63
 693              	.LBB123:
 694              	.LBB124:
 695              		.loc 2 195 0 is_stmt 1
 696              		.syntax unified
 697              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 698 005e 4FF05003 			mov r3, #80												
 699 0062 83F31188 		msr basepri, r3											
 700 0066 BFF36F8F 		isb														
 701 006a BFF34F8F 		dsb														
 702              	
 703              	@ 0 "" 2
 704              	.LVL68:
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 59


 705              		.thumb
 706              		.syntax unified
 707              	.L64:
 708 006e FEE7     		b	.L64
 709              	.L81:
 710              	.LBE124:
 711              	.LBE123:
 712 0070 0026     		movs	r6, #0
 713              	.L63:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 714              		.loc 1 903 0
 715 0072 4FF00009 		mov	r9, #0
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 716              		.loc 1 927 0
 717 0076 DFF8E8A0 		ldr	r10, .L95
 718 007a 37E0     		b	.L65
 719              	.LVL69:
 720              	.L67:
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 721              		.loc 1 872 0
 722 007c 019D     		ldr	r5, [sp, #4]
 723 007e 1DB9     		cbnz	r5, .L73
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 724              		.loc 1 876 0
 725 0080 FFF7FEFF 		bl	vPortExitCritical
 726              	.LVL70:
 727              	.L93:
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 728              		.loc 1 944 0
 729 0084 0020     		movs	r0, #0
 730 0086 50E0     		b	.L56
 731              	.LVL71:
 732              	.L73:
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 733              		.loc 1 883 0
 734 0088 16B9     		cbnz	r6, .L74
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 735              		.loc 1 887 0
 736 008a 02A8     		add	r0, sp, #8
 737 008c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 738              	.LVL72:
 739              	.L74:
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740              		.loc 1 897 0
 741 0090 FFF7FEFF 		bl	vPortExitCritical
 742              	.LVL73:
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 743              		.loc 1 902 0
 744 0094 FFF7FEFF 		bl	vTaskSuspendAll
 745              	.LVL74:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 746              		.loc 1 903 0
 747 0098 FFF7FEFF 		bl	vPortEnterCritical
 748              	.LVL75:
 749 009c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 750 00a0 FF2B     		cmp	r3, #255
 751 00a2 08BF     		it	eq
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 60


 752 00a4 84F84490 		strbeq	r9, [r4, #68]
 753 00a8 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 754 00ac FF2B     		cmp	r3, #255
 755 00ae 08BF     		it	eq
 756 00b0 84F84590 		strbeq	r9, [r4, #69]
 757 00b4 FFF7FEFF 		bl	vPortExitCritical
 758              	.LVL76:
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 759              		.loc 1 906 0
 760 00b8 01A9     		add	r1, sp, #4
 761 00ba 02A8     		add	r0, sp, #8
 762 00bc FFF7FEFF 		bl	xTaskCheckForTimeOut
 763              	.LVL77:
 764 00c0 0028     		cmp	r0, #0
 765 00c2 46D1     		bne	.L77
 766              	.LVL78:
 767              	.LBB125:
 768              	.LBB126:
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 769              		.loc 1 2335 0
 770 00c4 FFF7FEFF 		bl	vPortEnterCritical
 771              	.LVL79:
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 772              		.loc 1 2337 0
 773 00c8 A26B     		ldr	r2, [r4, #56]
 774 00ca E36B     		ldr	r3, [r4, #60]
 775 00cc 9A42     		cmp	r2, r3
 776 00ce 2FD1     		bne	.L78
 777              	.LVL80:
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 61


2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 778              		.loc 1 2346 0
 779 00d0 FFF7FEFF 		bl	vPortExitCritical
 780              	.LVL81:
 781              	.LBE126:
 782              	.LBE125:
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 783              		.loc 1 911 0
 784 00d4 0199     		ldr	r1, [sp, #4]
 785 00d6 04F11000 		add	r0, r4, #16
 786 00da FFF7FEFF 		bl	vTaskPlaceOnEventList
 787              	.LVL82:
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 788              		.loc 1 918 0
 789 00de 2046     		mov	r0, r4
 790 00e0 FFF7FEFF 		bl	prvUnlockQueue
 791              	.LVL83:
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 792              		.loc 1 925 0
 793 00e4 FFF7FEFF 		bl	xTaskResumeAll
 794              	.LVL84:
 795 00e8 50B3     		cbz	r0, .L79
 796              	.L80:
 797 00ea 0126     		movs	r6, #1
 798              	.LVL85:
 799              	.L65:
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 800              		.loc 1 761 0
 801 00ec FFF7FEFF 		bl	vPortEnterCritical
 802              	.LVL86:
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 803              		.loc 1 767 0
 804 00f0 A26B     		ldr	r2, [r4, #56]
 805 00f2 E36B     		ldr	r3, [r4, #60]
 806 00f4 9A42     		cmp	r2, r3
 807 00f6 01D3     		bcc	.L66
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 808              		.loc 1 767 0 is_stmt 0 discriminator 1
 809 00f8 022F     		cmp	r7, #2
 810 00fa BFD1     		bne	.L67
 811              	.L66:
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 812              		.loc 1 833 0 is_stmt 1
 813 00fc 3A46     		mov	r2, r7
 814 00fe 4146     		mov	r1, r8
 815 0100 2046     		mov	r0, r4
 816 0102 FFF7FEFF 		bl	prvCopyDataToQueue
 817              	.LVL87:
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 818              		.loc 1 837 0
 819 0106 636A     		ldr	r3, [r4, #36]
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 62


 820 0108 1BB1     		cbz	r3, .L68
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 821              		.loc 1 839 0
 822 010a 04F12400 		add	r0, r4, #36
 823              	.LVL88:
 824 010e FFF7FEFF 		bl	xTaskRemoveFromEventList
 825              	.LVL89:
 826              	.L68:
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 827              		.loc 1 852 0
 828 0112 38B1     		cbz	r0, .L70
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 829              		.loc 1 858 0
 830 0114 124B     		ldr	r3, .L95
 831 0116 4FF08052 		mov	r2, #268435456
 832 011a 1A60     		str	r2, [r3]
 833              		.syntax unified
 834              	@ 858 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 835 011c BFF34F8F 		dsb
 836              	@ 0 "" 2
 837              	@ 858 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 838 0120 BFF36F8F 		isb
 839              	@ 0 "" 2
 840              		.thumb
 841              		.syntax unified
 842              	.L70:
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 843              		.loc 1 867 0
 844 0124 FFF7FEFF 		bl	vPortExitCritical
 845              	.LVL90:
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 846              		.loc 1 868 0
 847 0128 0120     		movs	r0, #1
 848              	.LVL91:
 849              	.L56:
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 850              		.loc 1 947 0
 851 012a 04B0     		add	sp, sp, #16
 852              	.LCFI12:
 853              		.cfi_remember_state
 854              		.cfi_def_cfa_offset 32
 855              		@ sp needed
 856 012c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 857              	.LVL92:
 858              	.L78:
 859              	.LCFI13:
 860              		.cfi_restore_state
 861              	.LBB128:
 862              	.LBB127:
 863              		.loc 1 2346 0
 864 0130 FFF7FEFF 		bl	vPortExitCritical
 865              	.LVL93:
 866              	.LBE127:
 867              	.LBE128:
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 868              		.loc 1 933 0
 869 0134 2046     		mov	r0, r4
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 63


 870 0136 FFF7FEFF 		bl	prvUnlockQueue
 871              	.LVL94:
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 872              		.loc 1 934 0
 873 013a FFF7FEFF 		bl	xTaskResumeAll
 874              	.LVL95:
 875 013e D4E7     		b	.L80
 876              	.L79:
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 877              		.loc 1 927 0
 878 0140 4FF08053 		mov	r3, #268435456
 879 0144 CAF80030 		str	r3, [r10]
 880              		.syntax unified
 881              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 882 0148 BFF34F8F 		dsb
 883              	@ 0 "" 2
 884              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 885 014c BFF36F8F 		isb
 886              	@ 0 "" 2
 887              		.thumb
 888              		.syntax unified
 889 0150 CBE7     		b	.L80
 890              	.L77:
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 891              		.loc 1 940 0
 892 0152 2046     		mov	r0, r4
 893 0154 FFF7FEFF 		bl	prvUnlockQueue
 894              	.LVL96:
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 895              		.loc 1 941 0
 896 0158 FFF7FEFF 		bl	xTaskResumeAll
 897              	.LVL97:
 898 015c 92E7     		b	.L93
 899              	.L96:
 900 015e 00BF     		.align	2
 901              	.L95:
 902 0160 04ED00E0 		.word	-536810236
 903              		.cfi_endproc
 904              	.LFE10:
 906              		.section	.text.xQueueCreateMutex,"ax",%progbits
 907              		.align	1
 908              		.global	xQueueCreateMutex
 909              		.syntax unified
 910              		.thumb
 911              		.thumb_func
 912              		.fpu fpv4-sp-d16
 914              	xQueueCreateMutex:
 915              	.LFB9:
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 916              		.loc 1 497 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920              	.LVL98:
 921 0000 10B5     		push	{r4, lr}
 922              	.LCFI14:
 923              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 64


 924              		.cfi_offset 4, -8
 925              		.cfi_offset 14, -4
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 926              		.loc 1 501 0
 927 0002 0246     		mov	r2, r0
 928 0004 0021     		movs	r1, #0
 929 0006 0120     		movs	r0, #1
 930              	.LVL99:
 931 0008 FFF7FEFF 		bl	xQueueGenericCreate
 932              	.LVL100:
 933              	.LBB131:
 934              	.LBB132:
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 935              		.loc 1 468 0
 936 000c 0446     		mov	r4, r0
 937 000e 38B1     		cbz	r0, .L97
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 938              		.loc 1 474 0
 939 0010 0023     		movs	r3, #0
 940 0012 8360     		str	r3, [r0, #8]
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 941              		.loc 1 475 0
 942 0014 0360     		str	r3, [r0]
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 943              		.loc 1 478 0
 944 0016 C360     		str	r3, [r0, #12]
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 945              		.loc 1 483 0
 946 0018 1A46     		mov	r2, r3
 947 001a 1946     		mov	r1, r3
 948 001c FFF7FEFF 		bl	xQueueGenericSend
 949              	.LVL101:
 950              	.L97:
 951              	.LBE132:
 952              	.LBE131:
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 953              		.loc 1 505 0
 954 0020 2046     		mov	r0, r4
 955 0022 10BD     		pop	{r4, pc}
 956              		.cfi_endproc
 957              	.LFE9:
 959              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 960              		.align	1
 961              		.global	xQueueGenericSendFromISR
 962              		.syntax unified
 963              		.thumb
 964              		.thumb_func
 965              		.fpu fpv4-sp-d16
 967              	xQueueGenericSendFromISR:
 968              	.LFB11:
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 969              		.loc 1 951 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              	.LVL102:
 974 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 65


 975              	.LCFI15:
 976              		.cfi_def_cfa_offset 32
 977              		.cfi_offset 3, -32
 978              		.cfi_offset 4, -28
 979              		.cfi_offset 5, -24
 980              		.cfi_offset 6, -20
 981              		.cfi_offset 7, -16
 982              		.cfi_offset 8, -12
 983              		.cfi_offset 9, -8
 984              		.cfi_offset 14, -4
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 985              		.loc 1 951 0
 986 0004 8946     		mov	r9, r1
 987 0006 9046     		mov	r8, r2
 988 0008 1F46     		mov	r7, r3
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 989              		.loc 1 956 0
 990 000a 0446     		mov	r4, r0
 991 000c 40B9     		cbnz	r0, .L103
 992              	.LBB133:
 993              	.LBB134:
 994              		.loc 2 195 0
 995              		.syntax unified
 996              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 997 000e 4FF05003 			mov r3, #80												
 998 0012 83F31188 		msr basepri, r3											
 999 0016 BFF36F8F 		isb														
 1000 001a BFF34F8F 		dsb														
 1001              	
 1002              	@ 0 "" 2
 1003              	.LVL103:
 1004              		.thumb
 1005              		.syntax unified
 1006              	.L104:
 1007 001e FEE7     		b	.L104
 1008              	.LVL104:
 1009              	.L103:
 1010              	.LBE134:
 1011              	.LBE133:
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1012              		.loc 1 957 0
 1013 0020 51B9     		cbnz	r1, .L105
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1014              		.loc 1 957 0 is_stmt 0 discriminator 2
 1015 0022 036C     		ldr	r3, [r0, #64]
 1016              	.LVL105:
 1017 0024 43B1     		cbz	r3, .L105
 1018              	.LBB135:
 1019              	.LBB136:
 1020              		.loc 2 195 0 is_stmt 1
 1021              		.syntax unified
 1022              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1023 0026 4FF05003 			mov r3, #80												
 1024 002a 83F31188 		msr basepri, r3											
 1025 002e BFF36F8F 		isb														
 1026 0032 BFF34F8F 		dsb														
 1027              	
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 66


 1028              	@ 0 "" 2
 1029              	.LVL106:
 1030              		.thumb
 1031              		.syntax unified
 1032              	.L106:
 1033 0036 FEE7     		b	.L106
 1034              	.L105:
 1035              	.LBE136:
 1036              	.LBE135:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1037              		.loc 1 958 0
 1038 0038 022F     		cmp	r7, #2
 1039 003a 0BD1     		bne	.L107
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1040              		.loc 1 958 0 is_stmt 0 discriminator 2
 1041 003c E36B     		ldr	r3, [r4, #60]
 1042 003e 012B     		cmp	r3, #1
 1043 0040 08D0     		beq	.L107
 1044              	.LBB137:
 1045              	.LBB138:
 1046              		.loc 2 195 0 is_stmt 1
 1047              		.syntax unified
 1048              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1049 0042 4FF05003 			mov r3, #80												
 1050 0046 83F31188 		msr basepri, r3											
 1051 004a BFF36F8F 		isb														
 1052 004e BFF34F8F 		dsb														
 1053              	
 1054              	@ 0 "" 2
 1055              	.LVL107:
 1056              		.thumb
 1057              		.syntax unified
 1058              	.L108:
 1059 0052 FEE7     		b	.L108
 1060              	.L107:
 1061              	.LBE138:
 1062              	.LBE137:
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1063              		.loc 1 974 0
 1064 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1065              	.LVL108:
 1066              	.LBB139:
 1067              	.LBB140:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 67


 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1068              		.loc 2 211 0
 1069              		.syntax unified
 1070              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1071 0058 EFF31186 			mrs r6, basepri											
 1072 005c 4FF05003 		mov r3, #80												
 1073 0060 83F31188 		msr basepri, r3											
 1074 0064 BFF36F8F 		isb														
 1075 0068 BFF34F8F 		dsb														
 1076              	
 1077              	@ 0 "" 2
 1078              		.thumb
 1079              		.syntax unified
 1080              	.LBE140:
 1081              	.LBE139:
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1082              		.loc 1 983 0
 1083 006c A26B     		ldr	r2, [r4, #56]
 1084 006e E36B     		ldr	r3, [r4, #60]
 1085 0070 9A42     		cmp	r2, r3
 1086 0072 01D3     		bcc	.L109
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1087              		.loc 1 983 0 is_stmt 0 discriminator 1
 1088 0074 022F     		cmp	r7, #2
 1089 0076 23D1     		bne	.L114
 1090              	.L109:
 1091              	.LBB141:
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 1092              		.loc 1 985 0 is_stmt 1
 1093 0078 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1094              		.loc 1 986 0
 1095 007c A36B     		ldr	r3, [r4, #56]
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 1096              		.loc 1 985 0
 1097 007e 6DB2     		sxtb	r5, r5
 1098              	.LVL109:
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1099              		.loc 1 995 0
 1100 0080 3A46     		mov	r2, r7
 1101 0082 4946     		mov	r1, r9
 1102 0084 2046     		mov	r0, r4
 1103 0086 FFF7FEFF 		bl	prvCopyDataToQueue
 1104              	.LVL110:
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1105              		.loc 1 999 0
 1106 008a 6B1C     		adds	r3, r5, #1
 1107 008c 13D1     		bne	.L111
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1108              		.loc 1 1061 0
 1109 008e 636A     		ldr	r3, [r4, #36]
 1110 0090 0BB9     		cbnz	r3, .L112
 1111              	.LVL111:
 1112              	.L127:
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1113              		.loc 1 1098 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 68


 1114 0092 0120     		movs	r0, #1
 1115 0094 0BE0     		b	.L110
 1116              	.LVL112:
 1117              	.L112:
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1118              		.loc 1 1063 0
 1119 0096 04F12400 		add	r0, r4, #36
 1120 009a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1121              	.LVL113:
 1122 009e 0028     		cmp	r0, #0
 1123 00a0 F7D0     		beq	.L127
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1124              		.loc 1 1067 0
 1125 00a2 B8F1000F 		cmp	r8, #0
 1126 00a6 F4D0     		beq	.L127
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1127              		.loc 1 1069 0
 1128 00a8 0120     		movs	r0, #1
 1129 00aa C8F80000 		str	r0, [r8]
 1130              	.LVL114:
 1131              	.L110:
 1132              	.LBE141:
 1133              	.LBB142:
 1134              	.LBB143:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1135              		.loc 2 229 0
 1136              		.syntax unified
 1137              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1138 00ae 86F31188 			msr basepri, r6	
 1139              	@ 0 "" 2
 1140              	.LVL115:
 1141              		.thumb
 1142              		.syntax unified
 1143              	.LBE143:
 1144              	.LBE142:
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1145              		.loc 1 1109 0
 1146 00b2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1147              	.LVL116:
 1148              	.L111:
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 69


 1149              	.LBB144:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1150              		.loc 1 1095 0
 1151 00b6 0135     		adds	r5, r5, #1
 1152              	.LVL117:
 1153 00b8 6DB2     		sxtb	r5, r5
 1154              	.LVL118:
 1155 00ba 84F84550 		strb	r5, [r4, #69]
 1156 00be E8E7     		b	.L127
 1157              	.LVL119:
 1158              	.L114:
 1159              	.LBE144:
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1160              		.loc 1 1103 0
 1161 00c0 0020     		movs	r0, #0
 1162 00c2 F4E7     		b	.L110
 1163              		.cfi_endproc
 1164              	.LFE11:
 1166              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1167              		.align	1
 1168              		.global	xQueueGiveFromISR
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1172              		.fpu fpv4-sp-d16
 1174              	xQueueGiveFromISR:
 1175              	.LFB12:
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1176              		.loc 1 1113 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180              	.LVL120:
 1181 0000 70B5     		push	{r4, r5, r6, lr}
 1182              	.LCFI16:
 1183              		.cfi_def_cfa_offset 16
 1184              		.cfi_offset 4, -16
 1185              		.cfi_offset 5, -12
 1186              		.cfi_offset 6, -8
 1187              		.cfi_offset 14, -4
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1188              		.loc 1 1113 0
 1189 0002 0D46     		mov	r5, r1
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1190              		.loc 1 1124 0
 1191 0004 0446     		mov	r4, r0
 1192 0006 40B9     		cbnz	r0, .L129
 1193              	.LBB145:
 1194              	.LBB146:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1195              		.loc 2 195 0
 1196              		.syntax unified
 1197              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1198 0008 4FF05003 			mov r3, #80												
 1199 000c 83F31188 		msr basepri, r3											
 1200 0010 BFF36F8F 		isb														
 1201 0014 BFF34F8F 		dsb														
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 70


 1202              	
 1203              	@ 0 "" 2
 1204              	.LVL121:
 1205              		.thumb
 1206              		.syntax unified
 1207              	.L130:
 1208 0018 FEE7     		b	.L130
 1209              	.L129:
 1210              	.LBE146:
 1211              	.LBE145:
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1212              		.loc 1 1128 0
 1213 001a 036C     		ldr	r3, [r0, #64]
 1214 001c 43B1     		cbz	r3, .L131
 1215              	.LBB147:
 1216              	.LBB148:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1217              		.loc 2 195 0
 1218              		.syntax unified
 1219              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1220 001e 4FF05003 			mov r3, #80												
 1221 0022 83F31188 		msr basepri, r3											
 1222 0026 BFF36F8F 		isb														
 1223 002a BFF34F8F 		dsb														
 1224              	
 1225              	@ 0 "" 2
 1226              	.LVL122:
 1227              		.thumb
 1228              		.syntax unified
 1229              	.L132:
 1230 002e FEE7     		b	.L132
 1231              	.L131:
 1232              	.LBE148:
 1233              	.LBE147:
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1234              		.loc 1 1133 0
 1235 0030 0368     		ldr	r3, [r0]
 1236 0032 53B9     		cbnz	r3, .L133
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1237              		.loc 1 1133 0 is_stmt 0 discriminator 2
 1238 0034 8368     		ldr	r3, [r0, #8]
 1239 0036 43B1     		cbz	r3, .L133
 1240              	.LBB149:
 1241              	.LBB150:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1242              		.loc 2 195 0 is_stmt 1
 1243              		.syntax unified
 1244              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1245 0038 4FF05003 			mov r3, #80												
 1246 003c 83F31188 		msr basepri, r3											
 1247 0040 BFF36F8F 		isb														
 1248 0044 BFF34F8F 		dsb														
 1249              	
 1250              	@ 0 "" 2
 1251              	.LVL123:
 1252              		.thumb
 1253              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 71


 1254              	.L134:
 1255 0048 FEE7     		b	.L134
 1256              	.L133:
 1257              	.LBE150:
 1258              	.LBE149:
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1259              		.loc 1 1149 0
 1260 004a FFF7FEFF 		bl	vPortValidateInterruptPriority
 1261              	.LVL124:
 1262              	.LBB151:
 1263              	.LBB152:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1264              		.loc 2 211 0
 1265              		.syntax unified
 1266              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1267 004e EFF31186 			mrs r6, basepri											
 1268 0052 4FF05003 		mov r3, #80												
 1269 0056 83F31188 		msr basepri, r3											
 1270 005a BFF36F8F 		isb														
 1271 005e BFF34F8F 		dsb														
 1272              	
 1273              	@ 0 "" 2
 1274              		.thumb
 1275              		.syntax unified
 1276              	.LBE152:
 1277              	.LBE151:
 1278              	.LBB153:
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1279              		.loc 1 1153 0
 1280 0062 A26B     		ldr	r2, [r4, #56]
 1281              	.LVL125:
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1282              		.loc 1 1158 0
 1283 0064 E36B     		ldr	r3, [r4, #60]
 1284 0066 9342     		cmp	r3, r2
 1285 0068 1CD9     		bls	.L139
 1286              	.LBB154:
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1287              		.loc 1 1160 0
 1288 006a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1289              		.loc 1 1170 0
 1290 006e 0132     		adds	r2, r2, #1
 1291              	.LVL126:
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1292              		.loc 1 1160 0
 1293 0070 5BB2     		sxtb	r3, r3
 1294              	.LVL127:
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1295              		.loc 1 1170 0
 1296 0072 A263     		str	r2, [r4, #56]
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1297              		.loc 1 1174 0
 1298 0074 5A1C     		adds	r2, r3, #1
 1299              	.LVL128:
 1300 0076 10D1     		bne	.L136
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 72


 1301              		.loc 1 1229 0
 1302 0078 636A     		ldr	r3, [r4, #36]
 1303              	.LVL129:
 1304 007a 0BB9     		cbnz	r3, .L137
 1305              	.LVL130:
 1306              	.L149:
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1307              		.loc 1 1263 0
 1308 007c 0120     		movs	r0, #1
 1309 007e 09E0     		b	.L135
 1310              	.LVL131:
 1311              	.L137:
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1312              		.loc 1 1231 0
 1313 0080 04F12400 		add	r0, r4, #36
 1314 0084 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1315              	.LVL132:
 1316 0088 0028     		cmp	r0, #0
 1317 008a F7D0     		beq	.L149
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1318              		.loc 1 1235 0
 1319 008c 002D     		cmp	r5, #0
 1320 008e F5D0     		beq	.L149
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1321              		.loc 1 1237 0
 1322 0090 0120     		movs	r0, #1
 1323 0092 2860     		str	r0, [r5]
 1324              	.L135:
 1325              	.LVL133:
 1326              	.LBE154:
 1327              	.LBE153:
 1328              	.LBB156:
 1329              	.LBB157:
 1330              		.loc 2 229 0
 1331              		.syntax unified
 1332              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1333 0094 86F31188 			msr basepri, r6	
 1334              	@ 0 "" 2
 1335              	.LVL134:
 1336              		.thumb
 1337              		.syntax unified
 1338              	.LBE157:
 1339              	.LBE156:
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1340              		.loc 1 1274 0
 1341 0098 70BD     		pop	{r4, r5, r6, pc}
 1342              	.LVL135:
 1343              	.L136:
 1344              	.LBB158:
 1345              	.LBB155:
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1346              		.loc 1 1260 0
 1347 009a 0133     		adds	r3, r3, #1
 1348              	.LVL136:
 1349 009c 5BB2     		sxtb	r3, r3
 1350              	.LVL137:
 1351 009e 84F84530 		strb	r3, [r4, #69]
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 73


 1352              	.LVL138:
 1353 00a2 EBE7     		b	.L149
 1354              	.LVL139:
 1355              	.L139:
 1356              	.LBE155:
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1357              		.loc 1 1268 0
 1358 00a4 0020     		movs	r0, #0
 1359 00a6 F5E7     		b	.L135
 1360              	.LBE158:
 1361              		.cfi_endproc
 1362              	.LFE12:
 1364              		.section	.text.xQueueReceive,"ax",%progbits
 1365              		.align	1
 1366              		.global	xQueueReceive
 1367              		.syntax unified
 1368              		.thumb
 1369              		.thumb_func
 1370              		.fpu fpv4-sp-d16
 1372              	xQueueReceive:
 1373              	.LFB13:
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1374              		.loc 1 1278 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 16
 1377              		@ frame_needed = 0, uses_anonymous_args = 0
 1378              	.LVL140:
 1379 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1380              	.LCFI17:
 1381              		.cfi_def_cfa_offset 28
 1382              		.cfi_offset 4, -28
 1383              		.cfi_offset 5, -24
 1384              		.cfi_offset 6, -20
 1385              		.cfi_offset 7, -16
 1386              		.cfi_offset 8, -12
 1387              		.cfi_offset 9, -8
 1388              		.cfi_offset 14, -4
 1389 0004 85B0     		sub	sp, sp, #20
 1390              	.LCFI18:
 1391              		.cfi_def_cfa_offset 48
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1392              		.loc 1 1278 0
 1393 0006 0F46     		mov	r7, r1
 1394 0008 0192     		str	r2, [sp, #4]
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1395              		.loc 1 1284 0
 1396 000a 0446     		mov	r4, r0
 1397 000c 40B9     		cbnz	r0, .L151
 1398              	.LBB159:
 1399              	.LBB160:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1400              		.loc 2 195 0
 1401              		.syntax unified
 1402              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1403 000e 4FF05003 			mov r3, #80												
 1404 0012 83F31188 		msr basepri, r3											
 1405 0016 BFF36F8F 		isb														
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 74


 1406 001a BFF34F8F 		dsb														
 1407              	
 1408              	@ 0 "" 2
 1409              	.LVL141:
 1410              		.thumb
 1411              		.syntax unified
 1412              	.L152:
 1413 001e FEE7     		b	.L152
 1414              	.L151:
 1415              	.LBE160:
 1416              	.LBE159:
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1417              		.loc 1 1288 0
 1418 0020 51B9     		cbnz	r1, .L153
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1419              		.loc 1 1288 0 is_stmt 0 discriminator 2
 1420 0022 036C     		ldr	r3, [r0, #64]
 1421 0024 43B1     		cbz	r3, .L153
 1422              	.LBB161:
 1423              	.LBB162:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1424              		.loc 2 195 0 is_stmt 1
 1425              		.syntax unified
 1426              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1427 0026 4FF05003 			mov r3, #80												
 1428 002a 83F31188 		msr basepri, r3											
 1429 002e BFF36F8F 		isb														
 1430 0032 BFF34F8F 		dsb														
 1431              	
 1432              	@ 0 "" 2
 1433              	.LVL142:
 1434              		.thumb
 1435              		.syntax unified
 1436              	.L154:
 1437 0036 FEE7     		b	.L154
 1438              	.L153:
 1439              	.LBE162:
 1440              	.LBE161:
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1441              		.loc 1 1293 0
 1442 0038 FFF7FEFF 		bl	xTaskGetSchedulerState
 1443              	.LVL143:
 1444 003c 50B9     		cbnz	r0, .L171
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1445              		.loc 1 1293 0 is_stmt 0 discriminator 2
 1446 003e 019E     		ldr	r6, [sp, #4]
 1447 0040 4EB1     		cbz	r6, .L155
 1448              	.LBB163:
 1449              	.LBB164:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1450              		.loc 2 195 0 is_stmt 1
 1451              		.syntax unified
 1452              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1453 0042 4FF05003 			mov r3, #80												
 1454 0046 83F31188 		msr basepri, r3											
 1455 004a BFF36F8F 		isb														
 1456 004e BFF34F8F 		dsb														
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 75


 1457              	
 1458              	@ 0 "" 2
 1459              	.LVL144:
 1460              		.thumb
 1461              		.syntax unified
 1462              	.L156:
 1463 0052 FEE7     		b	.L156
 1464              	.L171:
 1465              	.LBE164:
 1466              	.LBE163:
 1467 0054 0026     		movs	r6, #0
 1468              	.L155:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1469              		.loc 1 1368 0
 1470 0056 4FF00008 		mov	r8, #0
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1471              		.loc 1 1382 0
 1472 005a DFF8E090 		ldr	r9, .L183
 1473 005e 3BE0     		b	.L157
 1474              	.LVL145:
 1475              	.L158:
 1476              	.LBB165:
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1477              		.loc 1 1340 0
 1478 0060 019D     		ldr	r5, [sp, #4]
 1479              	.LVL146:
 1480 0062 1DB9     		cbnz	r5, .L163
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1481              		.loc 1 1344 0
 1482 0064 FFF7FEFF 		bl	vPortExitCritical
 1483              	.LVL147:
 1484              	.L182:
 1485              	.LBE165:
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1486              		.loc 1 1407 0
 1487 0068 0020     		movs	r0, #0
 1488 006a 52E0     		b	.L150
 1489              	.LVL148:
 1490              	.L163:
 1491              	.LBB166:
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1492              		.loc 1 1348 0
 1493 006c 16B9     		cbnz	r6, .L164
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1494              		.loc 1 1352 0
 1495 006e 02A8     		add	r0, sp, #8
 1496 0070 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1497              	.LVL149:
 1498              	.L164:
 1499              	.LBE166:
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1500              		.loc 1 1362 0
 1501 0074 FFF7FEFF 		bl	vPortExitCritical
 1502              	.LVL150:
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1503              		.loc 1 1367 0
 1504 0078 FFF7FEFF 		bl	vTaskSuspendAll
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 76


 1505              	.LVL151:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1506              		.loc 1 1368 0
 1507 007c FFF7FEFF 		bl	vPortEnterCritical
 1508              	.LVL152:
 1509 0080 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1510 0084 FF2B     		cmp	r3, #255
 1511 0086 08BF     		it	eq
 1512 0088 84F84480 		strbeq	r8, [r4, #68]
 1513 008c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1514 0090 FF2B     		cmp	r3, #255
 1515 0092 08BF     		it	eq
 1516 0094 84F84580 		strbeq	r8, [r4, #69]
 1517 0098 FFF7FEFF 		bl	vPortExitCritical
 1518              	.LVL153:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1519              		.loc 1 1371 0
 1520 009c 01A9     		add	r1, sp, #4
 1521 009e 02A8     		add	r0, sp, #8
 1522 00a0 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1523              	.LVL154:
 1524 00a4 0028     		cmp	r0, #0
 1525 00a6 3DD1     		bne	.L167
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1526              		.loc 1 1375 0
 1527 00a8 2046     		mov	r0, r4
 1528 00aa FFF7FEFF 		bl	prvIsQueueEmpty
 1529              	.LVL155:
 1530 00ae 98B3     		cbz	r0, .L168
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1531              		.loc 1 1378 0
 1532 00b0 0199     		ldr	r1, [sp, #4]
 1533 00b2 04F12400 		add	r0, r4, #36
 1534 00b6 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1535              	.LVL156:
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1536              		.loc 1 1379 0
 1537 00ba 2046     		mov	r0, r4
 1538 00bc FFF7FEFF 		bl	prvUnlockQueue
 1539              	.LVL157:
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1540              		.loc 1 1380 0
 1541 00c0 FFF7FEFF 		bl	xTaskResumeAll
 1542              	.LVL158:
 1543 00c4 38B9     		cbnz	r0, .L170
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1544              		.loc 1 1382 0
 1545 00c6 4FF08053 		mov	r3, #268435456
 1546 00ca C9F80030 		str	r3, [r9]
 1547              		.syntax unified
 1548              	@ 1382 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1549 00ce BFF34F8F 		dsb
 1550              	@ 0 "" 2
 1551              	@ 1382 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1552 00d2 BFF36F8F 		isb
 1553              	@ 0 "" 2
 1554              		.thumb
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 77


 1555              		.syntax unified
 1556              	.L170:
 1557 00d6 0126     		movs	r6, #1
 1558              	.LVL159:
 1559              	.L157:
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1560              		.loc 1 1303 0
 1561 00d8 FFF7FEFF 		bl	vPortEnterCritical
 1562              	.LVL160:
 1563              	.LBB167:
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1564              		.loc 1 1305 0
 1565 00dc A56B     		ldr	r5, [r4, #56]
 1566              	.LVL161:
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1567              		.loc 1 1309 0
 1568 00de 002D     		cmp	r5, #0
 1569 00e0 BED0     		beq	.L158
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 1570              		.loc 1 1312 0
 1571 00e2 3946     		mov	r1, r7
 1572 00e4 2046     		mov	r0, r4
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1573              		.loc 1 1314 0
 1574 00e6 013D     		subs	r5, r5, #1
 1575              	.LVL162:
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 1576              		.loc 1 1312 0
 1577 00e8 FFF7FEFF 		bl	prvCopyDataFromQueue
 1578              	.LVL163:
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1579              		.loc 1 1314 0
 1580 00ec A563     		str	r5, [r4, #56]
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1581              		.loc 1 1319 0
 1582 00ee 2369     		ldr	r3, [r4, #16]
 1583 00f0 63B1     		cbz	r3, .L160
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1584              		.loc 1 1321 0
 1585 00f2 04F11000 		add	r0, r4, #16
 1586 00f6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1587              	.LVL164:
 1588 00fa 38B1     		cbz	r0, .L160
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1589              		.loc 1 1323 0
 1590 00fc 0F4B     		ldr	r3, .L183
 1591 00fe 4FF08052 		mov	r2, #268435456
 1592 0102 1A60     		str	r2, [r3]
 1593              		.syntax unified
 1594              	@ 1323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1595 0104 BFF34F8F 		dsb
 1596              	@ 0 "" 2
 1597              	@ 1323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1598 0108 BFF36F8F 		isb
 1599              	@ 0 "" 2
 1600              		.thumb
 1601              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 78


 1602              	.L160:
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1603              		.loc 1 1335 0
 1604 010c FFF7FEFF 		bl	vPortExitCritical
 1605              	.LVL165:
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1606              		.loc 1 1336 0
 1607 0110 0120     		movs	r0, #1
 1608              	.LVL166:
 1609              	.L150:
 1610              	.LBE167:
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1611              		.loc 1 1415 0
 1612 0112 05B0     		add	sp, sp, #20
 1613              	.LCFI19:
 1614              		.cfi_remember_state
 1615              		.cfi_def_cfa_offset 28
 1616              		@ sp needed
 1617 0114 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1618              	.LVL167:
 1619              	.L168:
 1620              	.LCFI20:
 1621              		.cfi_restore_state
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1622              		.loc 1 1393 0
 1623 0118 2046     		mov	r0, r4
 1624 011a FFF7FEFF 		bl	prvUnlockQueue
 1625              	.LVL168:
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1626              		.loc 1 1394 0
 1627 011e FFF7FEFF 		bl	xTaskResumeAll
 1628              	.LVL169:
 1629 0122 D8E7     		b	.L170
 1630              	.L167:
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1631              		.loc 1 1401 0
 1632 0124 2046     		mov	r0, r4
 1633 0126 FFF7FEFF 		bl	prvUnlockQueue
 1634              	.LVL170:
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1635              		.loc 1 1402 0
 1636 012a FFF7FEFF 		bl	xTaskResumeAll
 1637              	.LVL171:
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1638              		.loc 1 1404 0
 1639 012e 2046     		mov	r0, r4
 1640 0130 FFF7FEFF 		bl	prvIsQueueEmpty
 1641              	.LVL172:
 1642 0134 0028     		cmp	r0, #0
 1643 0136 CED0     		beq	.L170
 1644 0138 96E7     		b	.L182
 1645              	.L184:
 1646 013a 00BF     		.align	2
 1647              	.L183:
 1648 013c 04ED00E0 		.word	-536810236
 1649              		.cfi_endproc
 1650              	.LFE13:
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 79


 1652              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 1653              		.align	1
 1654              		.global	xQueueSemaphoreTake
 1655              		.syntax unified
 1656              		.thumb
 1657              		.thumb_func
 1658              		.fpu fpv4-sp-d16
 1660              	xQueueSemaphoreTake:
 1661              	.LFB14:
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1662              		.loc 1 1419 0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 16
 1665              		@ frame_needed = 0, uses_anonymous_args = 0
 1666              	.LVL173:
 1667 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1668              	.LCFI21:
 1669              		.cfi_def_cfa_offset 40
 1670              		.cfi_offset 4, -24
 1671              		.cfi_offset 5, -20
 1672              		.cfi_offset 6, -16
 1673              		.cfi_offset 7, -12
 1674              		.cfi_offset 8, -8
 1675              		.cfi_offset 14, -4
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1676              		.loc 1 1429 0
 1677 0004 0446     		mov	r4, r0
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1678              		.loc 1 1419 0
 1679 0006 0191     		str	r1, [sp, #4]
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1680              		.loc 1 1429 0
 1681 0008 40B9     		cbnz	r0, .L186
 1682              	.LBB180:
 1683              	.LBB181:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1684              		.loc 2 195 0
 1685              		.syntax unified
 1686              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1687 000a 4FF05003 			mov r3, #80												
 1688 000e 83F31188 		msr basepri, r3											
 1689 0012 BFF36F8F 		isb														
 1690 0016 BFF34F8F 		dsb														
 1691              	
 1692              	@ 0 "" 2
 1693              	.LVL174:
 1694              		.thumb
 1695              		.syntax unified
 1696              	.L187:
 1697 001a FEE7     		b	.L187
 1698              	.L186:
 1699              	.LBE181:
 1700              	.LBE180:
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1701              		.loc 1 1433 0
 1702 001c 056C     		ldr	r5, [r0, #64]
 1703 001e 45B1     		cbz	r5, .L188
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 80


 1704              	.LBB182:
 1705              	.LBB183:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1706              		.loc 2 195 0
 1707              		.syntax unified
 1708              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1709 0020 4FF05003 			mov r3, #80												
 1710 0024 83F31188 		msr basepri, r3											
 1711 0028 BFF36F8F 		isb														
 1712 002c BFF34F8F 		dsb														
 1713              	
 1714              	@ 0 "" 2
 1715              	.LVL175:
 1716              		.thumb
 1717              		.syntax unified
 1718              	.L189:
 1719 0030 FEE7     		b	.L189
 1720              	.L188:
 1721              	.LBE183:
 1722              	.LBE182:
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1723              		.loc 1 1438 0
 1724 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 1725              	.LVL176:
 1726 0036 50B9     		cbnz	r0, .L211
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1727              		.loc 1 1438 0 is_stmt 0 discriminator 2
 1728 0038 019D     		ldr	r5, [sp, #4]
 1729 003a 45B1     		cbz	r5, .L211
 1730              	.LBB184:
 1731              	.LBB185:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1732              		.loc 2 195 0 is_stmt 1
 1733              		.syntax unified
 1734              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1735 003c 4FF05003 			mov r3, #80												
 1736 0040 83F31188 		msr basepri, r3											
 1737 0044 BFF36F8F 		isb														
 1738 0048 BFF34F8F 		dsb														
 1739              	
 1740              	@ 0 "" 2
 1741              	.LVL177:
 1742              		.thumb
 1743              		.syntax unified
 1744              	.L191:
 1745 004c FEE7     		b	.L191
 1746              	.L211:
 1747              	.LBE185:
 1748              	.LBE184:
 1749 004e 2E46     		mov	r6, r5
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1750              		.loc 1 1539 0
 1751 0050 0027     		movs	r7, #0
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1752              		.loc 1 1573 0
 1753 0052 DFF82C81 		ldr	r8, .L222
 1754 0056 4FE0     		b	.L192
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 81


 1755              	.LVL178:
 1756              	.L193:
 1757              	.LBB186:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1758              		.loc 1 1502 0
 1759 0058 019B     		ldr	r3, [sp, #4]
 1760              	.LVL179:
 1761 005a 63B9     		cbnz	r3, .L199
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1762              		.loc 1 1509 0
 1763 005c 45B1     		cbz	r5, .L200
 1764              	.LBB187:
 1765              	.LBB188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1766              		.loc 2 195 0
 1767              		.syntax unified
 1768              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1769 005e 4FF05003 			mov r3, #80												
 1770 0062 83F31188 		msr basepri, r3											
 1771 0066 BFF36F8F 		isb														
 1772 006a BFF34F8F 		dsb														
 1773              	
 1774              	@ 0 "" 2
 1775              	.LVL180:
 1776              		.thumb
 1777              		.syntax unified
 1778              	.L201:
 1779 006e FEE7     		b	.L201
 1780              	.L200:
 1781              	.LBE188:
 1782              	.LBE187:
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1783              		.loc 1 1515 0
 1784 0070 FFF7FEFF 		bl	vPortExitCritical
 1785              	.LVL181:
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1786              		.loc 1 1517 0
 1787 0074 5EE0     		b	.L185
 1788              	.L199:
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1789              		.loc 1 1519 0
 1790 0076 16B9     		cbnz	r6, .L202
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1791              		.loc 1 1523 0
 1792 0078 02A8     		add	r0, sp, #8
 1793 007a FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1794              	.LVL182:
 1795              	.L202:
 1796              	.LBE186:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1797              		.loc 1 1533 0
 1798 007e FFF7FEFF 		bl	vPortExitCritical
 1799              	.LVL183:
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1800              		.loc 1 1538 0
 1801 0082 FFF7FEFF 		bl	vTaskSuspendAll
 1802              	.LVL184:
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 82


1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1803              		.loc 1 1539 0
 1804 0086 FFF7FEFF 		bl	vPortEnterCritical
 1805              	.LVL185:
 1806 008a 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1807 008e FF2B     		cmp	r3, #255
 1808 0090 08BF     		it	eq
 1809 0092 84F84470 		strbeq	r7, [r4, #68]
 1810 0096 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1811 009a FF2B     		cmp	r3, #255
 1812 009c 08BF     		it	eq
 1813 009e 84F84570 		strbeq	r7, [r4, #69]
 1814 00a2 FFF7FEFF 		bl	vPortExitCritical
 1815              	.LVL186:
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1816              		.loc 1 1542 0
 1817 00a6 01A9     		add	r1, sp, #4
 1818 00a8 02A8     		add	r0, sp, #8
 1819 00aa FFF7FEFF 		bl	xTaskCheckForTimeOut
 1820              	.LVL187:
 1821 00ae 0028     		cmp	r0, #0
 1822 00b0 4AD1     		bne	.L205
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1823              		.loc 1 1548 0
 1824 00b2 2046     		mov	r0, r4
 1825 00b4 FFF7FEFF 		bl	prvIsQueueEmpty
 1826              	.LVL188:
 1827 00b8 0028     		cmp	r0, #0
 1828 00ba 3FD0     		beq	.L206
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1829              		.loc 1 1554 0
 1830 00bc 2368     		ldr	r3, [r4]
 1831 00be 3BB9     		cbnz	r3, .L207
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1832              		.loc 1 1556 0
 1833 00c0 FFF7FEFF 		bl	vPortEnterCritical
 1834              	.LVL189:
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1835              		.loc 1 1558 0
 1836 00c4 A068     		ldr	r0, [r4, #8]
 1837 00c6 FFF7FEFF 		bl	xTaskPriorityInherit
 1838              	.LVL190:
 1839 00ca 0546     		mov	r5, r0
 1840              	.LVL191:
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1841              		.loc 1 1560 0
 1842 00cc FFF7FEFF 		bl	vPortExitCritical
 1843              	.LVL192:
 1844              	.L207:
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1845              		.loc 1 1569 0
 1846 00d0 0199     		ldr	r1, [sp, #4]
 1847 00d2 04F12400 		add	r0, r4, #36
 1848 00d6 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1849              	.LVL193:
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1850              		.loc 1 1570 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 83


 1851 00da 2046     		mov	r0, r4
 1852 00dc FFF7FEFF 		bl	prvUnlockQueue
 1853              	.LVL194:
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1854              		.loc 1 1571 0
 1855 00e0 FFF7FEFF 		bl	xTaskResumeAll
 1856              	.LVL195:
 1857 00e4 38B9     		cbnz	r0, .L208
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1858              		.loc 1 1573 0
 1859 00e6 4FF08053 		mov	r3, #268435456
 1860 00ea C8F80030 		str	r3, [r8]
 1861              		.syntax unified
 1862              	@ 1573 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1863 00ee BFF34F8F 		dsb
 1864              	@ 0 "" 2
 1865              	@ 1573 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1866 00f2 BFF36F8F 		isb
 1867              	@ 0 "" 2
 1868              		.thumb
 1869              		.syntax unified
 1870              	.L208:
 1871 00f6 0126     		movs	r6, #1
 1872              	.LVL196:
 1873              	.L192:
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1874              		.loc 1 1448 0
 1875 00f8 FFF7FEFF 		bl	vPortEnterCritical
 1876              	.LVL197:
 1877              	.LBB189:
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1878              		.loc 1 1452 0
 1879 00fc A36B     		ldr	r3, [r4, #56]
 1880              	.LVL198:
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1881              		.loc 1 1456 0
 1882 00fe 002B     		cmp	r3, #0
 1883 0100 AAD0     		beq	.L193
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1884              		.loc 1 1462 0
 1885 0102 013B     		subs	r3, r3, #1
 1886              	.LVL199:
 1887 0104 A363     		str	r3, [r4, #56]
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1888              		.loc 1 1466 0
 1889 0106 2368     		ldr	r3, [r4]
 1890              	.LVL200:
 1891 0108 13B9     		cbnz	r3, .L194
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1892              		.loc 1 1470 0
 1893 010a FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1894              	.LVL201:
 1895 010e A060     		str	r0, [r4, #8]
 1896              	.L194:
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1897              		.loc 1 1481 0
 1898 0110 2369     		ldr	r3, [r4, #16]
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 84


 1899 0112 63B1     		cbz	r3, .L196
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1900              		.loc 1 1483 0
 1901 0114 04F11000 		add	r0, r4, #16
 1902 0118 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1903              	.LVL202:
 1904 011c 38B1     		cbz	r0, .L196
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1905              		.loc 1 1485 0
 1906 011e 184B     		ldr	r3, .L222
 1907 0120 4FF08052 		mov	r2, #268435456
 1908 0124 1A60     		str	r2, [r3]
 1909              		.syntax unified
 1910              	@ 1485 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1911 0126 BFF34F8F 		dsb
 1912              	@ 0 "" 2
 1913              	@ 1485 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1914 012a BFF36F8F 		isb
 1915              	@ 0 "" 2
 1916              		.thumb
 1917              		.syntax unified
 1918              	.L196:
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1919              		.loc 1 1497 0
 1920 012e FFF7FEFF 		bl	vPortExitCritical
 1921              	.LVL203:
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1922              		.loc 1 1498 0
 1923 0132 0125     		movs	r5, #1
 1924              	.LVL204:
 1925              	.L185:
 1926              	.LBE189:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1927              		.loc 1 1633 0
 1928 0134 2846     		mov	r0, r5
 1929 0136 04B0     		add	sp, sp, #16
 1930              	.LCFI22:
 1931              		.cfi_remember_state
 1932              		.cfi_def_cfa_offset 24
 1933              		@ sp needed
 1934 0138 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1935              	.LVL205:
 1936              	.L206:
 1937              	.LCFI23:
 1938              		.cfi_restore_state
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1939              		.loc 1 1584 0
 1940 013c 2046     		mov	r0, r4
 1941 013e FFF7FEFF 		bl	prvUnlockQueue
 1942              	.LVL206:
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1943              		.loc 1 1585 0
 1944 0142 FFF7FEFF 		bl	xTaskResumeAll
 1945              	.LVL207:
 1946 0146 D6E7     		b	.L208
 1947              	.L205:
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 85


 1948              		.loc 1 1591 0
 1949 0148 2046     		mov	r0, r4
 1950 014a FFF7FEFF 		bl	prvUnlockQueue
 1951              	.LVL208:
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1952              		.loc 1 1592 0
 1953 014e FFF7FEFF 		bl	xTaskResumeAll
 1954              	.LVL209:
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1955              		.loc 1 1598 0
 1956 0152 2046     		mov	r0, r4
 1957 0154 FFF7FEFF 		bl	prvIsQueueEmpty
 1958              	.LVL210:
 1959 0158 0028     		cmp	r0, #0
 1960 015a CCD0     		beq	.L208
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1961              		.loc 1 1605 0
 1962 015c 002D     		cmp	r5, #0
 1963 015e E9D0     		beq	.L185
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1964              		.loc 1 1607 0
 1965 0160 FFF7FEFF 		bl	vPortEnterCritical
 1966              	.LVL211:
 1967              	.LBB190:
 1968              	.LBB191:
 1969              	.LBB192:
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1970              		.loc 1 2059 0
 1971 0164 616A     		ldr	r1, [r4, #36]
 1972 0166 19B1     		cbz	r1, .L209
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1973              		.loc 1 2061 0
 1974 0168 236B     		ldr	r3, [r4, #48]
 1975 016a 1968     		ldr	r1, [r3]
 1976 016c C1F10701 		rsb	r1, r1, #7
 1977              	.LVL212:
 1978              	.L209:
 1979              	.LBE192:
 1980              	.LBE191:
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1981              		.loc 1 1617 0
 1982 0170 A068     		ldr	r0, [r4, #8]
 1983 0172 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 1984              	.LVL213:
 1985              	.LBE190:
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1986              		.loc 1 1625 0
 1987 0176 0025     		movs	r5, #0
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1988              		.loc 1 1619 0
 1989 0178 FFF7FEFF 		bl	vPortExitCritical
 1990              	.LVL214:
 1991 017c DAE7     		b	.L185
 1992              	.L223:
 1993 017e 00BF     		.align	2
 1994              	.L222:
 1995 0180 04ED00E0 		.word	-536810236
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 86


 1996              		.cfi_endproc
 1997              	.LFE14:
 1999              		.section	.text.xQueuePeek,"ax",%progbits
 2000              		.align	1
 2001              		.global	xQueuePeek
 2002              		.syntax unified
 2003              		.thumb
 2004              		.thumb_func
 2005              		.fpu fpv4-sp-d16
 2007              	xQueuePeek:
 2008              	.LFB15:
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2009              		.loc 1 1637 0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 16
 2012              		@ frame_needed = 0, uses_anonymous_args = 0
 2013              	.LVL215:
 2014 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2015              	.LCFI24:
 2016              		.cfi_def_cfa_offset 28
 2017              		.cfi_offset 4, -28
 2018              		.cfi_offset 5, -24
 2019              		.cfi_offset 6, -20
 2020              		.cfi_offset 7, -16
 2021              		.cfi_offset 8, -12
 2022              		.cfi_offset 9, -8
 2023              		.cfi_offset 14, -4
 2024 0004 85B0     		sub	sp, sp, #20
 2025              	.LCFI25:
 2026              		.cfi_def_cfa_offset 48
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2027              		.loc 1 1637 0
 2028 0006 0F46     		mov	r7, r1
 2029 0008 0192     		str	r2, [sp, #4]
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2030              		.loc 1 1644 0
 2031 000a 0446     		mov	r4, r0
 2032 000c 40B9     		cbnz	r0, .L225
 2033              	.LBB193:
 2034              	.LBB194:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2035              		.loc 2 195 0
 2036              		.syntax unified
 2037              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2038 000e 4FF05003 			mov r3, #80												
 2039 0012 83F31188 		msr basepri, r3											
 2040 0016 BFF36F8F 		isb														
 2041 001a BFF34F8F 		dsb														
 2042              	
 2043              	@ 0 "" 2
 2044              	.LVL216:
 2045              		.thumb
 2046              		.syntax unified
 2047              	.L226:
 2048 001e FEE7     		b	.L226
 2049              	.L225:
 2050              	.LBE194:
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 87


 2051              	.LBE193:
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2052              		.loc 1 1648 0
 2053 0020 51B9     		cbnz	r1, .L227
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2054              		.loc 1 1648 0 is_stmt 0 discriminator 2
 2055 0022 036C     		ldr	r3, [r0, #64]
 2056 0024 43B1     		cbz	r3, .L227
 2057              	.LBB195:
 2058              	.LBB196:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2059              		.loc 2 195 0 is_stmt 1
 2060              		.syntax unified
 2061              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2062 0026 4FF05003 			mov r3, #80												
 2063 002a 83F31188 		msr basepri, r3											
 2064 002e BFF36F8F 		isb														
 2065 0032 BFF34F8F 		dsb														
 2066              	
 2067              	@ 0 "" 2
 2068              	.LVL217:
 2069              		.thumb
 2070              		.syntax unified
 2071              	.L228:
 2072 0036 FEE7     		b	.L228
 2073              	.L227:
 2074              	.LBE196:
 2075              	.LBE195:
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2076              		.loc 1 1653 0
 2077 0038 FFF7FEFF 		bl	xTaskGetSchedulerState
 2078              	.LVL218:
 2079 003c 50B9     		cbnz	r0, .L245
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2080              		.loc 1 1653 0 is_stmt 0 discriminator 2
 2081 003e 019E     		ldr	r6, [sp, #4]
 2082 0040 4EB1     		cbz	r6, .L229
 2083              	.LBB197:
 2084              	.LBB198:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2085              		.loc 2 195 0 is_stmt 1
 2086              		.syntax unified
 2087              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2088 0042 4FF05003 			mov r3, #80												
 2089 0046 83F31188 		msr basepri, r3											
 2090 004a BFF36F8F 		isb														
 2091 004e BFF34F8F 		dsb														
 2092              	
 2093              	@ 0 "" 2
 2094              	.LVL219:
 2095              		.thumb
 2096              		.syntax unified
 2097              	.L230:
 2098 0052 FEE7     		b	.L230
 2099              	.L245:
 2100              	.LBE198:
 2101              	.LBE197:
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 88


 2102 0054 0026     		movs	r6, #0
 2103              	.L229:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2104              		.loc 1 1735 0
 2105 0056 4FF00008 		mov	r8, #0
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2106              		.loc 1 1749 0
 2107 005a DFF8E090 		ldr	r9, .L257
 2108 005e 3BE0     		b	.L231
 2109              	.LVL220:
 2110              	.L232:
 2111              	.LBB199:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2112              		.loc 1 1706 0
 2113 0060 019D     		ldr	r5, [sp, #4]
 2114 0062 1DB9     		cbnz	r5, .L237
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 2115              		.loc 1 1710 0
 2116 0064 FFF7FEFF 		bl	vPortExitCritical
 2117              	.LVL221:
 2118              	.L256:
 2119              	.LBE199:
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2120              		.loc 1 1774 0
 2121 0068 0020     		movs	r0, #0
 2122 006a 52E0     		b	.L224
 2123              	.LVL222:
 2124              	.L237:
 2125              	.LBB200:
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2126              		.loc 1 1714 0
 2127 006c 16B9     		cbnz	r6, .L238
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2128              		.loc 1 1719 0
 2129 006e 02A8     		add	r0, sp, #8
 2130 0070 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2131              	.LVL223:
 2132              	.L238:
 2133              	.LBE200:
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2134              		.loc 1 1729 0
 2135 0074 FFF7FEFF 		bl	vPortExitCritical
 2136              	.LVL224:
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2137              		.loc 1 1734 0
 2138 0078 FFF7FEFF 		bl	vTaskSuspendAll
 2139              	.LVL225:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2140              		.loc 1 1735 0
 2141 007c FFF7FEFF 		bl	vPortEnterCritical
 2142              	.LVL226:
 2143 0080 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2144 0084 FF2B     		cmp	r3, #255
 2145 0086 08BF     		it	eq
 2146 0088 84F84480 		strbeq	r8, [r4, #68]
 2147 008c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2148 0090 FF2B     		cmp	r3, #255
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 89


 2149 0092 08BF     		it	eq
 2150 0094 84F84580 		strbeq	r8, [r4, #69]
 2151 0098 FFF7FEFF 		bl	vPortExitCritical
 2152              	.LVL227:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2153              		.loc 1 1738 0
 2154 009c 01A9     		add	r1, sp, #4
 2155 009e 02A8     		add	r0, sp, #8
 2156 00a0 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2157              	.LVL228:
 2158 00a4 0028     		cmp	r0, #0
 2159 00a6 3DD1     		bne	.L241
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2160              		.loc 1 1742 0
 2161 00a8 2046     		mov	r0, r4
 2162 00aa FFF7FEFF 		bl	prvIsQueueEmpty
 2163              	.LVL229:
 2164 00ae 98B3     		cbz	r0, .L242
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2165              		.loc 1 1745 0
 2166 00b0 0199     		ldr	r1, [sp, #4]
 2167 00b2 04F12400 		add	r0, r4, #36
 2168 00b6 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2169              	.LVL230:
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2170              		.loc 1 1746 0
 2171 00ba 2046     		mov	r0, r4
 2172 00bc FFF7FEFF 		bl	prvUnlockQueue
 2173              	.LVL231:
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2174              		.loc 1 1747 0
 2175 00c0 FFF7FEFF 		bl	xTaskResumeAll
 2176              	.LVL232:
 2177 00c4 38B9     		cbnz	r0, .L244
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2178              		.loc 1 1749 0
 2179 00c6 4FF08053 		mov	r3, #268435456
 2180 00ca C9F80030 		str	r3, [r9]
 2181              		.syntax unified
 2182              	@ 1749 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2183 00ce BFF34F8F 		dsb
 2184              	@ 0 "" 2
 2185              	@ 1749 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2186 00d2 BFF36F8F 		isb
 2187              	@ 0 "" 2
 2188              		.thumb
 2189              		.syntax unified
 2190              	.L244:
 2191 00d6 0126     		movs	r6, #1
 2192              	.LVL233:
 2193              	.L231:
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2194              		.loc 1 1663 0
 2195 00d8 FFF7FEFF 		bl	vPortEnterCritical
 2196              	.LVL234:
 2197              	.LBB201:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 90


 2198              		.loc 1 1665 0
 2199 00dc A36B     		ldr	r3, [r4, #56]
 2200              	.LVL235:
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2201              		.loc 1 1669 0
 2202 00de 002B     		cmp	r3, #0
 2203 00e0 BED0     		beq	.L232
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 2204              		.loc 1 1676 0
 2205 00e2 3946     		mov	r1, r7
 2206 00e4 2046     		mov	r0, r4
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2207              		.loc 1 1674 0
 2208 00e6 E568     		ldr	r5, [r4, #12]
 2209              	.LVL236:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 2210              		.loc 1 1676 0
 2211 00e8 FFF7FEFF 		bl	prvCopyDataFromQueue
 2212              	.LVL237:
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2213              		.loc 1 1684 0
 2214 00ec 636A     		ldr	r3, [r4, #36]
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2215              		.loc 1 1680 0
 2216 00ee E560     		str	r5, [r4, #12]
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2217              		.loc 1 1684 0
 2218 00f0 63B1     		cbz	r3, .L234
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2219              		.loc 1 1686 0
 2220 00f2 04F12400 		add	r0, r4, #36
 2221 00f6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2222              	.LVL238:
 2223 00fa 38B1     		cbz	r0, .L234
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2224              		.loc 1 1689 0
 2225 00fc 0F4B     		ldr	r3, .L257
 2226 00fe 4FF08052 		mov	r2, #268435456
 2227 0102 1A60     		str	r2, [r3]
 2228              		.syntax unified
 2229              	@ 1689 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2230 0104 BFF34F8F 		dsb
 2231              	@ 0 "" 2
 2232              	@ 1689 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2233 0108 BFF36F8F 		isb
 2234              	@ 0 "" 2
 2235              		.thumb
 2236              		.syntax unified
 2237              	.L234:
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2238              		.loc 1 1701 0
 2239 010c FFF7FEFF 		bl	vPortExitCritical
 2240              	.LVL239:
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2241              		.loc 1 1702 0
 2242 0110 0120     		movs	r0, #1
 2243              	.LVL240:
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 91


 2244              	.L224:
 2245              	.LBE201:
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2246              		.loc 1 1782 0
 2247 0112 05B0     		add	sp, sp, #20
 2248              	.LCFI26:
 2249              		.cfi_remember_state
 2250              		.cfi_def_cfa_offset 28
 2251              		@ sp needed
 2252 0114 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2253              	.LVL241:
 2254              	.L242:
 2255              	.LCFI27:
 2256              		.cfi_restore_state
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2257              		.loc 1 1760 0
 2258 0118 2046     		mov	r0, r4
 2259 011a FFF7FEFF 		bl	prvUnlockQueue
 2260              	.LVL242:
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2261              		.loc 1 1761 0
 2262 011e FFF7FEFF 		bl	xTaskResumeAll
 2263              	.LVL243:
 2264 0122 D8E7     		b	.L244
 2265              	.L241:
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2266              		.loc 1 1768 0
 2267 0124 2046     		mov	r0, r4
 2268 0126 FFF7FEFF 		bl	prvUnlockQueue
 2269              	.LVL244:
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2270              		.loc 1 1769 0
 2271 012a FFF7FEFF 		bl	xTaskResumeAll
 2272              	.LVL245:
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2273              		.loc 1 1771 0
 2274 012e 2046     		mov	r0, r4
 2275 0130 FFF7FEFF 		bl	prvIsQueueEmpty
 2276              	.LVL246:
 2277 0134 0028     		cmp	r0, #0
 2278 0136 CED0     		beq	.L244
 2279 0138 96E7     		b	.L256
 2280              	.L258:
 2281 013a 00BF     		.align	2
 2282              	.L257:
 2283 013c 04ED00E0 		.word	-536810236
 2284              		.cfi_endproc
 2285              	.LFE15:
 2287              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2288              		.align	1
 2289              		.global	xQueueReceiveFromISR
 2290              		.syntax unified
 2291              		.thumb
 2292              		.thumb_func
 2293              		.fpu fpv4-sp-d16
 2295              	xQueueReceiveFromISR:
 2296              	.LFB16:
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 92


1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2297              		.loc 1 1786 0
 2298              		.cfi_startproc
 2299              		@ args = 0, pretend = 0, frame = 0
 2300              		@ frame_needed = 0, uses_anonymous_args = 0
 2301              	.LVL247:
 2302 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2303              	.LCFI28:
 2304              		.cfi_def_cfa_offset 32
 2305              		.cfi_offset 3, -32
 2306              		.cfi_offset 4, -28
 2307              		.cfi_offset 5, -24
 2308              		.cfi_offset 6, -20
 2309              		.cfi_offset 7, -16
 2310              		.cfi_offset 8, -12
 2311              		.cfi_offset 9, -8
 2312              		.cfi_offset 14, -4
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2313              		.loc 1 1786 0
 2314 0004 8946     		mov	r9, r1
 2315 0006 9046     		mov	r8, r2
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2316              		.loc 1 1791 0
 2317 0008 0546     		mov	r5, r0
 2318 000a 40B9     		cbnz	r0, .L260
 2319              	.LBB202:
 2320              	.LBB203:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2321              		.loc 2 195 0
 2322              		.syntax unified
 2323              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2324 000c 4FF05003 			mov r3, #80												
 2325 0010 83F31188 		msr basepri, r3											
 2326 0014 BFF36F8F 		isb														
 2327 0018 BFF34F8F 		dsb														
 2328              	
 2329              	@ 0 "" 2
 2330              	.LVL248:
 2331              		.thumb
 2332              		.syntax unified
 2333              	.L261:
 2334 001c FEE7     		b	.L261
 2335              	.L260:
 2336              	.LBE203:
 2337              	.LBE202:
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2338              		.loc 1 1792 0
 2339 001e 51B9     		cbnz	r1, .L262
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2340              		.loc 1 1792 0 is_stmt 0 discriminator 2
 2341 0020 036C     		ldr	r3, [r0, #64]
 2342 0022 43B1     		cbz	r3, .L262
 2343              	.LBB204:
 2344              	.LBB205:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2345              		.loc 2 195 0 is_stmt 1
 2346              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 93


 2347              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2348 0024 4FF05003 			mov r3, #80												
 2349 0028 83F31188 		msr basepri, r3											
 2350 002c BFF36F8F 		isb														
 2351 0030 BFF34F8F 		dsb														
 2352              	
 2353              	@ 0 "" 2
 2354              	.LVL249:
 2355              		.thumb
 2356              		.syntax unified
 2357              	.L263:
 2358 0034 FEE7     		b	.L263
 2359              	.L262:
 2360              	.LBE205:
 2361              	.LBE204:
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2362              		.loc 1 1808 0
 2363 0036 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2364              	.LVL250:
 2365              	.LBB206:
 2366              	.LBB207:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2367              		.loc 2 211 0
 2368              		.syntax unified
 2369              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2370 003a EFF31187 			mrs r7, basepri											
 2371 003e 4FF05003 		mov r3, #80												
 2372 0042 83F31188 		msr basepri, r3											
 2373 0046 BFF36F8F 		isb														
 2374 004a BFF34F8F 		dsb														
 2375              	
 2376              	@ 0 "" 2
 2377              		.thumb
 2378              		.syntax unified
 2379              	.LBE207:
 2380              	.LBE206:
 2381              	.LBB208:
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2382              		.loc 1 1812 0
 2383 004e AC6B     		ldr	r4, [r5, #56]
 2384              	.LVL251:
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2385              		.loc 1 1815 0
 2386 0050 1CB3     		cbz	r4, .L268
 2387              	.LBB209:
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2388              		.loc 1 1817 0
 2389 0052 95F84460 		ldrb	r6, [r5, #68]	@ zero_extendqisi2
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2390              		.loc 1 1821 0
 2391 0056 4946     		mov	r1, r9
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2392              		.loc 1 1817 0
 2393 0058 76B2     		sxtb	r6, r6
 2394              	.LVL252:
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2395              		.loc 1 1821 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 94


 2396 005a 2846     		mov	r0, r5
 2397 005c FFF7FEFF 		bl	prvCopyDataFromQueue
 2398              	.LVL253:
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2399              		.loc 1 1822 0
 2400 0060 013C     		subs	r4, r4, #1
 2401              	.LVL254:
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2402              		.loc 1 1828 0
 2403 0062 731C     		adds	r3, r6, #1
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2404              		.loc 1 1822 0
 2405 0064 AC63     		str	r4, [r5, #56]
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2406              		.loc 1 1828 0
 2407 0066 13D1     		bne	.L265
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2408              		.loc 1 1830 0
 2409 0068 2B69     		ldr	r3, [r5, #16]
 2410 006a 0BB9     		cbnz	r3, .L266
 2411              	.LVL255:
 2412              	.L278:
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2413              		.loc 1 1862 0
 2414 006c 0120     		movs	r0, #1
 2415 006e 0BE0     		b	.L264
 2416              	.LVL256:
 2417              	.L266:
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2418              		.loc 1 1832 0
 2419 0070 05F11000 		add	r0, r5, #16
 2420 0074 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2421              	.LVL257:
 2422 0078 0028     		cmp	r0, #0
 2423 007a F7D0     		beq	.L278
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2424              		.loc 1 1836 0
 2425 007c B8F1000F 		cmp	r8, #0
 2426 0080 F4D0     		beq	.L278
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2427              		.loc 1 1838 0
 2428 0082 0120     		movs	r0, #1
 2429 0084 C8F80000 		str	r0, [r8]
 2430              	.LVL258:
 2431              	.L264:
 2432              	.LBE209:
 2433              	.LBE208:
 2434              	.LBB211:
 2435              	.LBB212:
 2436              		.loc 2 229 0
 2437              		.syntax unified
 2438              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2439 0088 87F31188 			msr basepri, r7	
 2440              	@ 0 "" 2
 2441              	.LVL259:
 2442              		.thumb
 2443              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 95


 2444              	.LBE212:
 2445              	.LBE211:
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2446              		.loc 1 1873 0
 2447 008c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2448              	.LVL260:
 2449              	.L265:
 2450              	.LBB213:
 2451              	.LBB210:
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2452              		.loc 1 1859 0
 2453 0090 0136     		adds	r6, r6, #1
 2454              	.LVL261:
 2455 0092 76B2     		sxtb	r6, r6
 2456              	.LVL262:
 2457 0094 85F84460 		strb	r6, [r5, #68]
 2458 0098 E8E7     		b	.L278
 2459              	.LVL263:
 2460              	.L268:
 2461              	.LBE210:
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2462              		.loc 1 1866 0
 2463 009a 2046     		mov	r0, r4
 2464 009c F4E7     		b	.L264
 2465              	.LBE213:
 2466              		.cfi_endproc
 2467              	.LFE16:
 2469              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2470              		.align	1
 2471              		.global	xQueuePeekFromISR
 2472              		.syntax unified
 2473              		.thumb
 2474              		.thumb_func
 2475              		.fpu fpv4-sp-d16
 2477              	xQueuePeekFromISR:
 2478              	.LFB17:
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2479              		.loc 1 1877 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 0
 2482              		@ frame_needed = 0, uses_anonymous_args = 0
 2483              	.LVL264:
 2484 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2485              	.LCFI29:
 2486              		.cfi_def_cfa_offset 24
 2487              		.cfi_offset 3, -24
 2488              		.cfi_offset 4, -20
 2489              		.cfi_offset 5, -16
 2490              		.cfi_offset 6, -12
 2491              		.cfi_offset 7, -8
 2492              		.cfi_offset 14, -4
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2493              		.loc 1 1877 0
 2494 0002 0D46     		mov	r5, r1
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2495              		.loc 1 1883 0
 2496 0004 0446     		mov	r4, r0
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 96


 2497 0006 40B9     		cbnz	r0, .L280
 2498              	.LBB214:
 2499              	.LBB215:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2500              		.loc 2 195 0
 2501              		.syntax unified
 2502              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2503 0008 4FF05003 			mov r3, #80												
 2504 000c 83F31188 		msr basepri, r3											
 2505 0010 BFF36F8F 		isb														
 2506 0014 BFF34F8F 		dsb														
 2507              	
 2508              	@ 0 "" 2
 2509              	.LVL265:
 2510              		.thumb
 2511              		.syntax unified
 2512              	.L281:
 2513 0018 FEE7     		b	.L281
 2514              	.L280:
 2515 001a 036C     		ldr	r3, [r0, #64]
 2516              	.LBE215:
 2517              	.LBE214:
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2518              		.loc 1 1884 0
 2519 001c 49B9     		cbnz	r1, .L282
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2520              		.loc 1 1884 0 is_stmt 0 discriminator 2
 2521 001e 4BB1     		cbz	r3, .L283
 2522              	.LBB216:
 2523              	.LBB217:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2524              		.loc 2 195 0 is_stmt 1
 2525              		.syntax unified
 2526              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2527 0020 4FF05003 			mov r3, #80												
 2528 0024 83F31188 		msr basepri, r3											
 2529 0028 BFF36F8F 		isb														
 2530 002c BFF34F8F 		dsb														
 2531              	
 2532              	@ 0 "" 2
 2533              	.LVL266:
 2534              		.thumb
 2535              		.syntax unified
 2536              	.L284:
 2537 0030 FEE7     		b	.L284
 2538              	.L282:
 2539              	.LBE217:
 2540              	.LBE216:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2541              		.loc 1 1885 0
 2542 0032 43B9     		cbnz	r3, .L285
 2543              	.L283:
 2544              	.LBB218:
 2545              	.LBB219:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2546              		.loc 2 195 0
 2547              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 97


 2548              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2549 0034 4FF05003 			mov r3, #80												
 2550 0038 83F31188 		msr basepri, r3											
 2551 003c BFF36F8F 		isb														
 2552 0040 BFF34F8F 		dsb														
 2553              	
 2554              	@ 0 "" 2
 2555              	.LVL267:
 2556              		.thumb
 2557              		.syntax unified
 2558              	.L286:
 2559 0044 FEE7     		b	.L286
 2560              	.L285:
 2561              	.LBE219:
 2562              	.LBE218:
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2563              		.loc 1 1901 0
 2564 0046 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2565              	.LVL268:
 2566              	.LBB220:
 2567              	.LBB221:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2568              		.loc 2 211 0
 2569              		.syntax unified
 2570              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2571 004a EFF31186 			mrs r6, basepri											
 2572 004e 4FF05003 		mov r3, #80												
 2573 0052 83F31188 		msr basepri, r3											
 2574 0056 BFF36F8F 		isb														
 2575 005a BFF34F8F 		dsb														
 2576              	
 2577              	@ 0 "" 2
 2578              		.thumb
 2579              		.syntax unified
 2580              	.LBE221:
 2581              	.LBE220:
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2582              		.loc 1 1906 0
 2583 005e A06B     		ldr	r0, [r4, #56]
 2584 0060 30B1     		cbz	r0, .L287
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2585              		.loc 1 1912 0
 2586 0062 E768     		ldr	r7, [r4, #12]
 2587              	.LVL269:
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 2588              		.loc 1 1913 0
 2589 0064 2046     		mov	r0, r4
 2590 0066 2946     		mov	r1, r5
 2591 0068 FFF7FEFF 		bl	prvCopyDataFromQueue
 2592              	.LVL270:
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2593              		.loc 1 1914 0
 2594 006c E760     		str	r7, [r4, #12]
 2595              	.LVL271:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2596              		.loc 1 1916 0
 2597 006e 0120     		movs	r0, #1
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 98


 2598              	.LVL272:
 2599              	.L287:
 2600              	.LBB222:
 2601              	.LBB223:
 2602              		.loc 2 229 0
 2603              		.syntax unified
 2604              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2605 0070 86F31188 			msr basepri, r6	
 2606              	@ 0 "" 2
 2607              	.LVL273:
 2608              		.thumb
 2609              		.syntax unified
 2610              	.LBE223:
 2611              	.LBE222:
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2612              		.loc 1 1927 0
 2613 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2614              		.cfi_endproc
 2615              	.LFE17:
 2617              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2618              		.align	1
 2619              		.global	uxQueueMessagesWaiting
 2620              		.syntax unified
 2621              		.thumb
 2622              		.thumb_func
 2623              		.fpu fpv4-sp-d16
 2625              	uxQueueMessagesWaiting:
 2626              	.LFB18:
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2627              		.loc 1 1931 0
 2628              		.cfi_startproc
 2629              		@ args = 0, pretend = 0, frame = 0
 2630              		@ frame_needed = 0, uses_anonymous_args = 0
 2631              	.LVL274:
 2632 0000 10B5     		push	{r4, lr}
 2633              	.LCFI30:
 2634              		.cfi_def_cfa_offset 8
 2635              		.cfi_offset 4, -8
 2636              		.cfi_offset 14, -4
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2637              		.loc 1 1934 0
 2638 0002 0446     		mov	r4, r0
 2639 0004 40B9     		cbnz	r0, .L293
 2640              	.LBB224:
 2641              	.LBB225:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2642              		.loc 2 195 0
 2643              		.syntax unified
 2644              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2645 0006 4FF05003 			mov r3, #80												
 2646 000a 83F31188 		msr basepri, r3											
 2647 000e BFF36F8F 		isb														
 2648 0012 BFF34F8F 		dsb														
 2649              	
 2650              	@ 0 "" 2
 2651              	.LVL275:
 2652              		.thumb
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 99


 2653              		.syntax unified
 2654              	.L294:
 2655 0016 FEE7     		b	.L294
 2656              	.L293:
 2657              	.LBE225:
 2658              	.LBE224:
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2659              		.loc 1 1936 0
 2660 0018 FFF7FEFF 		bl	vPortEnterCritical
 2661              	.LVL276:
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2662              		.loc 1 1938 0
 2663 001c A46B     		ldr	r4, [r4, #56]
 2664              	.LVL277:
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2665              		.loc 1 1940 0
 2666 001e FFF7FEFF 		bl	vPortExitCritical
 2667              	.LVL278:
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2668              		.loc 1 1943 0
 2669 0022 2046     		mov	r0, r4
 2670 0024 10BD     		pop	{r4, pc}
 2671              		.cfi_endproc
 2672              	.LFE18:
 2674              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2675              		.align	1
 2676              		.global	uxQueueSpacesAvailable
 2677              		.syntax unified
 2678              		.thumb
 2679              		.thumb_func
 2680              		.fpu fpv4-sp-d16
 2682              	uxQueueSpacesAvailable:
 2683              	.LFB19:
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2684              		.loc 1 1947 0
 2685              		.cfi_startproc
 2686              		@ args = 0, pretend = 0, frame = 0
 2687              		@ frame_needed = 0, uses_anonymous_args = 0
 2688              	.LVL279:
 2689 0000 38B5     		push	{r3, r4, r5, lr}
 2690              	.LCFI31:
 2691              		.cfi_def_cfa_offset 16
 2692              		.cfi_offset 3, -16
 2693              		.cfi_offset 4, -12
 2694              		.cfi_offset 5, -8
 2695              		.cfi_offset 14, -4
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2696              		.loc 1 1951 0
 2697 0002 0546     		mov	r5, r0
 2698 0004 40B9     		cbnz	r0, .L296
 2699              	.LBB226:
 2700              	.LBB227:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2701              		.loc 2 195 0
 2702              		.syntax unified
 2703              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2704 0006 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 100


 2705 000a 83F31188 		msr basepri, r3											
 2706 000e BFF36F8F 		isb														
 2707 0012 BFF34F8F 		dsb														
 2708              	
 2709              	@ 0 "" 2
 2710              	.LVL280:
 2711              		.thumb
 2712              		.syntax unified
 2713              	.L297:
 2714 0016 FEE7     		b	.L297
 2715              	.L296:
 2716              	.LBE227:
 2717              	.LBE226:
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2718              		.loc 1 1953 0
 2719 0018 FFF7FEFF 		bl	vPortEnterCritical
 2720              	.LVL281:
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2721              		.loc 1 1955 0
 2722 001c A86B     		ldr	r0, [r5, #56]
 2723 001e EC6B     		ldr	r4, [r5, #60]
 2724 0020 241A     		subs	r4, r4, r0
 2725              	.LVL282:
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2726              		.loc 1 1957 0
 2727 0022 FFF7FEFF 		bl	vPortExitCritical
 2728              	.LVL283:
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2729              		.loc 1 1960 0
 2730 0026 2046     		mov	r0, r4
 2731 0028 38BD     		pop	{r3, r4, r5, pc}
 2732              		.cfi_endproc
 2733              	.LFE19:
 2735              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2736              		.align	1
 2737              		.global	uxQueueMessagesWaitingFromISR
 2738              		.syntax unified
 2739              		.thumb
 2740              		.thumb_func
 2741              		.fpu fpv4-sp-d16
 2743              	uxQueueMessagesWaitingFromISR:
 2744              	.LFB20:
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2745              		.loc 1 1964 0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 0
 2748              		@ frame_needed = 0, uses_anonymous_args = 0
 2749              		@ link register save eliminated.
 2750              	.LVL284:
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 2751              		.loc 1 1968 0
 2752 0000 40B9     		cbnz	r0, .L299
 2753              	.LBB228:
 2754              	.LBB229:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2755              		.loc 2 195 0
 2756              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 101


 2757              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2758 0002 4FF05003 			mov r3, #80												
 2759 0006 83F31188 		msr basepri, r3											
 2760 000a BFF36F8F 		isb														
 2761 000e BFF34F8F 		dsb														
 2762              	
 2763              	@ 0 "" 2
 2764              	.LVL285:
 2765              		.thumb
 2766              		.syntax unified
 2767              	.L300:
 2768 0012 FEE7     		b	.L300
 2769              	.L299:
 2770              	.LBE229:
 2771              	.LBE228:
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2772              		.loc 1 1969 0
 2773 0014 806B     		ldr	r0, [r0, #56]
 2774              	.LVL286:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2775              		.loc 1 1972 0
 2776 0016 7047     		bx	lr
 2777              		.cfi_endproc
 2778              	.LFE20:
 2780              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 2781              		.align	1
 2782              		.global	uxQueueGetQueueNumber
 2783              		.syntax unified
 2784              		.thumb
 2785              		.thumb_func
 2786              		.fpu fpv4-sp-d16
 2788              	uxQueueGetQueueNumber:
 2789              	.LFB22:
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 2790              		.loc 1 2020 0
 2791              		.cfi_startproc
 2792              		@ args = 0, pretend = 0, frame = 0
 2793              		@ frame_needed = 0, uses_anonymous_args = 0
 2794              		@ link register save eliminated.
 2795              	.LVL287:
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2796              		.loc 1 2022 0
 2797 0000 806C     		ldr	r0, [r0, #72]
 2798              	.LVL288:
 2799 0002 7047     		bx	lr
 2800              		.cfi_endproc
 2801              	.LFE22:
 2803              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 2804              		.align	1
 2805              		.global	vQueueSetQueueNumber
 2806              		.syntax unified
 2807              		.thumb
 2808              		.thumb_func
 2809              		.fpu fpv4-sp-d16
 2811              	vQueueSetQueueNumber:
 2812              	.LFB23:
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 102


 2813              		.loc 1 2030 0
 2814              		.cfi_startproc
 2815              		@ args = 0, pretend = 0, frame = 0
 2816              		@ frame_needed = 0, uses_anonymous_args = 0
 2817              		@ link register save eliminated.
 2818              	.LVL289:
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2819              		.loc 1 2031 0
 2820 0000 8164     		str	r1, [r0, #72]
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2821              		.loc 1 2032 0
 2822 0002 7047     		bx	lr
 2823              		.cfi_endproc
 2824              	.LFE23:
 2826              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 2827              		.align	1
 2828              		.global	ucQueueGetQueueType
 2829              		.syntax unified
 2830              		.thumb
 2831              		.thumb_func
 2832              		.fpu fpv4-sp-d16
 2834              	ucQueueGetQueueType:
 2835              	.LFB24:
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 2836              		.loc 1 2040 0
 2837              		.cfi_startproc
 2838              		@ args = 0, pretend = 0, frame = 0
 2839              		@ frame_needed = 0, uses_anonymous_args = 0
 2840              		@ link register save eliminated.
 2841              	.LVL290:
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2842              		.loc 1 2042 0
 2843 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 2844              	.LVL291:
 2845 0004 7047     		bx	lr
 2846              		.cfi_endproc
 2847              	.LFE24:
 2849              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2850              		.align	1
 2851              		.global	xQueueIsQueueEmptyFromISR
 2852              		.syntax unified
 2853              		.thumb
 2854              		.thumb_func
 2855              		.fpu fpv4-sp-d16
 2857              	xQueueIsQueueEmptyFromISR:
 2858              	.LFB30:
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2859              		.loc 1 2313 0
 2860              		.cfi_startproc
 2861              		@ args = 0, pretend = 0, frame = 0
 2862              		@ frame_needed = 0, uses_anonymous_args = 0
 2863              		@ link register save eliminated.
 2864              	.LVL292:
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 2865              		.loc 1 2317 0
 2866 0000 40B9     		cbnz	r0, .L305
 2867              	.LBB230:
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 103


 2868              	.LBB231:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2869              		.loc 2 195 0
 2870              		.syntax unified
 2871              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2872 0002 4FF05003 			mov r3, #80												
 2873 0006 83F31188 		msr basepri, r3											
 2874 000a BFF36F8F 		isb														
 2875 000e BFF34F8F 		dsb														
 2876              	
 2877              	@ 0 "" 2
 2878              	.LVL293:
 2879              		.thumb
 2880              		.syntax unified
 2881              	.L306:
 2882 0012 FEE7     		b	.L306
 2883              	.L305:
 2884              	.LBE231:
 2885              	.LBE230:
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2886              		.loc 1 2318 0
 2887 0014 806B     		ldr	r0, [r0, #56]
 2888              	.LVL294:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2889              		.loc 1 2328 0
 2890 0016 B0FA80F0 		clz	r0, r0
 2891              	.LVL295:
 2892 001a 4009     		lsrs	r0, r0, #5
 2893 001c 7047     		bx	lr
 2894              		.cfi_endproc
 2895              	.LFE30:
 2897              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2898              		.align	1
 2899              		.global	xQueueIsQueueFullFromISR
 2900              		.syntax unified
 2901              		.thumb
 2902              		.thumb_func
 2903              		.fpu fpv4-sp-d16
 2905              	xQueueIsQueueFullFromISR:
 2906              	.LFB32:
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 2907              		.loc 1 2353 0
 2908              		.cfi_startproc
 2909              		@ args = 0, pretend = 0, frame = 0
 2910              		@ frame_needed = 0, uses_anonymous_args = 0
 2911              		@ link register save eliminated.
 2912              	.LVL296:
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 104


 2913              		.loc 1 2357 0
 2914 0000 40B9     		cbnz	r0, .L308
 2915              	.LBB232:
 2916              	.LBB233:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2917              		.loc 2 195 0
 2918              		.syntax unified
 2919              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2920 0002 4FF05003 			mov r3, #80												
 2921 0006 83F31188 		msr basepri, r3											
 2922 000a BFF36F8F 		isb														
 2923 000e BFF34F8F 		dsb														
 2924              	
 2925              	@ 0 "" 2
 2926              	.LVL297:
 2927              		.thumb
 2928              		.syntax unified
 2929              	.L309:
 2930 0012 FEE7     		b	.L309
 2931              	.L308:
 2932              	.LBE233:
 2933              	.LBE232:
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 2934              		.loc 1 2358 0
 2935 0014 836B     		ldr	r3, [r0, #56]
 2936              	.LVL298:
 2937 0016 C06B     		ldr	r0, [r0, #60]
 2938              	.LVL299:
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2939              		.loc 1 2368 0
 2940 0018 C31A     		subs	r3, r0, r3
 2941              	.LVL300:
 2942 001a 5842     		rsbs	r0, r3, #0
 2943 001c 5841     		adcs	r0, r0, r3
 2944 001e 7047     		bx	lr
 2945              		.cfi_endproc
 2946              	.LFE32:
 2948              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2949              		.align	1
 2950              		.global	vQueueAddToRegistry
 2951              		.syntax unified
 2952              		.thumb
 2953              		.thumb_func
 2954              		.fpu fpv4-sp-d16
 2956              	vQueueAddToRegistry:
 2957              	.LFB33:
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 105


2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 106


2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 107


2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 108


2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 109


2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2958              		.loc 1 2649 0
 2959              		.cfi_startproc
 2960              		@ args = 0, pretend = 0, frame = 0
 2961              		@ frame_needed = 0, uses_anonymous_args = 0
 2962              	.LVL301:
 2963 0000 30B5     		push	{r4, r5, lr}
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 110


 2964              	.LCFI32:
 2965              		.cfi_def_cfa_offset 12
 2966              		.cfi_offset 4, -12
 2967              		.cfi_offset 5, -8
 2968              		.cfi_offset 14, -4
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2969              		.loc 1 2656 0
 2970 0002 074A     		ldr	r2, .L315
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2971              		.loc 1 2654 0
 2972 0004 0023     		movs	r3, #0
 2973              	.LVL302:
 2974              	.L313:
 2975              		.loc 1 2656 0
 2976 0006 52F83350 		ldr	r5, [r2, r3, lsl #3]
 2977 000a 02EBC304 		add	r4, r2, r3, lsl #3
 2978 000e 1DB9     		cbnz	r5, .L311
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2979              		.loc 1 2659 0
 2980 0010 42F83310 		str	r1, [r2, r3, lsl #3]
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2981              		.loc 1 2660 0
 2982 0014 6060     		str	r0, [r4, #4]
 2983              	.L310:
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2984              		.loc 1 2670 0
 2985 0016 30BD     		pop	{r4, r5, pc}
 2986              	.L311:
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2987              		.loc 1 2654 0 discriminator 2
 2988 0018 0133     		adds	r3, r3, #1
 2989              	.LVL303:
 2990 001a 082B     		cmp	r3, #8
 2991 001c F3D1     		bne	.L313
 2992 001e FAE7     		b	.L310
 2993              	.L316:
 2994              		.align	2
 2995              	.L315:
 2996 0020 00000000 		.word	xQueueRegistry
 2997              		.cfi_endproc
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 111


 2998              	.LFE33:
 3000              		.section	.text.pcQueueGetName,"ax",%progbits
 3001              		.align	1
 3002              		.global	pcQueueGetName
 3003              		.syntax unified
 3004              		.thumb
 3005              		.thumb_func
 3006              		.fpu fpv4-sp-d16
 3008              	pcQueueGetName:
 3009              	.LFB34:
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3010              		.loc 1 2678 0
 3011              		.cfi_startproc
 3012              		@ args = 0, pretend = 0, frame = 0
 3013              		@ frame_needed = 0, uses_anonymous_args = 0
 3014              		@ link register save eliminated.
 3015              	.LVL304:
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3016              		.loc 1 2686 0
 3017 0000 074A     		ldr	r2, .L322
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3018              		.loc 1 2684 0
 3019 0002 0023     		movs	r3, #0
 3020              	.LVL305:
 3021              	.L320:
 3022              		.loc 1 2686 0
 3023 0004 02EBC301 		add	r1, r2, r3, lsl #3
 3024 0008 4968     		ldr	r1, [r1, #4]
 3025 000a 8142     		cmp	r1, r0
 3026 000c 02D1     		bne	.L318
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 3027              		.loc 1 2688 0
 3028 000e 52F83300 		ldr	r0, [r2, r3, lsl #3]
 3029              	.LVL306:
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3030              		.loc 1 2689 0
 3031 0012 7047     		bx	lr
 3032              	.LVL307:
 3033              	.L318:
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3034              		.loc 1 2684 0 discriminator 2
 3035 0014 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 112


 3036              	.LVL308:
 3037 0016 082B     		cmp	r3, #8
 3038 0018 F4D1     		bne	.L320
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3039              		.loc 1 2680 0
 3040 001a 0020     		movs	r0, #0
 3041              	.LVL309:
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 3042              		.loc 1 2698 0
 3043 001c 7047     		bx	lr
 3044              	.L323:
 3045 001e 00BF     		.align	2
 3046              	.L322:
 3047 0020 00000000 		.word	xQueueRegistry
 3048              		.cfi_endproc
 3049              	.LFE34:
 3051              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 3052              		.align	1
 3053              		.global	vQueueUnregisterQueue
 3054              		.syntax unified
 3055              		.thumb
 3056              		.thumb_func
 3057              		.fpu fpv4-sp-d16
 3059              	vQueueUnregisterQueue:
 3060              	.LFB35:
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3061              		.loc 1 2706 0
 3062              		.cfi_startproc
 3063              		@ args = 0, pretend = 0, frame = 0
 3064              		@ frame_needed = 0, uses_anonymous_args = 0
 3065              	.LVL310:
 3066 0000 10B5     		push	{r4, lr}
 3067              	.LCFI33:
 3068              		.cfi_def_cfa_offset 8
 3069              		.cfi_offset 4, -8
 3070              		.cfi_offset 14, -4
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 113


2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3071              		.loc 1 2713 0
 3072 0002 084A     		ldr	r2, .L329
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3073              		.loc 1 2711 0
 3074 0004 0023     		movs	r3, #0
 3075              	.LVL311:
 3076              	.L327:
 3077              		.loc 1 2713 0
 3078 0006 02EBC301 		add	r1, r2, r3, lsl #3
 3079 000a 4C68     		ldr	r4, [r1, #4]
 3080 000c 8442     		cmp	r4, r0
 3081 000e 04D1     		bne	.L325
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 3082              		.loc 1 2716 0
 3083 0010 0020     		movs	r0, #0
 3084              	.LVL312:
 3085 0012 42F83300 		str	r0, [r2, r3, lsl #3]
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 3086              		.loc 1 2721 0
 3087 0016 4860     		str	r0, [r1, #4]
 3088              	.L324:
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3089              		.loc 1 2730 0
 3090 0018 10BD     		pop	{r4, pc}
 3091              	.LVL313:
 3092              	.L325:
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3093              		.loc 1 2711 0 discriminator 2
 3094 001a 0133     		adds	r3, r3, #1
 3095              	.LVL314:
 3096 001c 082B     		cmp	r3, #8
 3097 001e F2D1     		bne	.L327
 3098 0020 FAE7     		b	.L324
 3099              	.L330:
 3100 0022 00BF     		.align	2
 3101              	.L329:
 3102 0024 00000000 		.word	xQueueRegistry
 3103              		.cfi_endproc
 3104              	.LFE35:
 3106              		.section	.text.vQueueDelete,"ax",%progbits
 3107              		.align	1
 3108              		.global	vQueueDelete
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 114


 3109              		.syntax unified
 3110              		.thumb
 3111              		.thumb_func
 3112              		.fpu fpv4-sp-d16
 3114              	vQueueDelete:
 3115              	.LFB21:
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3116              		.loc 1 1976 0
 3117              		.cfi_startproc
 3118              		@ args = 0, pretend = 0, frame = 0
 3119              		@ frame_needed = 0, uses_anonymous_args = 0
 3120              	.LVL315:
 3121 0000 10B5     		push	{r4, lr}
 3122              	.LCFI34:
 3123              		.cfi_def_cfa_offset 8
 3124              		.cfi_offset 4, -8
 3125              		.cfi_offset 14, -4
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 3126              		.loc 1 1979 0
 3127 0002 0446     		mov	r4, r0
 3128 0004 40B9     		cbnz	r0, .L332
 3129              	.LBB234:
 3130              	.LBB235:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3131              		.loc 2 195 0
 3132              		.syntax unified
 3133              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3134 0006 4FF05003 			mov r3, #80												
 3135 000a 83F31188 		msr basepri, r3											
 3136 000e BFF36F8F 		isb														
 3137 0012 BFF34F8F 		dsb														
 3138              	
 3139              	@ 0 "" 2
 3140              	.LVL316:
 3141              		.thumb
 3142              		.syntax unified
 3143              	.L333:
 3144 0016 FEE7     		b	.L333
 3145              	.L332:
 3146              	.LBE235:
 3147              	.LBE234:
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3148              		.loc 1 1984 0
 3149 0018 FFF7FEFF 		bl	vQueueUnregisterQueue
 3150              	.LVL317:
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3151              		.loc 1 1992 0
 3152 001c 2046     		mov	r0, r4
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3153              		.loc 1 2014 0
 3154 001e BDE81040 		pop	{r4, lr}
 3155              	.LCFI35:
 3156              		.cfi_restore 14
 3157              		.cfi_restore 4
 3158              		.cfi_def_cfa_offset 0
 3159              	.LVL318:
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 115


 3160              		.loc 1 1992 0
 3161 0022 FFF7FEBF 		b	vPortFree
 3162              	.LVL319:
 3163              		.cfi_endproc
 3164              	.LFE21:
 3166              		.comm	xQueueRegistry,64,4
 3167              		.text
 3168              	.Letext0:
 3169              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 3170              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3171              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3172              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3173              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3174              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3175              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3176              		.file 10 "Inc/FreeRTOSConfig.h"
 3177              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 3178              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3179              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3180              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 3181              		.file 15 "<built-in>"
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 116


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:18     .text.prvIsQueueEmpty:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:24     .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:56     .text.prvCopyDataToQueue:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:62     .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:176    .text.prvCopyDataFromQueue:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:182    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:241    .text.prvUnlockQueue:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:247    .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:369    .text.xQueueGenericReset:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:376    .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:487    .text.xQueueGenericReset:0000007c $d
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:492    .text.xQueueGenericCreate:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:499    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:583    .text.xQueueGenericSend:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:590    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:902    .text.xQueueGenericSend:00000160 $d
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:907    .text.xQueueCreateMutex:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:914    .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:960    .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:967    .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:1167   .text.xQueueGiveFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:1174   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:1365   .text.xQueueReceive:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:1372   .text.xQueueReceive:00000000 xQueueReceive
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:1648   .text.xQueueReceive:0000013c $d
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:1653   .text.xQueueSemaphoreTake:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:1660   .text.xQueueSemaphoreTake:00000000 xQueueSemaphoreTake
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:1995   .text.xQueueSemaphoreTake:00000180 $d
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2000   .text.xQueuePeek:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2007   .text.xQueuePeek:00000000 xQueuePeek
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2283   .text.xQueuePeek:0000013c $d
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2288   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2295   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2470   .text.xQueuePeekFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2477   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2618   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2625   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2675   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2682   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2736   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2743   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2781   .text.uxQueueGetQueueNumber:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2788   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2804   .text.vQueueSetQueueNumber:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2811   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2827   .text.ucQueueGetQueueType:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2834   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2850   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2857   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2898   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2905   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2949   .text.vQueueAddToRegistry:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2956   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:2996   .text.vQueueAddToRegistry:00000020 $d
                            *COM*:00000040 xQueueRegistry
ARM GAS  C:\Users\82057\AppData\Local\Temp\cct2ehE9.s 			page 117


C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:3001   .text.pcQueueGetName:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:3008   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:3047   .text.pcQueueGetName:00000020 $d
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:3052   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:3059   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:3102   .text.vQueueUnregisterQueue:00000024 $d
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:3107   .text.vQueueDelete:00000000 $t
C:\Users\82057\AppData\Local\Temp\cct2ehE9.s:3114   .text.vQueueDelete:00000000 vQueueDelete

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
vPortValidateInterruptPriority
xTaskPriorityInherit
pvTaskIncrementMutexHeldCount
vTaskPriorityDisinheritAfterTimeout
vPortFree
