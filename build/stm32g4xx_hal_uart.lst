ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB378:
  26              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @file    stm32g4xx_hal_uart.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @attention
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * Copyright (c) 2019 STMicroelectronics.
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   [..]
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 2


  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) UART pins configuration:
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) UART interrupts handling:
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 inside the transmit and receive processes.
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         the HAL_UART_Init() API.
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ##### Callback registration #####
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ==================================
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 3


  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and a pointer to the user callback function.
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     weak function.
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and the Callback ID.
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This function allows to reset following callbacks:
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     all callbacks are set to the corresponding weak functions:
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     reset to the legacy weak functions in the HAL_UART_Init()
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 4


 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     or HAL_UART_Init() function.
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and weak callbacks are used.
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   @endverbatim
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #include "stm32g4xx_hal.h"
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @addtogroup STM32G4xx_HAL_Driver
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART UART
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief HAL UART module driver
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR1_OVER8 | USART_CR1_FIFOEN)) /*!< UART or USART CR1 f
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT | USART_CR
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR3_RXFTCFG)) /*!< UART or USART CR3 fields of paramete
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 5


 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @addtogroup UART_Private_variables
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Exported Constants --------------------------------------------------------*/
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** ===============================================================================
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in asynchronous mode.
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Baud Rate
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Word Length
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Stop Bit
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Hardware flow control
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Over Sampling Method
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) One-Bit Sampling Method
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 6


 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) data logical level inversion
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) RX and TX pins swap
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) RX overrun detection disabling
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) DMA disabling on RX error
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) MSB first on communication line
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) auto Baud rate detection
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     are available in reference manual).
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   following table.
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   Table 1. UART frame format.
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check the parameters */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 7


 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check the parameters */
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Perform advanced settings configuration */
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 8


 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check UART instance */
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Perform advanced settings configuration */
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 9


 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart             UART handle.
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the LIN UART instance */
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 10


 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Perform advanced settings configuration */
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart        UART handle.
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 11


 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the wake up method parameter */
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Perform advanced settings configuration */
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 12


 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DeInit the low level hardware */
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DeInit the low level hardware */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 13


 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         To be used to override the weak predefined callback
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   The HAL_UART_RegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_In
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() or HAL_RS485Ex_Init() in HAL_UART_STATE_RESET
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART_MSPDEINIT_CB_ID
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart uart handle
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 14


 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (pCallback == NULL)
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 15


 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     status =  HAL_ERROR;
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 16


 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return status;
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   The HAL_UART_UnRegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() or HAL_RS485Ex_Init() in HAL_UART_STATE_RESET
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART_MSPDEINIT_CB_ID
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart uart handle
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 17


 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 18


 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     status =  HAL_ERROR;
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return status;
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart     Uart handle
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (pCallback == NULL)
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     status =  HAL_ERROR;
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return status;
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart     Uart handle
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 19


1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     status =  HAL_ERROR;
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return status;
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                       ##### IO operation functions #####
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and Half duplex data transfers.
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) There are two mode of transfer:
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            after finishing transfer.
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            using DMA mode.
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Blocking mode API's are :
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 20


1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         reception services:
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         Errors are handled as follows :
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            in Interrupt mode reception .
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            user callback is executed.
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart   UART handle.
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 21


1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const uint16_t *pdata16bits;
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return  HAL_ERROR;
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = NULL;
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = pData;
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = NULL;
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (pdata8bits == NULL)
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 22


1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart   UART handle.
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *pdata16bits;
1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask;
1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return  HAL_ERROR;
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize  = Size;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 23


1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = NULL;
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = pData;
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = NULL;
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* as long as data have to be received */
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (pdata8bits == NULL)
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 24


1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR       = NULL;
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 25


1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
1379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 26


1401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
1413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA error callback */
1426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA abort callback */
1429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Set error code to DMA */
1435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_ERROR;
1441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in the UART CR3 register */
1448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 27


1458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the parity bit (MSB position).
1462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
1484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
1487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
1490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
1494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 28


1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
1550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 29


1572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 30


1629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
1646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 31


1686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 32


1743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 33


1800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 34


1857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEI
1878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE));
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      before any call to DMA Abort functions */
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        Otherwise, set it to NULL */
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        Otherwise, set it to NULL */
1908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 35


1914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA TX */
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 0U;
1938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA RX */
1955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 1U;
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 0U;
1963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (abortcplt == 1U)
1969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 36


1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
1973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear ISR function pointers */
1975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxISR = NULL;
1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR = NULL;
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset errorCode */
1979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Discard the received data */
1991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
2016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 37


2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA TX */
2045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount = 0U;
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxISR = NULL;
2058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR = NULL;
2079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 38


2085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
2107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
2111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA RX */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 39


2142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount = 0U;
2152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Discard the received data */
2160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 40


2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t errorflags;
2216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t errorcode;
2217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If no error occurs */
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (errorflags == 0U)
2221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxISR != NULL)
2228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR(huart);
2230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
2232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If some errors occur */
2236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((errorflags != 0U)
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 41


2256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (huart->RxISR != NULL)
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxISR(huart);
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           - Receiver Timeout error in Reception
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           - Overrun error in Reception
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           - any error occurs in DMA mode reception
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       */
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Abort the UART DMA Rx channel if enabled */
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 42


2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Disable the UART DMA Rx request if enabled */
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
2319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Abort DMA RX */
2324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             {
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             }
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           else
2331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
2332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Call user error callback */
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /*Call registered error callback*/
2335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
2342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         else
2344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Call user error callback */
2346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call registered error callback*/
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
2356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Error is notified to user through user error callback */
2359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered error callback*/
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 43


2370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   } /* End if some error occurs */
2372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check current reception Mode :
2374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
2377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
2378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
2380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* DMA mode enabled */
2385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          (DMA cplt callback will be called).
2387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
2390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Reception is not complete */
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
2394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_IS_BIT_CLR(huart->hdmarx->Instance->CCR, DMA_CCR_CIRC))
2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              in the UART CR3 register */
2404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
2414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
2419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 44


2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
2429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* DMA mode not enabled */
2433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
2436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
2437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (nb_rx_data > 0U))
2438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
2441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Error Interrupt:(Frame error, noise error, overrun error) and RX FIFO T
2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Clear RxISR function pointer */
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = NULL;
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
2457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
2464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 45


2484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxISR != NULL)
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxISR(huart);
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 46


2541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART error callback.
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 47


2598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 48


2655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle
2657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *               reception buffer until which, data are available)
2659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(Size);
2666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief   UART control functions
2678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
2679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
2680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
2681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
2683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
2698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 49


2712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Locked */
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_LOCK(huart);
2732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Unlocked */
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_OK;
2744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_BUSY;
2748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
2753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Locked */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 50


2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_LOCK(huart);
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Unlocked */
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_OK;
2782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_BUSY;
2786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
2791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 51


2826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear TE and RE bits */
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status.
2872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear TE and RE bits */
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RE);
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 52


2883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Transmit break characters.
2894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
2900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Send break characters */
2907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
2924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ==============================================================================
2925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ==============================================================================
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides functions allowing to :
2929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) Return the UART handle state.
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) Return the UART handle error code
2931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
2933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Return the UART handle state.
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *               the configuration information for the specified UART.
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 53


2940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL state
2941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp1;
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp2;
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp1 = huart->gState;
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp2 = huart->RxState;
2948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval UART Error Code
2957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return huart->ErrorCode;
2961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval none
2978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Init the UART Callback settings */
2983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
2995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 54


2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
3005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tmpreg;
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t brrtemp;
3008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
3009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t usartdiv;
3010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
3011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
3012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t pclk;
3013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
3015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
3020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
3025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
3042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * to huart->Init.StopBits value */
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 55


3054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
3059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
3061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure
3064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
3065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
3066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
3069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check LPUART instance */
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Retrieve frequency clock */
3074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
3075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
3089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = 0U;
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* If proper clock source reported */
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (pclk != 0U)
3096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Compute clock after Prescaler */
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
3102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
3103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
3109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescale
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 56


3111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
3113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
3115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         else
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
3117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ret = HAL_ERROR;
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
3120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
3121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     } /* if (pclk != 0) */
3122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
3127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = 0U;
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (pclk != 0U)
3151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 57


3168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
3185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = 0U;
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (pclk != 0U)
3191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
3194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)usartdiv;
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear ISR function pointers */
3210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxISR = NULL;
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
3212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return ret;
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 58


3225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure data inversion */
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 59


3282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Init tickstart for timeout management */
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tickstart = HAL_GetTick();
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable TXE interrupt for the interrupt process */
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
3317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Timeout occurred */
3319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
3320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
3330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       interrupts for the interrupt process */
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
3337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Timeout occurred */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 60


3339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
3340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the UART State */
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
3348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                  until a flag is no longer in the specified status.
3357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart     UART handle.
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Status    The actual Flag status (SET or RESET)
3360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Tickstart Tick start value
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Wait until flag is set */
3368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check for the Timeout */
3371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
3377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag 
3380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
3382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
3383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Clear Overrun Error flag*/
3384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
3385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Blocking error : transfer is aborted
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           Set the UART state ready to be able to start again the process,
3388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           Disable Rx Interrupts if ongoing */
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           UART_EndRxTransfer(huart);
3390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_ORE;
3392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Process Unlocked */
3394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 61


3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_ERROR;
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Blocking error : transfer is aborted
3404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           Set the UART state ready to be able to start again the process,
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           Disable Rx Interrupts if ongoing */
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           UART_EndRxTransfer(huart);
3407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Process Unlocked */
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
3414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
3415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
3428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
3435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferSize  = Size;
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = Size;
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxISR       = NULL;
3438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
3441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure Rx interrupt processing */
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
3450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 62


3453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT_FIFOEN;
3455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
3457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT_FIFOEN;
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
3462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
3463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
3467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
3478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
3482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
3486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
3488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
3507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferSize = Size;
3508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 63


3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
3516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set the DMA error callback */
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set the DMA abort callback */
3524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the DMA channel */
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPt
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set error code to DMA */
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
3531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Restore huart->RxState to ready */
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
3536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
3541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   in the UART CR3 register */
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
  27              		.loc 1 3562 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 64


  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.L2:
  34              	.LBB619:
3563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
  35              		.loc 1 3564 0 discriminator 1
  36 0000 0268     		ldr	r2, [r0]
  37              	.LVL1:
  38              	.LBB620:
  39              	.LBB621:
  40              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 65


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 66


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 67


 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 68


 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 69


 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 70


 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 71


 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 72


 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 73


 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 74


 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 75


 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 76


 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 77


 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 78


 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 79


 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 80


 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 81


 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 82


1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 83


1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1095:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1096:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1097:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1107:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 84


1129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1131:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1139:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1141:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1143:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1153:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  41              		.loc 2 1155 0 discriminator 1
  42              		.syntax unified
  43              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0002 52E8003F 		ldrex r3, [r2]
  45              	@ 0 "" 2
  46              	.LVL2:
  47              		.thumb
  48              		.syntax unified
  49              	.LBE621:
  50              	.LBE620:
  51              		.loc 1 3564 0 discriminator 1
  52 0006 23F0C003 		bic	r3, r3, #192
  53              	.LVL3:
  54              	.LBB622:
  55              	.LBB623:
1156:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1170:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 85


1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1174:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1177:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1185:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1187:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1188:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1204:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  56              		.loc 2 1206 0 discriminator 1
  57              		.syntax unified
  58              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  59 000a 42E80031 		strex r1, r3, [r2]
  60              	@ 0 "" 2
  61              	.LVL4:
  62              		.thumb
  63              		.syntax unified
  64 000e 0268     		ldr	r2, [r0]
  65              	.LBE623:
  66              	.LBE622:
  67              		.loc 1 3564 0 discriminator 1
  68 0010 0029     		cmp	r1, #0
  69 0012 F5D1     		bne	.L2
  70              	.LVL5:
  71              	.L3:
  72              	.LBE619:
  73              	.LBB624:
  74              	.LBB625:
  75              	.LBB626:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 86


  76              		.loc 2 1155 0 discriminator 1
  77 0014 02F10803 		add	r3, r2, #8
  78              	.LVL6:
  79              		.syntax unified
  80              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  81 0018 53E8003F 		ldrex r3, [r3]
  82              	@ 0 "" 2
  83              	.LVL7:
  84              		.thumb
  85              		.syntax unified
  86              	.LBE626:
  87              	.LBE625:
3565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
  88              		.loc 1 3565 0 discriminator 1
  89 001c 23F40003 		bic	r3, r3, #8388608
  90              	.LVL8:
  91              	.LBB627:
  92              	.LBB628:
  93              		.loc 2 1206 0 discriminator 1
  94 0020 02F1080C 		add	ip, r2, #8
  95              	.LVL9:
  96              		.syntax unified
  97              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  98 0024 4CE80031 		strex r1, r3, [ip]
  99              	@ 0 "" 2
 100              	.LVL10:
 101              		.thumb
 102              		.syntax unified
 103              	.LBE628:
 104              	.LBE627:
 105              		.loc 1 3565 0 discriminator 1
 106 0028 0029     		cmp	r1, #0
 107 002a F3D1     		bne	.L3
 108              	.LBE624:
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 109              		.loc 1 3568 0
 110 002c 2023     		movs	r3, #32
 111              	.LVL11:
 112 002e C0F88830 		str	r3, [r0, #136]
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 113              		.loc 1 3569 0
 114 0032 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE378:
 118              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 119              		.align	1
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	UART_EndRxTransfer:
 126              	.LFB379:
3570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 87


3573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
3575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 127              		.loc 1 3578 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              	.LVL12:
 132 0000 10B5     		push	{r4, lr}
 133              	.LCFI0:
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 4, -8
 136              		.cfi_offset 14, -4
 137              	.L7:
 138              	.LBB629:
3579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 139              		.loc 1 3580 0 discriminator 1
 140 0002 0268     		ldr	r2, [r0]
 141              	.LVL13:
 142              	.LBB630:
 143              	.LBB631:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 144              		.loc 2 1155 0 discriminator 1
 145              		.syntax unified
 146              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 147 0004 52E8003F 		ldrex r3, [r2]
 148              	@ 0 "" 2
 149              	.LVL14:
 150              		.thumb
 151              		.syntax unified
 152              	.LBE631:
 153              	.LBE630:
 154              		.loc 1 3580 0 discriminator 1
 155 0008 23F49073 		bic	r3, r3, #288
 156              	.LVL15:
 157              	.LBB632:
 158              	.LBB633:
 159              		.loc 2 1206 0 discriminator 1
 160              		.syntax unified
 161              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 162 000c 42E80031 		strex r1, r3, [r2]
 163              	@ 0 "" 2
 164              	.LVL16:
 165              		.thumb
 166              		.syntax unified
 167 0010 0268     		ldr	r2, [r0]
 168              	.LBE633:
 169              	.LBE632:
 170              		.loc 1 3580 0 discriminator 1
 171 0012 0029     		cmp	r1, #0
 172 0014 F5D1     		bne	.L7
 173              	.LBE629:
 174              	.LBB634:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 88


3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 175              		.loc 1 3581 0
 176 0016 0F4C     		ldr	r4, .L14
 177              	.LVL17:
 178              	.L8:
 179              	.LBB635:
 180              	.LBB636:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 181              		.loc 2 1155 0 discriminator 1
 182 0018 02F10803 		add	r3, r2, #8
 183              	.LVL18:
 184              		.syntax unified
 185              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 186 001c 53E8003F 		ldrex r3, [r3]
 187              	@ 0 "" 2
 188              	.LVL19:
 189              		.thumb
 190              		.syntax unified
 191              	.LBE636:
 192              	.LBE635:
 193              		.loc 1 3581 0 discriminator 1
 194 0020 2340     		ands	r3, r3, r4
 195              	.LVL20:
 196              	.LBB637:
 197              	.LBB638:
 198              		.loc 2 1206 0 discriminator 1
 199 0022 02F1080C 		add	ip, r2, #8
 200              	.LVL21:
 201              		.syntax unified
 202              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 203 0026 4CE80031 		strex r1, r3, [ip]
 204              	@ 0 "" 2
 205              	.LVL22:
 206              		.thumb
 207              		.syntax unified
 208              	.LBE638:
 209              	.LBE637:
 210              		.loc 1 3581 0 discriminator 1
 211 002a 0029     		cmp	r1, #0
 212 002c F4D1     		bne	.L8
 213              	.LBE634:
3582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 214              		.loc 1 3584 0
 215 002e C36E     		ldr	r3, [r0, #108]
 216              	.LVL23:
 217 0030 012B     		cmp	r3, #1
 218 0032 07D1     		bne	.L9
 219              	.L10:
 220              	.LVL24:
 221              	.LBB639:
 222              	.LBB640:
 223              	.LBB641:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 224              		.loc 2 1155 0 discriminator 1
 225              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 89


 226              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 227 0034 52E8003F 		ldrex r3, [r2]
 228              	@ 0 "" 2
 229              	.LVL25:
 230              		.thumb
 231              		.syntax unified
 232              	.LBE641:
 233              	.LBE640:
3585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 234              		.loc 1 3586 0 discriminator 1
 235 0038 23F01003 		bic	r3, r3, #16
 236              	.LVL26:
 237              	.LBB642:
 238              	.LBB643:
 239              		.loc 2 1206 0 discriminator 1
 240              		.syntax unified
 241              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 242 003c 42E80031 		strex r1, r3, [r2]
 243              	@ 0 "" 2
 244              	.LVL27:
 245              		.thumb
 246              		.syntax unified
 247              	.LBE643:
 248              	.LBE642:
 249              		.loc 1 3586 0 discriminator 1
 250 0040 0029     		cmp	r1, #0
 251 0042 F7D1     		bne	.L10
 252              	.LVL28:
 253              	.L9:
 254              	.LBE639:
3587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 255              		.loc 1 3590 0
 256 0044 2023     		movs	r3, #32
 257 0046 C0F88C30 		str	r3, [r0, #140]
3591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 258              		.loc 1 3591 0
 259 004a 0023     		movs	r3, #0
 260 004c C366     		str	r3, [r0, #108]
3592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxISR = NULL;
 261              		.loc 1 3594 0
 262 004e 4367     		str	r3, [r0, #116]
3595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 263              		.loc 1 3595 0
 264 0050 10BD     		pop	{r4, pc}
 265              	.L15:
 266 0052 00BF     		.align	2
 267              	.L14:
 268 0054 FEFFFFEF 		.word	-268435458
 269              		.cfi_endproc
 270              	.LFE379:
 272              		.section	.text.UART_TxISR_8BIT.part.0,"ax",%progbits
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 90


 273              		.align	1
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	UART_TxISR_8BIT.part.0:
 280              	.LFB399:
3596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Normal mode */
3608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        in the UART CR3 register */
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Circular mode */
3620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 91


3646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Normal mode */
3660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        in the UART CR3 register */
3670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      In this case, Rx Event type is Transfer Complete */
3684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
3685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check current reception Mode :
3687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call registered Rx complete callback*/
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 92


3703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      In this case, Rx Event type is Half Transfer */
3722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_HT;
3723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check current reception Mode :
3725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
3734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 93


3760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered error callback*/
3781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered error callback*/
3802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 94


3817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
3829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset errorCode */
3837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 95


3874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
3884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset errorCode */
3892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
3898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 96


3931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
3967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
3985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 97


3988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
 281              		.loc 1 3990 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL29:
 287              	.L17:
 288              	.LBB644:
3991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 289              		.loc 1 3998 0
 290 0000 0268     		ldr	r2, [r0]
 291              	.LVL30:
 292              	.LBB645:
 293              	.LBB646:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 294              		.loc 2 1155 0
 295              		.syntax unified
 296              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 297 0002 52E8003F 		ldrex r3, [r2]
 298              	@ 0 "" 2
 299              	.LVL31:
 300              		.thumb
 301              		.syntax unified
 302              	.LBE646:
 303              	.LBE645:
 304              		.loc 1 3998 0
 305 0006 23F08003 		bic	r3, r3, #128
 306              	.LVL32:
 307              	.LBB647:
 308              	.LBB648:
 309              		.loc 2 1206 0
 310              		.syntax unified
 311              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 312 000a 42E80031 		strex r1, r3, [r2]
 313              	@ 0 "" 2
 314              	.LVL33:
 315              		.thumb
 316              		.syntax unified
 317 000e 0268     		ldr	r2, [r0]
 318              	.LBE648:
 319              	.LBE647:
 320              		.loc 1 3998 0
 321 0010 0029     		cmp	r1, #0
 322 0012 F5D1     		bne	.L17
 323              	.LVL34:
 324              	.L18:
 325              	.LBE644:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 98


 326              	.LBB649:
 327              	.LBB650:
 328              	.LBB651:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 329              		.loc 2 1155 0
 330              		.syntax unified
 331              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 332 0014 52E8003F 		ldrex r3, [r2]
 333              	@ 0 "" 2
 334              	.LVL35:
 335              		.thumb
 336              		.syntax unified
 337              	.LBE651:
 338              	.LBE650:
3999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 339              		.loc 1 4001 0
 340 0018 43F04003 		orr	r3, r3, #64
 341              	.LVL36:
 342              	.LBB652:
 343              	.LBB653:
 344              		.loc 2 1206 0
 345              		.syntax unified
 346              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 347 001c 42E80031 		strex r1, r3, [r2]
 348              	@ 0 "" 2
 349              	.LVL37:
 350              		.thumb
 351              		.syntax unified
 352              	.LBE653:
 353              	.LBE652:
 354              		.loc 1 4001 0
 355 0020 0029     		cmp	r1, #0
 356 0022 F7D1     		bne	.L18
 357              	.LBE649:
4002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
4004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
4007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
4008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 358              		.loc 1 4010 0
 359 0024 7047     		bx	lr
 360              		.cfi_endproc
 361              	.LFE399:
 363              		.thumb_set UART_TxISR_16BIT.part.1,UART_TxISR_8BIT.part.0
 364              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 365              		.align	1
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	UART_TxISR_8BIT:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 99


 372              	.LFB390:
3991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
 373              		.loc 1 3991 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378              	.LVL38:
3993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 379              		.loc 1 3993 0
 380 0000 D0F88820 		ldr	r2, [r0, #136]
 381 0004 212A     		cmp	r2, #33
3991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
 382              		.loc 1 3991 0
 383 0006 0346     		mov	r3, r0
3993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 384              		.loc 1 3993 0
 385 0008 11D1     		bne	.L21
3995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 386              		.loc 1 3995 0
 387 000a B0F85620 		ldrh	r2, [r0, #86]
 388 000e 92B2     		uxth	r2, r2
 389 0010 0AB9     		cbnz	r2, .L23
 390 0012 FFF7FEBF 		b	UART_TxISR_8BIT.part.0
 391              	.LVL39:
 392              	.L23:
4005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 393              		.loc 1 4005 0
 394 0016 026D     		ldr	r2, [r0, #80]
 395 0018 0168     		ldr	r1, [r0]
 396 001a 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 397              	.LVL40:
 398 001e 8862     		str	r0, [r1, #40]
4006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
 399              		.loc 1 4006 0
 400 0020 1A65     		str	r2, [r3, #80]
4007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 401              		.loc 1 4007 0
 402 0022 B3F85620 		ldrh	r2, [r3, #86]
 403 0026 013A     		subs	r2, r2, #1
 404 0028 92B2     		uxth	r2, r2
 405 002a A3F85620 		strh	r2, [r3, #86]	@ movhi
 406              	.L21:
 407              		.loc 1 4010 0
 408 002e 7047     		bx	lr
 409              		.cfi_endproc
 410              	.LFE390:
 412              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 413              		.align	1
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu fpv4-sp-d16
 419              	UART_TxISR_16BIT:
 420              	.LFB391:
4011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 100


4013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
4014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
4017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
4018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
4019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
4020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 421              		.loc 1 4020 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426              	.LVL41:
4021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const uint16_t *tmp;
4022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 427              		.loc 1 4024 0
 428 0000 D0F88820 		ldr	r2, [r0, #136]
 429 0004 212A     		cmp	r2, #33
4020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const uint16_t *tmp;
 430              		.loc 1 4020 0
 431 0006 0346     		mov	r3, r0
 432              		.loc 1 4024 0
 433 0008 13D1     		bne	.L24
4025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 434              		.loc 1 4026 0
 435 000a B0F85620 		ldrh	r2, [r0, #86]
 436 000e 92B2     		uxth	r2, r2
 437 0010 0AB9     		cbnz	r2, .L26
 438 0012 FFF7FEBF 		b	UART_TxISR_16BIT.part.1
 439              	.LVL42:
 440              	.L26:
4027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
4030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
4033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
4035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
4037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 441              		.loc 1 4037 0
 442 0016 1A6D     		ldr	r2, [r3, #80]
 443 0018 0068     		ldr	r0, [r0]
 444              	.LVL43:
 445 001a 32F8021B 		ldrh	r1, [r2], #2
 446 001e C1F30801 		ubfx	r1, r1, #0, #9
 447 0022 8162     		str	r1, [r0, #40]
4038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 448              		.loc 1 4038 0
 449 0024 1A65     		str	r2, [r3, #80]
 450              	.LVL44:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 101


4039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
 451              		.loc 1 4039 0
 452 0026 B3F85620 		ldrh	r2, [r3, #86]
 453 002a 013A     		subs	r2, r2, #1
 454 002c 92B2     		uxth	r2, r2
 455 002e A3F85620 		strh	r2, [r3, #86]	@ movhi
 456              	.L24:
4040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 457              		.loc 1 4042 0
 458 0032 7047     		bx	lr
 459              		.cfi_endproc
 460              	.LFE391:
 462              		.section	.text.UART_TxISR_8BIT_FIFOEN.part.2,"ax",%progbits
 463              		.align	1
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 467              		.fpu fpv4-sp-d16
 469              	UART_TxISR_8BIT_FIFOEN.part.2:
 470              	.LFB401:
4043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
4045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
4046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
4049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
4050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
4051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
 471              		.loc 1 4051 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476              	.LVL45:
 477              	.L28:
 478              	.LBB654:
4052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
4053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_tx_data;
4054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
4057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
4059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
4061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 479              		.loc 1 4063 0
 480 0000 0268     		ldr	r2, [r0]
 481              	.LVL46:
 482              	.LBB655:
 483              	.LBB656:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 102


 484              		.loc 2 1155 0
 485 0002 02F10803 		add	r3, r2, #8
 486              	.LVL47:
 487              		.syntax unified
 488              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 489 0006 53E8003F 		ldrex r3, [r3]
 490              	@ 0 "" 2
 491              	.LVL48:
 492              		.thumb
 493              		.syntax unified
 494              	.LBE656:
 495              	.LBE655:
 496              		.loc 1 4063 0
 497 000a 23F40003 		bic	r3, r3, #8388608
 498              	.LVL49:
 499              	.LBB657:
 500              	.LBB658:
 501              		.loc 2 1206 0
 502 000e 0832     		adds	r2, r2, #8
 503              	.LVL50:
 504              		.syntax unified
 505              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 506 0010 42E80031 		strex r1, r3, [r2]
 507              	@ 0 "" 2
 508              	.LVL51:
 509              		.thumb
 510              		.syntax unified
 511 0014 0268     		ldr	r2, [r0]
 512              	.LBE658:
 513              	.LBE657:
 514              		.loc 1 4063 0
 515 0016 0029     		cmp	r1, #0
 516 0018 F2D1     		bne	.L28
 517              	.LVL52:
 518              	.L29:
 519              	.LBE654:
 520              	.LBB659:
 521              	.LBB660:
 522              	.LBB661:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 523              		.loc 2 1155 0
 524              		.syntax unified
 525              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 526 001a 52E8003F 		ldrex r3, [r2]
 527              	@ 0 "" 2
 528              	.LVL53:
 529              		.thumb
 530              		.syntax unified
 531              	.LBE661:
 532              	.LBE660:
4064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 533              		.loc 1 4066 0
 534 001e 43F04003 		orr	r3, r3, #64
 535              	.LVL54:
 536              	.LBB662:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 103


 537              	.LBB663:
 538              		.loc 2 1206 0
 539              		.syntax unified
 540              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 541 0022 42E80031 		strex r1, r3, [r2]
 542              	@ 0 "" 2
 543              	.LVL55:
 544              		.thumb
 545              		.syntax unified
 546              	.LBE663:
 547              	.LBE662:
 548              		.loc 1 4066 0
 549 0026 0029     		cmp	r1, #0
 550 0028 F7D1     		bne	.L29
 551              	.LBE659:
4067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break; /* force exit loop */
4069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
4071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
4074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
4075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
4077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Nothing to do */
4079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 552              		.loc 1 4082 0
 553 002a 7047     		bx	lr
 554              		.cfi_endproc
 555              	.LFE401:
 557              		.thumb_set UART_TxISR_16BIT_FIFOEN.part.3,UART_TxISR_8BIT_FIFOEN.part.2
 558              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 559              		.align	1
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu fpv4-sp-d16
 565              	UART_TxISR_8BIT_FIFOEN:
 566              	.LFB392:
4052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_tx_data;
 567              		.loc 1 4052 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 572              	.LVL56:
4056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 573              		.loc 1 4056 0
 574 0000 D0F88830 		ldr	r3, [r0, #136]
 575 0004 212B     		cmp	r3, #33
4052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_tx_data;
 576              		.loc 1 4052 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 104


 577 0006 10B4     		push	{r4}
 578              	.LCFI1:
 579              		.cfi_def_cfa_offset 4
 580              		.cfi_offset 4, -4
4056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 581              		.loc 1 4056 0
 582 0008 02D1     		bne	.L32
4058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 583              		.loc 1 4058 0
 584 000a B0F86A30 		ldrh	r3, [r0, #106]
 585              	.LVL57:
 586              	.L35:
4058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 587              		.loc 1 4058 0 is_stmt 0 discriminator 1
 588 000e 13B9     		cbnz	r3, .L38
 589              	.LVL58:
 590              	.L32:
 591              		.loc 1 4082 0 is_stmt 1
 592 0010 5DF8044B 		ldr	r4, [sp], #4
 593              	.LCFI2:
 594              		.cfi_remember_state
 595              		.cfi_restore 4
 596              		.cfi_def_cfa_offset 0
 597 0014 7047     		bx	lr
 598              	.LVL59:
 599              	.L38:
 600              	.LCFI3:
 601              		.cfi_restore_state
4060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 602              		.loc 1 4060 0
 603 0016 B0F85620 		ldrh	r2, [r0, #86]
 604 001a 92B2     		uxth	r2, r2
 605 001c 1AB9     		cbnz	r2, .L36
 606              		.loc 1 4082 0
 607 001e 5DF8044B 		ldr	r4, [sp], #4
 608              	.LCFI4:
 609              		.cfi_remember_state
 610              		.cfi_restore 4
 611              		.cfi_def_cfa_offset 0
 612 0022 FFF7FEBF 		b	UART_TxISR_8BIT_FIFOEN.part.2
 613              	.LVL60:
 614              	.L36:
 615              	.LCFI5:
 616              		.cfi_restore_state
4070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 617              		.loc 1 4070 0
 618 0026 0168     		ldr	r1, [r0]
 619 0028 CA69     		ldr	r2, [r1, #28]
 620 002a 1206     		lsls	r2, r2, #24
 621 002c 0AD5     		bpl	.L37
4072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
 622              		.loc 1 4072 0
 623 002e 026D     		ldr	r2, [r0, #80]
 624 0030 12F8014B 		ldrb	r4, [r2], #1	@ zero_extendqisi2
 625 0034 8C62     		str	r4, [r1, #40]
4073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
 626              		.loc 1 4073 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 105


 627 0036 0265     		str	r2, [r0, #80]
4074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 628              		.loc 1 4074 0
 629 0038 B0F85620 		ldrh	r2, [r0, #86]
 630 003c 013A     		subs	r2, r2, #1
 631 003e 92B2     		uxth	r2, r2
 632 0040 A0F85620 		strh	r2, [r0, #86]	@ movhi
 633              	.L37:
4058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 634              		.loc 1 4058 0 discriminator 2
 635 0044 013B     		subs	r3, r3, #1
 636              	.LVL61:
 637 0046 9BB2     		uxth	r3, r3
 638              	.LVL62:
 639 0048 E1E7     		b	.L35
 640              		.cfi_endproc
 641              	.LFE392:
 643              		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 644              		.align	1
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv4-sp-d16
 650              	UART_TxISR_16BIT_FIFOEN:
 651              	.LFB393:
4083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
4085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
4089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
4090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
4091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 652              		.loc 1 4092 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL63:
4093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const uint16_t *tmp;
4094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_tx_data;
4095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 658              		.loc 1 4097 0
 659 0000 D0F88830 		ldr	r3, [r0, #136]
 660 0004 212B     		cmp	r3, #33
4092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const uint16_t *tmp;
 661              		.loc 1 4092 0
 662 0006 10B4     		push	{r4}
 663              	.LCFI6:
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 4, -4
 666              		.loc 1 4097 0
 667 0008 02D1     		bne	.L43
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 106


4098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 668              		.loc 1 4099 0
 669 000a B0F86A30 		ldrh	r3, [r0, #106]
 670              	.LVL64:
 671              	.L46:
 672              		.loc 1 4099 0 is_stmt 0 discriminator 1
 673 000e 13B9     		cbnz	r3, .L49
 674              	.LVL65:
 675              	.L43:
4100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
4102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
4105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
4108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break; /* force exit loop */
4110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
4112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         tmp = (const uint16_t *) huart->pTxBuffPtr;
4114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
4115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
4116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
4117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
4119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Nothing to do */
4121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 676              		.loc 1 4124 0 is_stmt 1
 677 0010 5DF8044B 		ldr	r4, [sp], #4
 678              	.LCFI7:
 679              		.cfi_remember_state
 680              		.cfi_restore 4
 681              		.cfi_def_cfa_offset 0
 682 0014 7047     		bx	lr
 683              	.LVL66:
 684              	.L49:
 685              	.LCFI8:
 686              		.cfi_restore_state
4101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 687              		.loc 1 4101 0
 688 0016 B0F85620 		ldrh	r2, [r0, #86]
 689 001a 92B2     		uxth	r2, r2
 690 001c 1AB9     		cbnz	r2, .L47
 691              		.loc 1 4124 0
 692 001e 5DF8044B 		ldr	r4, [sp], #4
 693              	.LCFI9:
 694              		.cfi_remember_state
 695              		.cfi_restore 4
 696              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 107


 697 0022 FFF7FEBF 		b	UART_TxISR_16BIT_FIFOEN.part.3
 698              	.LVL67:
 699              	.L47:
 700              	.LCFI10:
 701              		.cfi_restore_state
4111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 702              		.loc 1 4111 0
 703 0026 0468     		ldr	r4, [r0]
 704 0028 E269     		ldr	r2, [r4, #28]
 705 002a 1206     		lsls	r2, r2, #24
 706 002c 0CD5     		bpl	.L48
 707              	.LVL68:
4114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 708              		.loc 1 4114 0
 709 002e 026D     		ldr	r2, [r0, #80]
 710 0030 32F8021B 		ldrh	r1, [r2], #2
 711 0034 C1F30801 		ubfx	r1, r1, #0, #9
 712 0038 A162     		str	r1, [r4, #40]
4115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
 713              		.loc 1 4115 0
 714 003a 0265     		str	r2, [r0, #80]
 715              	.LVL69:
4116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 716              		.loc 1 4116 0
 717 003c B0F85620 		ldrh	r2, [r0, #86]
 718              	.LVL70:
 719 0040 013A     		subs	r2, r2, #1
 720 0042 92B2     		uxth	r2, r2
 721 0044 A0F85620 		strh	r2, [r0, #86]	@ movhi
 722              	.LVL71:
 723              	.L48:
4099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 724              		.loc 1 4099 0 discriminator 2
 725 0048 013B     		subs	r3, r3, #1
 726              	.LVL72:
 727 004a 9BB2     		uxth	r3, r3
 728              	.LVL73:
 729 004c DFE7     		b	.L46
 730              		.cfi_endproc
 731              	.LFE393:
 733              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 734              		.align	1
 735              		.weak	HAL_UART_MspInit
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu fpv4-sp-d16
 741              	HAL_UART_MspInit:
 742              	.LFB334:
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 743              		.loc 1 680 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748              	.LVL74:
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 108


 749              		.loc 1 687 0
 750 0000 7047     		bx	lr
 751              		.cfi_endproc
 752              	.LFE334:
 754              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 755              		.align	1
 756              		.weak	HAL_UART_MspDeInit
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu fpv4-sp-d16
 762              	HAL_UART_MspDeInit:
 763              	.LFB407:
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768 0000 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE407:
 772              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_UART_DeInit
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	HAL_UART_DeInit:
 781              	.LFB333:
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 782              		.loc 1 633 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              	.LVL75:
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 787              		.loc 1 633 0
 788 0000 38B5     		push	{r3, r4, r5, lr}
 789              	.LCFI11:
 790              		.cfi_def_cfa_offset 16
 791              		.cfi_offset 3, -16
 792              		.cfi_offset 4, -12
 793              		.cfi_offset 5, -8
 794              		.cfi_offset 14, -4
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 795              		.loc 1 635 0
 796 0002 0546     		mov	r5, r0
 797 0004 C8B1     		cbz	r0, .L58
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 798              		.loc 1 643 0
 799 0006 2423     		movs	r3, #36
 800 0008 C0F88830 		str	r3, [r0, #136]
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 801              		.loc 1 645 0
 802 000c 0368     		ldr	r3, [r0]
 803 000e 1A68     		ldr	r2, [r3]
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 109


 804              		.loc 1 647 0
 805 0010 0024     		movs	r4, #0
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 806              		.loc 1 645 0
 807 0012 22F00102 		bic	r2, r2, #1
 808 0016 1A60     		str	r2, [r3]
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 809              		.loc 1 647 0
 810 0018 1C60     		str	r4, [r3]
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 811              		.loc 1 648 0
 812 001a 5C60     		str	r4, [r3, #4]
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 813              		.loc 1 649 0
 814 001c 9C60     		str	r4, [r3, #8]
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 815              		.loc 1 660 0
 816 001e FFF7FEFF 		bl	HAL_UART_MspDeInit
 817              	.LVL76:
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 818              		.loc 1 663 0
 819 0022 C5F89040 		str	r4, [r5, #144]
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 820              		.loc 1 669 0
 821 0026 85F88440 		strb	r4, [r5, #132]
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 822              		.loc 1 664 0
 823 002a C5F88840 		str	r4, [r5, #136]
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 824              		.loc 1 671 0
 825 002e 2046     		mov	r0, r4
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 826              		.loc 1 665 0
 827 0030 C5F88C40 		str	r4, [r5, #140]
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 828              		.loc 1 666 0
 829 0034 EC66     		str	r4, [r5, #108]
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 830              		.loc 1 667 0
 831 0036 2C67     		str	r4, [r5, #112]
 832              	.L57:
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 833              		.loc 1 672 0
 834 0038 38BD     		pop	{r3, r4, r5, pc}
 835              	.LVL77:
 836              	.L58:
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 837              		.loc 1 637 0
 838 003a 0120     		movs	r0, #1
 839              	.LVL78:
 840 003c FCE7     		b	.L57
 841              		.cfi_endproc
 842              	.LFE333:
 844              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 845              		.align	1
 846              		.global	HAL_UART_Transmit_IT
 847              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 110


 848              		.thumb
 849              		.thumb_func
 850              		.fpu fpv4-sp-d16
 852              	HAL_UART_Transmit_IT:
 853              	.LFB338:
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 854              		.loc 1 1292 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859              	.LVL79:
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 860              		.loc 1 1294 0
 861 0000 D0F88830 		ldr	r3, [r0, #136]
 862 0004 202B     		cmp	r3, #32
 863 0006 3FD1     		bne	.L69
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 864              		.loc 1 1296 0
 865 0008 0029     		cmp	r1, #0
 866 000a 3FD0     		beq	.L71
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 867              		.loc 1 1296 0 is_stmt 0 discriminator 1
 868 000c 002A     		cmp	r2, #0
 869 000e 3DD0     		beq	.L71
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR       = NULL;
 870              		.loc 1 1303 0 is_stmt 1
 871 0010 A0F85620 		strh	r2, [r0, #86]	@ movhi
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 872              		.loc 1 1302 0
 873 0014 A0F85420 		strh	r2, [r0, #84]	@ movhi
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 874              		.loc 1 1310 0
 875 0018 426E     		ldr	r2, [r0, #100]
 876              	.LVL80:
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 877              		.loc 1 1301 0
 878 001a 0165     		str	r1, [r0, #80]
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 879              		.loc 1 1304 0
 880 001c 0023     		movs	r3, #0
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 881              		.loc 1 1306 0
 882 001e C0F89030 		str	r3, [r0, #144]
 883              	.LVL81:
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 884              		.loc 1 1304 0
 885 0022 8367     		str	r3, [r0, #120]
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 886              		.loc 1 1310 0
 887 0024 B2F1005F 		cmp	r2, #536870912
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 888              		.loc 1 1307 0
 889 0028 4FF02103 		mov	r3, #33
 890 002c C0F88830 		str	r3, [r0, #136]
 891 0030 0268     		ldr	r2, [r0]
 892 0032 8368     		ldr	r3, [r0, #8]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 111


1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 893              		.loc 1 1310 0
 894 0034 16D1     		bne	.L61
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 895              		.loc 1 1313 0
 896 0036 B3F5805F 		cmp	r3, #4096
 897 003a 11D1     		bne	.L62
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 898              		.loc 1 1313 0 is_stmt 0 discriminator 1
 899 003c 0369     		ldr	r3, [r0, #16]
 900 003e 7BB9     		cbnz	r3, .L62
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 901              		.loc 1 1315 0 is_stmt 1
 902 0040 134B     		ldr	r3, .L76
 903              	.L74:
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 904              		.loc 1 1319 0
 905 0042 8367     		str	r3, [r0, #120]
 906              	.LVL82:
 907              	.L63:
 908              	.LBB664:
 909              	.LBB665:
 910              	.LBB666:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 911              		.loc 2 1155 0 discriminator 1
 912 0044 02F10803 		add	r3, r2, #8
 913              	.LVL83:
 914              		.syntax unified
 915              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 916 0048 53E8003F 		ldrex r3, [r3]
 917              	@ 0 "" 2
 918              	.LVL84:
 919              		.thumb
 920              		.syntax unified
 921              	.LBE666:
 922              	.LBE665:
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 923              		.loc 1 1323 0 discriminator 1
 924 004c 43F40003 		orr	r3, r3, #8388608
 925              	.LVL85:
 926              	.LBB667:
 927              	.LBB668:
 928              		.loc 2 1206 0 discriminator 1
 929 0050 02F10800 		add	r0, r2, #8
 930              	.LVL86:
 931              		.syntax unified
 932              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 933 0054 40E80031 		strex r1, r3, [r0]
 934              	@ 0 "" 2
 935              	.LVL87:
 936              		.thumb
 937              		.syntax unified
 938              	.LBE668:
 939              	.LBE667:
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 940              		.loc 1 1323 0 discriminator 1
 941 0058 0029     		cmp	r1, #0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 112


 942 005a F3D1     		bne	.L63
 943              	.LVL88:
 944              	.L68:
 945              	.LBE664:
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 946              		.loc 1 1341 0
 947 005c 0020     		movs	r0, #0
 948 005e 7047     		bx	lr
 949              	.LVL89:
 950              	.L62:
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 951              		.loc 1 1319 0
 952 0060 0C4B     		ldr	r3, .L76+4
 953 0062 EEE7     		b	.L74
 954              	.L61:
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 955              		.loc 1 1328 0
 956 0064 B3F5805F 		cmp	r3, #4096
 957 0068 0CD1     		bne	.L65
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 958              		.loc 1 1328 0 is_stmt 0 discriminator 1
 959 006a 0369     		ldr	r3, [r0, #16]
 960 006c 53B9     		cbnz	r3, .L65
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 961              		.loc 1 1330 0 is_stmt 1
 962 006e 0A4B     		ldr	r3, .L76+8
 963              	.L75:
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 964              		.loc 1 1334 0
 965 0070 8367     		str	r3, [r0, #120]
 966              	.LVL90:
 967              	.L66:
 968              	.LBB669:
 969              	.LBB670:
 970              	.LBB671:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 971              		.loc 2 1155 0 discriminator 1
 972              		.syntax unified
 973              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 974 0072 52E8003F 		ldrex r3, [r2]
 975              	@ 0 "" 2
 976              	.LVL91:
 977              		.thumb
 978              		.syntax unified
 979              	.LBE671:
 980              	.LBE670:
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 981              		.loc 1 1338 0 discriminator 1
 982 0076 43F08003 		orr	r3, r3, #128
 983              	.LVL92:
 984              	.LBB672:
 985              	.LBB673:
 986              		.loc 2 1206 0 discriminator 1
 987              		.syntax unified
 988              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 989 007a 42E80031 		strex r1, r3, [r2]
 990              	@ 0 "" 2
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 113


 991              	.LVL93:
 992              		.thumb
 993              		.syntax unified
 994              	.LBE673:
 995              	.LBE672:
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 996              		.loc 1 1338 0 discriminator 1
 997 007e 0029     		cmp	r1, #0
 998 0080 F7D1     		bne	.L66
 999 0082 EBE7     		b	.L68
 1000              	.LVL94:
 1001              	.L65:
 1002              	.LBE669:
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 1003              		.loc 1 1334 0
 1004 0084 054B     		ldr	r3, .L76+12
 1005 0086 F3E7     		b	.L75
 1006              	.LVL95:
 1007              	.L69:
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1008              		.loc 1 1345 0
 1009 0088 0220     		movs	r0, #2
 1010              	.LVL96:
 1011 008a 7047     		bx	lr
 1012              	.LVL97:
 1013              	.L71:
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 1014              		.loc 1 1298 0
 1015 008c 0120     		movs	r0, #1
 1016              	.LVL98:
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1017              		.loc 1 1347 0
 1018 008e 7047     		bx	lr
 1019              	.L77:
 1020              		.align	2
 1021              	.L76:
 1022 0090 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 1023 0094 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 1024 0098 00000000 		.word	UART_TxISR_16BIT
 1025 009c 00000000 		.word	UART_TxISR_8BIT
 1026              		.cfi_endproc
 1027              	.LFE338:
 1029              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1030              		.align	1
 1031              		.global	HAL_UART_Transmit_DMA
 1032              		.syntax unified
 1033              		.thumb
 1034              		.thumb_func
 1035              		.fpu fpv4-sp-d16
 1037              	HAL_UART_Transmit_DMA:
 1038              	.LFB340:
1401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1039              		.loc 1 1401 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              	.LVL99:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 114


 1044 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1045              	.LCFI12:
 1046              		.cfi_def_cfa_offset 24
 1047              		.cfi_offset 3, -24
 1048              		.cfi_offset 4, -20
 1049              		.cfi_offset 5, -16
 1050              		.cfi_offset 6, -12
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
1401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1053              		.loc 1 1401 0
 1054 0002 0446     		mov	r4, r0
 1055 0004 1346     		mov	r3, r2
1403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1056              		.loc 1 1403 0
 1057 0006 D4F88850 		ldr	r5, [r4, #136]
 1058 000a 202D     		cmp	r5, #32
 1059 000c 32D1     		bne	.L82
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1060              		.loc 1 1405 0
 1061 000e F1B1     		cbz	r1, .L84
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1062              		.loc 1 1405 0 is_stmt 0 discriminator 1
 1063 0010 EAB1     		cbz	r2, .L84
1417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1064              		.loc 1 1417 0 is_stmt 1
 1065 0012 E06F     		ldr	r0, [r4, #124]
 1066              	.LVL100:
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1067              		.loc 1 1412 0
 1068 0014 A4F85620 		strh	r2, [r4, #86]	@ movhi
1411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1069              		.loc 1 1411 0
 1070 0018 A4F85420 		strh	r2, [r4, #84]	@ movhi
1414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1071              		.loc 1 1414 0
 1072 001c 0026     		movs	r6, #0
1415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1073              		.loc 1 1415 0
 1074 001e 2122     		movs	r2, #33
 1075              	.LVL101:
1414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1076              		.loc 1 1414 0
 1077 0020 C4F89060 		str	r6, [r4, #144]
 1078              	.LVL102:
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1079              		.loc 1 1410 0
 1080 0024 2165     		str	r1, [r4, #80]
1415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1081              		.loc 1 1415 0
 1082 0026 C4F88820 		str	r2, [r4, #136]
1417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1083              		.loc 1 1417 0
 1084 002a 90B1     		cbz	r0, .L80
1420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1085              		.loc 1 1420 0
 1086 002c 124F     		ldr	r7, .L92
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 115


 1087 002e 2268     		ldr	r2, [r4]
 1088 0030 C762     		str	r7, [r0, #44]
1423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1089              		.loc 1 1423 0
 1090 0032 124F     		ldr	r7, .L92+4
 1091 0034 0763     		str	r7, [r0, #48]
1426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1092              		.loc 1 1426 0
 1093 0036 124F     		ldr	r7, .L92+8
1432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1094              		.loc 1 1432 0
 1095 0038 2832     		adds	r2, r2, #40
1429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1096              		.loc 1 1429 0
 1097 003a C0E90D76 		strd	r7, r6, [r0, #52]
1432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1098              		.loc 1 1432 0
 1099 003e FFF7FEFF 		bl	HAL_DMA_Start_IT
 1100              	.LVL103:
 1101 0042 30B1     		cbz	r0, .L80
1435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1102              		.loc 1 1435 0
 1103 0044 1023     		movs	r3, #16
 1104 0046 C4F89030 		str	r3, [r4, #144]
1438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1105              		.loc 1 1438 0
 1106 004a C4F88850 		str	r5, [r4, #136]
 1107              	.L84:
1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 1108              		.loc 1 1407 0
 1109 004e 0120     		movs	r0, #1
 1110 0050 0FE0     		b	.L79
 1111              	.L80:
1444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1112              		.loc 1 1444 0
 1113 0052 2368     		ldr	r3, [r4]
 1114 0054 4022     		movs	r2, #64
 1115 0056 1A62     		str	r2, [r3, #32]
 1116 0058 2268     		ldr	r2, [r4]
 1117              	.L81:
 1118              	.LVL104:
 1119              	.LBB674:
 1120              	.LBB675:
 1121              	.LBB676:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1122              		.loc 2 1155 0 discriminator 1
 1123 005a 02F10803 		add	r3, r2, #8
 1124              	.LVL105:
 1125              		.syntax unified
 1126              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1127 005e 53E8003F 		ldrex r3, [r3]
 1128              	@ 0 "" 2
 1129              	.LVL106:
 1130              		.thumb
 1131              		.syntax unified
 1132              	.LBE676:
 1133              	.LBE675:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 116


1448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1134              		.loc 1 1448 0 discriminator 1
 1135 0062 43F08003 		orr	r3, r3, #128
 1136              	.LVL107:
 1137              	.LBB677:
 1138              	.LBB678:
 1139              		.loc 2 1206 0 discriminator 1
 1140 0066 02F10801 		add	r1, r2, #8
 1141              	.LVL108:
 1142              		.syntax unified
 1143              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1144 006a 41E80030 		strex r0, r3, [r1]
 1145              	@ 0 "" 2
 1146              	.LVL109:
 1147              		.thumb
 1148              		.syntax unified
 1149              	.LBE678:
 1150              	.LBE677:
1448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1151              		.loc 1 1448 0 discriminator 1
 1152 006e 0028     		cmp	r0, #0
 1153 0070 F3D1     		bne	.L81
 1154              	.LVL110:
 1155              	.L79:
 1156              	.LBE674:
1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1157              		.loc 1 1456 0
 1158 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1159              	.LVL111:
 1160              	.L82:
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1161              		.loc 1 1454 0
 1162 0074 0220     		movs	r0, #2
 1163              	.LVL112:
 1164 0076 FCE7     		b	.L79
 1165              	.L93:
 1166              		.align	2
 1167              	.L92:
 1168 0078 00000000 		.word	UART_DMATransmitCplt
 1169 007c 00000000 		.word	UART_DMATxHalfCplt
 1170 0080 00000000 		.word	UART_DMAError
 1171              		.cfi_endproc
 1172              	.LFE340:
 1174              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1175              		.align	1
 1176              		.global	HAL_UART_DMAPause
 1177              		.syntax unified
 1178              		.thumb
 1179              		.thumb_func
 1180              		.fpu fpv4-sp-d16
 1182              	HAL_UART_DMAPause:
 1183              	.LFB342:
1507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1184              		.loc 1 1507 0
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 0
 1187              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 117


 1188              		@ link register save eliminated.
 1189              	.LVL113:
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1190              		.loc 1 1511 0
 1191 0000 0368     		ldr	r3, [r0]
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1192              		.loc 1 1508 0
 1193 0002 D0F88820 		ldr	r2, [r0, #136]
 1194              	.LVL114:
1509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1195              		.loc 1 1509 0
 1196 0006 D0F88C10 		ldr	r1, [r0, #140]
 1197              	.LVL115:
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1198              		.loc 1 1511 0
 1199 000a 9868     		ldr	r0, [r3, #8]
 1200              	.LVL116:
 1201 000c 0006     		lsls	r0, r0, #24
 1202 000e 0DD5     		bpl	.L95
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1203              		.loc 1 1511 0 is_stmt 0 discriminator 1
 1204 0010 212A     		cmp	r2, #33
 1205 0012 0BD1     		bne	.L95
 1206              	.LVL117:
 1207              	.L96:
 1208              	.LBB679:
 1209              	.LBB680:
 1210              	.LBB681:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1211              		.loc 2 1155 0 is_stmt 1 discriminator 1
 1212 0014 03F10802 		add	r2, r3, #8
 1213              	.LVL118:
 1214              		.syntax unified
 1215              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1216 0018 52E8002F 		ldrex r2, [r2]
 1217              	@ 0 "" 2
 1218              	.LVL119:
 1219              		.thumb
 1220              		.syntax unified
 1221              	.LBE681:
 1222              	.LBE680:
1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1223              		.loc 1 1515 0 discriminator 1
 1224 001c 22F08002 		bic	r2, r2, #128
 1225              	.LVL120:
 1226              	.LBB682:
 1227              	.LBB683:
 1228              		.loc 2 1206 0 discriminator 1
 1229 0020 03F1080C 		add	ip, r3, #8
 1230              	.LVL121:
 1231              		.syntax unified
 1232              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1233 0024 4CE80020 		strex r0, r2, [ip]
 1234              	@ 0 "" 2
 1235              	.LVL122:
 1236              		.thumb
 1237              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 118


 1238              	.LBE683:
 1239              	.LBE682:
1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1240              		.loc 1 1515 0 discriminator 1
 1241 0028 0028     		cmp	r0, #0
 1242 002a F3D1     		bne	.L96
 1243              	.LVL123:
 1244              	.L95:
 1245              	.LBE679:
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1246              		.loc 1 1517 0
 1247 002c 9A68     		ldr	r2, [r3, #8]
 1248 002e 5206     		lsls	r2, r2, #25
 1249 0030 21D5     		bpl	.L97
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1250              		.loc 1 1517 0 is_stmt 0 discriminator 1
 1251 0032 2229     		cmp	r1, #34
 1252 0034 1FD1     		bne	.L97
 1253              	.LVL124:
 1254              	.L98:
 1255              	.LBB684:
 1256              	.LBB685:
 1257              	.LBB686:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1258              		.loc 2 1155 0 is_stmt 1 discriminator 1
 1259              		.syntax unified
 1260              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1261 0036 53E8002F 		ldrex r2, [r3]
 1262              	@ 0 "" 2
 1263              	.LVL125:
 1264              		.thumb
 1265              		.syntax unified
 1266              	.LBE686:
 1267              	.LBE685:
1521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1268              		.loc 1 1521 0 discriminator 1
 1269 003a 22F48072 		bic	r2, r2, #256
 1270              	.LVL126:
 1271              	.LBB687:
 1272              	.LBB688:
 1273              		.loc 2 1206 0 discriminator 1
 1274              		.syntax unified
 1275              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1276 003e 43E80021 		strex r1, r2, [r3]
 1277              	@ 0 "" 2
 1278              	.LVL127:
 1279              		.thumb
 1280              		.syntax unified
 1281              	.LBE688:
 1282              	.LBE687:
1521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1283              		.loc 1 1521 0 discriminator 1
 1284 0042 0029     		cmp	r1, #0
 1285 0044 F7D1     		bne	.L98
 1286              	.LVL128:
 1287              	.L99:
 1288              	.LBE684:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 119


 1289              	.LBB689:
 1290              	.LBB690:
 1291              	.LBB691:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1292              		.loc 2 1155 0 discriminator 1
 1293 0046 03F10802 		add	r2, r3, #8
 1294              	.LVL129:
 1295              		.syntax unified
 1296              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1297 004a 52E8002F 		ldrex r2, [r2]
 1298              	@ 0 "" 2
 1299              	.LVL130:
 1300              		.thumb
 1301              		.syntax unified
 1302              	.LBE691:
 1303              	.LBE690:
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1304              		.loc 1 1522 0 discriminator 1
 1305 004e 22F00102 		bic	r2, r2, #1
 1306              	.LVL131:
 1307              	.LBB692:
 1308              	.LBB693:
 1309              		.loc 2 1206 0 discriminator 1
 1310 0052 03F10800 		add	r0, r3, #8
 1311              	.LVL132:
 1312              		.syntax unified
 1313              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1314 0056 40E80021 		strex r1, r2, [r0]
 1315              	@ 0 "" 2
 1316              	.LVL133:
 1317              		.thumb
 1318              		.syntax unified
 1319              	.LBE693:
 1320              	.LBE692:
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1321              		.loc 1 1522 0 discriminator 1
 1322 005a 0029     		cmp	r1, #0
 1323 005c F3D1     		bne	.L99
 1324              	.LVL134:
 1325              	.L100:
 1326              	.LBE689:
 1327              	.LBB694:
 1328              	.LBB695:
 1329              	.LBB696:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1330              		.loc 2 1155 0 discriminator 1
 1331 005e 03F10802 		add	r2, r3, #8
 1332              	.LVL135:
 1333              		.syntax unified
 1334              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1335 0062 52E8002F 		ldrex r2, [r2]
 1336              	@ 0 "" 2
 1337              	.LVL136:
 1338              		.thumb
 1339              		.syntax unified
 1340              	.LBE696:
 1341              	.LBE695:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 120


1525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1342              		.loc 1 1525 0 discriminator 1
 1343 0066 22F04002 		bic	r2, r2, #64
 1344              	.LVL137:
 1345              	.LBB697:
 1346              	.LBB698:
 1347              		.loc 2 1206 0 discriminator 1
 1348 006a 03F10800 		add	r0, r3, #8
 1349              	.LVL138:
 1350              		.syntax unified
 1351              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1352 006e 40E80021 		strex r1, r2, [r0]
 1353              	@ 0 "" 2
 1354              	.LVL139:
 1355              		.thumb
 1356              		.syntax unified
 1357              	.LBE698:
 1358              	.LBE697:
1525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1359              		.loc 1 1525 0 discriminator 1
 1360 0072 0029     		cmp	r1, #0
 1361 0074 F3D1     		bne	.L100
 1362              	.LVL140:
 1363              	.L97:
 1364              	.LBE694:
1529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1365              		.loc 1 1529 0
 1366 0076 0020     		movs	r0, #0
 1367 0078 7047     		bx	lr
 1368              		.cfi_endproc
 1369              	.LFE342:
 1371              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1372              		.align	1
 1373              		.global	HAL_UART_DMAResume
 1374              		.syntax unified
 1375              		.thumb
 1376              		.thumb_func
 1377              		.fpu fpv4-sp-d16
 1379              	HAL_UART_DMAResume:
 1380              	.LFB343:
1537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 1381              		.loc 1 1537 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 0
 1384              		@ frame_needed = 0, uses_anonymous_args = 0
 1385              		@ link register save eliminated.
 1386              	.LVL141:
1538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1387              		.loc 1 1538 0
 1388 0000 D0F88830 		ldr	r3, [r0, #136]
 1389 0004 212B     		cmp	r3, #33
 1390 0006 0BD1     		bne	.L112
 1391              	.L113:
 1392              	.LBB699:
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1393              		.loc 1 1541 0 discriminator 1
 1394 0008 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 121


 1395              	.LVL142:
 1396              	.LBB700:
 1397              	.LBB701:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1398              		.loc 2 1155 0 discriminator 1
 1399 000a 02F10803 		add	r3, r2, #8
 1400              	.LVL143:
 1401              		.syntax unified
 1402              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1403 000e 53E8003F 		ldrex r3, [r3]
 1404              	@ 0 "" 2
 1405              	.LVL144:
 1406              		.thumb
 1407              		.syntax unified
 1408              	.LBE701:
 1409              	.LBE700:
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1410              		.loc 1 1541 0 discriminator 1
 1411 0012 43F08003 		orr	r3, r3, #128
 1412              	.LVL145:
 1413              	.LBB702:
 1414              	.LBB703:
 1415              		.loc 2 1206 0 discriminator 1
 1416 0016 0832     		adds	r2, r2, #8
 1417              	.LVL146:
 1418              		.syntax unified
 1419              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1420 0018 42E80031 		strex r1, r3, [r2]
 1421              	@ 0 "" 2
 1422              	.LVL147:
 1423              		.thumb
 1424              		.syntax unified
 1425              	.LBE703:
 1426              	.LBE702:
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1427              		.loc 1 1541 0 discriminator 1
 1428 001c 0029     		cmp	r1, #0
 1429 001e F3D1     		bne	.L113
 1430              	.LVL148:
 1431              	.L112:
 1432              	.LBE699:
1543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1433              		.loc 1 1543 0
 1434 0020 D0F88C30 		ldr	r3, [r0, #140]
 1435 0024 222B     		cmp	r3, #34
 1436 0026 25D1     		bne	.L114
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1437              		.loc 1 1546 0
 1438 0028 0368     		ldr	r3, [r0]
 1439 002a 0822     		movs	r2, #8
 1440 002c 1A62     		str	r2, [r3, #32]
1549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1441              		.loc 1 1549 0
 1442 002e 0269     		ldr	r2, [r0, #16]
 1443 0030 0368     		ldr	r3, [r0]
 1444 0032 3AB1     		cbz	r2, .L117
 1445              	.L116:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 122


 1446              	.LVL149:
 1447              	.LBB704:
 1448              	.LBB705:
 1449              	.LBB706:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1450              		.loc 2 1155 0 discriminator 1
 1451              		.syntax unified
 1452              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1453 0034 53E8002F 		ldrex r2, [r3]
 1454              	@ 0 "" 2
 1455              	.LVL150:
 1456              		.thumb
 1457              		.syntax unified
 1458              	.LBE706:
 1459              	.LBE705:
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 1460              		.loc 1 1551 0 discriminator 1
 1461 0038 42F48072 		orr	r2, r2, #256
 1462              	.LVL151:
 1463              	.LBB707:
 1464              	.LBB708:
 1465              		.loc 2 1206 0 discriminator 1
 1466              		.syntax unified
 1467              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1468 003c 43E80021 		strex r1, r2, [r3]
 1469              	@ 0 "" 2
 1470              	.LVL152:
 1471              		.thumb
 1472              		.syntax unified
 1473              	.LBE708:
 1474              	.LBE707:
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 1475              		.loc 1 1551 0 discriminator 1
 1476 0040 0029     		cmp	r1, #0
 1477 0042 F7D1     		bne	.L116
 1478              	.LVL153:
 1479              	.L117:
 1480              	.LBE704:
 1481              	.LBB709:
 1482              	.LBB710:
 1483              	.LBB711:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1484              		.loc 2 1155 0 discriminator 1
 1485 0044 03F10802 		add	r2, r3, #8
 1486              	.LVL154:
 1487              		.syntax unified
 1488              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1489 0048 52E8002F 		ldrex r2, [r2]
 1490              	@ 0 "" 2
 1491              	.LVL155:
 1492              		.thumb
 1493              		.syntax unified
 1494              	.LBE711:
 1495              	.LBE710:
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1496              		.loc 1 1553 0 discriminator 1
 1497 004c 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 123


 1498              	.LVL156:
 1499              	.LBB712:
 1500              	.LBB713:
 1501              		.loc 2 1206 0 discriminator 1
 1502 0050 03F10800 		add	r0, r3, #8
 1503              	.LVL157:
 1504              		.syntax unified
 1505              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1506 0054 40E80021 		strex r1, r2, [r0]
 1507              	@ 0 "" 2
 1508              	.LVL158:
 1509              		.thumb
 1510              		.syntax unified
 1511              	.LBE713:
 1512              	.LBE712:
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1513              		.loc 1 1553 0 discriminator 1
 1514 0058 0029     		cmp	r1, #0
 1515 005a F3D1     		bne	.L117
 1516              	.LVL159:
 1517              	.L118:
 1518              	.LBE709:
 1519              	.LBB714:
 1520              	.LBB715:
 1521              	.LBB716:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1522              		.loc 2 1155 0 discriminator 1
 1523 005c 03F10802 		add	r2, r3, #8
 1524              	.LVL160:
 1525              		.syntax unified
 1526              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1527 0060 52E8002F 		ldrex r2, [r2]
 1528              	@ 0 "" 2
 1529              	.LVL161:
 1530              		.thumb
 1531              		.syntax unified
 1532              	.LBE716:
 1533              	.LBE715:
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1534              		.loc 1 1556 0 discriminator 1
 1535 0064 42F04002 		orr	r2, r2, #64
 1536              	.LVL162:
 1537              	.LBB717:
 1538              	.LBB718:
 1539              		.loc 2 1206 0 discriminator 1
 1540 0068 03F10800 		add	r0, r3, #8
 1541              	.LVL163:
 1542              		.syntax unified
 1543              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1544 006c 40E80021 		strex r1, r2, [r0]
 1545              	@ 0 "" 2
 1546              	.LVL164:
 1547              		.thumb
 1548              		.syntax unified
 1549              	.LBE718:
 1550              	.LBE717:
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 124


 1551              		.loc 1 1556 0 discriminator 1
 1552 0070 0029     		cmp	r1, #0
 1553 0072 F3D1     		bne	.L118
 1554              	.LVL165:
 1555              	.L114:
 1556              	.LBE714:
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1557              		.loc 1 1560 0
 1558 0074 0020     		movs	r0, #0
 1559 0076 7047     		bx	lr
 1560              		.cfi_endproc
 1561              	.LFE343:
 1563              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1564              		.align	1
 1565              		.global	HAL_UART_DMAStop
 1566              		.syntax unified
 1567              		.thumb
 1568              		.thumb_func
 1569              		.fpu fpv4-sp-d16
 1571              	HAL_UART_DMAStop:
 1572              	.LFB344:
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1573              		.loc 1 1568 0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 0
 1576              		@ frame_needed = 0, uses_anonymous_args = 0
 1577              	.LVL166:
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1578              		.loc 1 1580 0
 1579 0000 0268     		ldr	r2, [r0]
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1580              		.loc 1 1568 0
 1581 0002 38B5     		push	{r3, r4, r5, lr}
 1582              	.LCFI13:
 1583              		.cfi_def_cfa_offset 16
 1584              		.cfi_offset 3, -16
 1585              		.cfi_offset 4, -12
 1586              		.cfi_offset 5, -8
 1587              		.cfi_offset 14, -4
1576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1588              		.loc 1 1576 0
 1589 0004 D0F88830 		ldr	r3, [r0, #136]
 1590              	.LVL167:
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1591              		.loc 1 1577 0
 1592 0008 D0F88C50 		ldr	r5, [r0, #140]
 1593              	.LVL168:
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1594              		.loc 1 1580 0
 1595 000c 9168     		ldr	r1, [r2, #8]
 1596 000e 0906     		lsls	r1, r1, #24
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1597              		.loc 1 1568 0
 1598 0010 0446     		mov	r4, r0
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1599              		.loc 1 1580 0
 1600 0012 1FD5     		bpl	.L127
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 125


1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1601              		.loc 1 1580 0 is_stmt 0 discriminator 1
 1602 0014 212B     		cmp	r3, #33
 1603 0016 1DD1     		bne	.L127
 1604              	.LVL169:
 1605              	.L128:
 1606              	.LBB719:
 1607              	.LBB720:
 1608              	.LBB721:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1609              		.loc 2 1155 0 is_stmt 1 discriminator 1
 1610 0018 02F10803 		add	r3, r2, #8
 1611              	.LVL170:
 1612              		.syntax unified
 1613              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1614 001c 53E8003F 		ldrex r3, [r3]
 1615              	@ 0 "" 2
 1616              	.LVL171:
 1617              		.thumb
 1618              		.syntax unified
 1619              	.LBE721:
 1620              	.LBE720:
1583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1621              		.loc 1 1583 0 discriminator 1
 1622 0020 23F08003 		bic	r3, r3, #128
 1623              	.LVL172:
 1624              	.LBB722:
 1625              	.LBB723:
 1626              		.loc 2 1206 0 discriminator 1
 1627 0024 02F10800 		add	r0, r2, #8
 1628              	.LVL173:
 1629              		.syntax unified
 1630              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1631 0028 40E80031 		strex r1, r3, [r0]
 1632              	@ 0 "" 2
 1633              	.LVL174:
 1634              		.thumb
 1635              		.syntax unified
 1636              	.LBE723:
 1637              	.LBE722:
1583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1638              		.loc 1 1583 0 discriminator 1
 1639 002c 0029     		cmp	r1, #0
 1640 002e F3D1     		bne	.L128
 1641              	.LBE719:
1586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1642              		.loc 1 1586 0
 1643 0030 E06F     		ldr	r0, [r4, #124]
 1644 0032 60B1     		cbz	r0, .L129
1588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1645              		.loc 1 1588 0
 1646 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1647              	.LVL175:
 1648 0038 48B1     		cbz	r0, .L129
1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1649              		.loc 1 1590 0
 1650 003a E06F     		ldr	r0, [r4, #124]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 126


 1651 003c FFF7FEFF 		bl	HAL_DMA_GetError
 1652              	.LVL176:
 1653 0040 2028     		cmp	r0, #32
 1654 0042 04D1     		bne	.L129
 1655              	.L152:
1617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1656              		.loc 1 1617 0
 1657 0044 1023     		movs	r3, #16
 1658 0046 C4F89030 		str	r3, [r4, #144]
1619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1659              		.loc 1 1619 0
 1660 004a 0320     		movs	r0, #3
 1661              	.L130:
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1662              		.loc 1 1628 0
 1663 004c 38BD     		pop	{r3, r4, r5, pc}
 1664              	.LVL177:
 1665              	.L129:
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1666              		.loc 1 1600 0
 1667 004e 2046     		mov	r0, r4
 1668 0050 FFF7FEFF 		bl	UART_EndTxTransfer
 1669              	.LVL178:
 1670              	.L127:
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1671              		.loc 1 1604 0
 1672 0054 2268     		ldr	r2, [r4]
 1673 0056 9068     		ldr	r0, [r2, #8]
 1674              	.LVL179:
 1675 0058 10F04000 		ands	r0, r0, #64
 1676 005c F6D0     		beq	.L130
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1677              		.loc 1 1604 0 is_stmt 0 discriminator 1
 1678 005e 222D     		cmp	r5, #34
 1679 0060 1AD1     		bne	.L134
 1680              	.L131:
 1681              	.LVL180:
 1682              	.LBB724:
 1683              	.LBB725:
 1684              	.LBB726:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1685              		.loc 2 1155 0 is_stmt 1 discriminator 1
 1686 0062 02F10803 		add	r3, r2, #8
 1687              	.LVL181:
 1688              		.syntax unified
 1689              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1690 0066 53E8003F 		ldrex r3, [r3]
 1691              	@ 0 "" 2
 1692              	.LVL182:
 1693              		.thumb
 1694              		.syntax unified
 1695              	.LBE726:
 1696              	.LBE725:
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1697              		.loc 1 1607 0 discriminator 1
 1698 006a 23F04003 		bic	r3, r3, #64
 1699              	.LVL183:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 127


 1700              	.LBB727:
 1701              	.LBB728:
 1702              		.loc 2 1206 0 discriminator 1
 1703 006e 02F10800 		add	r0, r2, #8
 1704              	.LVL184:
 1705              		.syntax unified
 1706              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1707 0072 40E80031 		strex r1, r3, [r0]
 1708              	@ 0 "" 2
 1709              	.LVL185:
 1710              		.thumb
 1711              		.syntax unified
 1712              	.LBE728:
 1713              	.LBE727:
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1714              		.loc 1 1607 0 discriminator 1
 1715 0076 0029     		cmp	r1, #0
 1716 0078 F3D1     		bne	.L131
 1717              	.LBE724:
1610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1718              		.loc 1 1610 0
 1719 007a D4F88000 		ldr	r0, [r4, #128]
 1720 007e 40B1     		cbz	r0, .L132
1612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1721              		.loc 1 1612 0
 1722 0080 FFF7FEFF 		bl	HAL_DMA_Abort
 1723              	.LVL186:
 1724 0084 28B1     		cbz	r0, .L132
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1725              		.loc 1 1614 0
 1726 0086 D4F88000 		ldr	r0, [r4, #128]
 1727 008a FFF7FEFF 		bl	HAL_DMA_GetError
 1728              	.LVL187:
 1729 008e 2028     		cmp	r0, #32
 1730 0090 D8D0     		beq	.L152
 1731              	.L132:
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1732              		.loc 1 1624 0
 1733 0092 2046     		mov	r0, r4
 1734 0094 FFF7FEFF 		bl	UART_EndRxTransfer
 1735              	.LVL188:
 1736              	.L134:
1627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1737              		.loc 1 1627 0
 1738 0098 0020     		movs	r0, #0
 1739 009a D7E7     		b	.L130
 1740              		.cfi_endproc
 1741              	.LFE344:
 1743              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1744              		.align	1
 1745              		.global	HAL_UART_Abort
 1746              		.syntax unified
 1747              		.thumb
 1748              		.thumb_func
 1749              		.fpu fpv4-sp-d16
 1751              	HAL_UART_Abort:
 1752              	.LFB345:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 128


1643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
 1753              		.loc 1 1643 0
 1754              		.cfi_startproc
 1755              		@ args = 0, pretend = 0, frame = 0
 1756              		@ frame_needed = 0, uses_anonymous_args = 0
 1757              	.LVL189:
 1758 0000 10B5     		push	{r4, lr}
 1759              	.LCFI14:
 1760              		.cfi_def_cfa_offset 8
 1761              		.cfi_offset 4, -8
 1762              		.cfi_offset 14, -4
 1763 0002 0446     		mov	r4, r0
 1764              	.L154:
 1765              	.LBB729:
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
 1766              		.loc 1 1645 0 discriminator 1
 1767 0004 2268     		ldr	r2, [r4]
 1768              	.LVL190:
 1769              	.LBB730:
 1770              	.LBB731:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1771              		.loc 2 1155 0 discriminator 1
 1772              		.syntax unified
 1773              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1774 0006 52E8003F 		ldrex r3, [r2]
 1775              	@ 0 "" 2
 1776              	.LVL191:
 1777              		.thumb
 1778              		.syntax unified
 1779              	.LBE731:
 1780              	.LBE730:
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
 1781              		.loc 1 1645 0 discriminator 1
 1782 000a 23F4F073 		bic	r3, r3, #480
 1783              	.LVL192:
 1784              	.LBB732:
 1785              	.LBB733:
 1786              		.loc 2 1206 0 discriminator 1
 1787              		.syntax unified
 1788              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1789 000e 42E80031 		strex r1, r3, [r2]
 1790              	@ 0 "" 2
 1791              	.LVL193:
 1792              		.thumb
 1793              		.syntax unified
 1794 0012 2368     		ldr	r3, [r4]
 1795              	.LVL194:
 1796              	.LBE733:
 1797              	.LBE732:
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
 1798              		.loc 1 1645 0 discriminator 1
 1799 0014 0029     		cmp	r1, #0
 1800 0016 F5D1     		bne	.L154
 1801              	.LBE729:
 1802              	.LBB734:
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1803              		.loc 1 1647 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 129


 1804 0018 3848     		ldr	r0, .L188
 1805              	.LVL195:
 1806              	.L155:
 1807              	.LBB735:
 1808              	.LBB736:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1809              		.loc 2 1155 0 discriminator 1
 1810 001a 03F10802 		add	r2, r3, #8
 1811              	.LVL196:
 1812              		.syntax unified
 1813              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1814 001e 52E8002F 		ldrex r2, [r2]
 1815              	@ 0 "" 2
 1816              	.LVL197:
 1817              		.thumb
 1818              		.syntax unified
 1819              	.LBE736:
 1820              	.LBE735:
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1821              		.loc 1 1647 0 discriminator 1
 1822 0022 0240     		ands	r2, r2, r0
 1823              	.LVL198:
 1824              	.LBB737:
 1825              	.LBB738:
 1826              		.loc 2 1206 0 discriminator 1
 1827 0024 03F1080C 		add	ip, r3, #8
 1828              	.LVL199:
 1829              		.syntax unified
 1830              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1831 0028 4CE80021 		strex r1, r2, [ip]
 1832              	@ 0 "" 2
 1833              	.LVL200:
 1834              		.thumb
 1835              		.syntax unified
 1836              	.LBE738:
 1837              	.LBE737:
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1838              		.loc 1 1647 0 discriminator 1
 1839 002c 0029     		cmp	r1, #0
 1840 002e F4D1     		bne	.L155
 1841              	.LBE734:
1650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1842              		.loc 1 1650 0
 1843 0030 E26E     		ldr	r2, [r4, #108]
 1844              	.LVL201:
 1845 0032 012A     		cmp	r2, #1
 1846 0034 07D1     		bne	.L156
 1847              	.L157:
 1848              	.LVL202:
 1849              	.LBB739:
 1850              	.LBB740:
 1851              	.LBB741:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1852              		.loc 2 1155 0 discriminator 1
 1853              		.syntax unified
 1854              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1855 0036 53E8002F 		ldrex r2, [r3]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 130


 1856              	@ 0 "" 2
 1857              	.LVL203:
 1858              		.thumb
 1859              		.syntax unified
 1860              	.LBE741:
 1861              	.LBE740:
1652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1862              		.loc 1 1652 0 discriminator 1
 1863 003a 22F01002 		bic	r2, r2, #16
 1864              	.LVL204:
 1865              	.LBB742:
 1866              	.LBB743:
 1867              		.loc 2 1206 0 discriminator 1
 1868              		.syntax unified
 1869              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1870 003e 43E80021 		strex r1, r2, [r3]
 1871              	@ 0 "" 2
 1872              	.LVL205:
 1873              		.thumb
 1874              		.syntax unified
 1875              	.LBE743:
 1876              	.LBE742:
1652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1877              		.loc 1 1652 0 discriminator 1
 1878 0042 0029     		cmp	r1, #0
 1879 0044 F7D1     		bne	.L157
 1880              	.LVL206:
 1881              	.L156:
 1882              	.LBE739:
1656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1883              		.loc 1 1656 0
 1884 0046 9A68     		ldr	r2, [r3, #8]
 1885 0048 1206     		lsls	r2, r2, #24
 1886 004a 1BD5     		bpl	.L158
 1887              	.L159:
 1888              	.LVL207:
 1889              	.LBB744:
 1890              	.LBB745:
 1891              	.LBB746:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1892              		.loc 2 1155 0 discriminator 1
 1893 004c 03F10802 		add	r2, r3, #8
 1894              	.LVL208:
 1895              		.syntax unified
 1896              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1897 0050 52E8002F 		ldrex r2, [r2]
 1898              	@ 0 "" 2
 1899              	.LVL209:
 1900              		.thumb
 1901              		.syntax unified
 1902              	.LBE746:
 1903              	.LBE745:
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1904              		.loc 1 1659 0 discriminator 1
 1905 0054 22F08002 		bic	r2, r2, #128
 1906              	.LVL210:
 1907              	.LBB747:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 131


 1908              	.LBB748:
 1909              		.loc 2 1206 0 discriminator 1
 1910 0058 03F10800 		add	r0, r3, #8
 1911              	.LVL211:
 1912              		.syntax unified
 1913              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1914 005c 40E80021 		strex r1, r2, [r0]
 1915              	@ 0 "" 2
 1916              	.LVL212:
 1917              		.thumb
 1918              		.syntax unified
 1919              	.LBE748:
 1920              	.LBE747:
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1921              		.loc 1 1659 0 discriminator 1
 1922 0060 0029     		cmp	r1, #0
 1923 0062 F3D1     		bne	.L159
 1924              	.LBE744:
1662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1925              		.loc 1 1662 0
 1926 0064 E06F     		ldr	r0, [r4, #124]
 1927 0066 68B1     		cbz	r0, .L158
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1928              		.loc 1 1666 0
 1929 0068 8163     		str	r1, [r0, #56]
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1930              		.loc 1 1668 0
 1931 006a FFF7FEFF 		bl	HAL_DMA_Abort
 1932              	.LVL213:
 1933 006e 48B1     		cbz	r0, .L158
1670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1934              		.loc 1 1670 0
 1935 0070 E06F     		ldr	r0, [r4, #124]
 1936 0072 FFF7FEFF 		bl	HAL_DMA_GetError
 1937              	.LVL214:
 1938 0076 2028     		cmp	r0, #32
 1939 0078 04D1     		bne	.L158
 1940              	.L187:
1699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1941              		.loc 1 1699 0
 1942 007a 1023     		movs	r3, #16
 1943 007c C4F89030 		str	r3, [r4, #144]
1701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1944              		.loc 1 1701 0
 1945 0080 0320     		movs	r0, #3
 1946              	.L160:
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1947              		.loc 1 1731 0
 1948 0082 10BD     		pop	{r4, pc}
 1949              	.LVL215:
 1950              	.L158:
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1951              		.loc 1 1682 0
 1952 0084 2268     		ldr	r2, [r4]
 1953 0086 9368     		ldr	r3, [r2, #8]
 1954 0088 5B06     		lsls	r3, r3, #25
 1955 008a 18D5     		bpl	.L161
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 132


 1956              	.L162:
 1957              	.LVL216:
 1958              	.LBB749:
 1959              	.LBB750:
 1960              	.LBB751:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1961              		.loc 2 1155 0 discriminator 1
 1962 008c 02F10803 		add	r3, r2, #8
 1963              	.LVL217:
 1964              		.syntax unified
 1965              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1966 0090 53E8003F 		ldrex r3, [r3]
 1967              	@ 0 "" 2
 1968              	.LVL218:
 1969              		.thumb
 1970              		.syntax unified
 1971              	.LBE751:
 1972              	.LBE750:
1685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1973              		.loc 1 1685 0 discriminator 1
 1974 0094 23F04003 		bic	r3, r3, #64
 1975              	.LVL219:
 1976              	.LBB752:
 1977              	.LBB753:
 1978              		.loc 2 1206 0 discriminator 1
 1979 0098 02F10800 		add	r0, r2, #8
 1980              	.LVL220:
 1981              		.syntax unified
 1982              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1983 009c 40E80031 		strex r1, r3, [r0]
 1984              	@ 0 "" 2
 1985              	.LVL221:
 1986              		.thumb
 1987              		.syntax unified
 1988              	.LBE753:
 1989              	.LBE752:
1685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1990              		.loc 1 1685 0 discriminator 1
 1991 00a0 0029     		cmp	r1, #0
 1992 00a2 F3D1     		bne	.L162
 1993              	.LBE749:
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1994              		.loc 1 1688 0
 1995 00a4 D4F88000 		ldr	r0, [r4, #128]
 1996 00a8 48B1     		cbz	r0, .L161
1692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1997              		.loc 1 1692 0
 1998 00aa 8163     		str	r1, [r0, #56]
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1999              		.loc 1 1694 0
 2000 00ac FFF7FEFF 		bl	HAL_DMA_Abort
 2001              	.LVL222:
 2002 00b0 28B1     		cbz	r0, .L161
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 2003              		.loc 1 1696 0
 2004 00b2 D4F88000 		ldr	r0, [r4, #128]
 2005 00b6 FFF7FEFF 		bl	HAL_DMA_GetError
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 133


 2006              	.LVL223:
 2007 00ba 2028     		cmp	r0, #32
 2008 00bc DDD0     		beq	.L187
 2009              	.L161:
1708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2010              		.loc 1 1708 0
 2011 00be 0023     		movs	r3, #0
 2012 00c0 A4F85630 		strh	r3, [r4, #86]	@ movhi
1709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2013              		.loc 1 1709 0
 2014 00c4 A4F85E30 		strh	r3, [r4, #94]	@ movhi
1712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2015              		.loc 1 1712 0
 2016 00c8 2368     		ldr	r3, [r4]
 2017 00ca 0F22     		movs	r2, #15
 2018 00cc 1A62     		str	r2, [r3, #32]
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2019              		.loc 1 1715 0
 2020 00ce 626E     		ldr	r2, [r4, #100]
 2021 00d0 B2F1005F 		cmp	r2, #536870912
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2022              		.loc 1 1717 0
 2023 00d4 02BF     		ittt	eq
 2024 00d6 9A69     		ldreq	r2, [r3, #24]
 2025 00d8 42F01002 		orreq	r2, r2, #16
 2026 00dc 9A61     		streq	r2, [r3, #24]
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2027              		.loc 1 1721 0
 2028 00de 9A69     		ldr	r2, [r3, #24]
 2029 00e0 42F00802 		orr	r2, r2, #8
 2030 00e4 9A61     		str	r2, [r3, #24]
1726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2031              		.loc 1 1726 0
 2032 00e6 0020     		movs	r0, #0
1724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2033              		.loc 1 1724 0
 2034 00e8 2023     		movs	r3, #32
 2035 00ea C4F88830 		str	r3, [r4, #136]
1725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2036              		.loc 1 1725 0
 2037 00ee C4F88C30 		str	r3, [r4, #140]
1726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2038              		.loc 1 1726 0
 2039 00f2 E066     		str	r0, [r4, #108]
1728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2040              		.loc 1 1728 0
 2041 00f4 C4F89000 		str	r0, [r4, #144]
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2042              		.loc 1 1730 0
 2043 00f8 C3E7     		b	.L160
 2044              	.L189:
 2045 00fa 00BF     		.align	2
 2046              	.L188:
 2047 00fc FEFF7FEF 		.word	-276824066
 2048              		.cfi_endproc
 2049              	.LFE345:
 2051              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 134


 2052              		.align	1
 2053              		.global	HAL_UART_AbortTransmit
 2054              		.syntax unified
 2055              		.thumb
 2056              		.thumb_func
 2057              		.fpu fpv4-sp-d16
 2059              	HAL_UART_AbortTransmit:
 2060              	.LFB346:
1746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
 2061              		.loc 1 1746 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 0
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 2065              	.LVL224:
 2066 0000 10B5     		push	{r4, lr}
 2067              	.LCFI15:
 2068              		.cfi_def_cfa_offset 8
 2069              		.cfi_offset 4, -8
 2070              		.cfi_offset 14, -4
 2071 0002 0446     		mov	r4, r0
 2072              	.L191:
 2073              	.LBB754:
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 2074              		.loc 1 1748 0 discriminator 1
 2075 0004 2268     		ldr	r2, [r4]
 2076              	.LVL225:
 2077              	.LBB755:
 2078              	.LBB756:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2079              		.loc 2 1155 0 discriminator 1
 2080              		.syntax unified
 2081              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2082 0006 52E8003F 		ldrex r3, [r2]
 2083              	@ 0 "" 2
 2084              	.LVL226:
 2085              		.thumb
 2086              		.syntax unified
 2087              	.LBE756:
 2088              	.LBE755:
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 2089              		.loc 1 1748 0 discriminator 1
 2090 000a 23F0C003 		bic	r3, r3, #192
 2091              	.LVL227:
 2092              	.LBB757:
 2093              	.LBB758:
 2094              		.loc 2 1206 0 discriminator 1
 2095              		.syntax unified
 2096              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2097 000e 42E80031 		strex r1, r3, [r2]
 2098              	@ 0 "" 2
 2099              	.LVL228:
 2100              		.thumb
 2101              		.syntax unified
 2102 0012 2368     		ldr	r3, [r4]
 2103              	.LVL229:
 2104              	.LBE758:
 2105              	.LBE757:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 135


1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 2106              		.loc 1 1748 0 discriminator 1
 2107 0014 0029     		cmp	r1, #0
 2108 0016 F5D1     		bne	.L191
 2109              	.LVL230:
 2110              	.L192:
 2111              	.LBE754:
 2112              	.LBB759:
 2113              	.LBB760:
 2114              	.LBB761:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2115              		.loc 2 1155 0 discriminator 1
 2116 0018 03F10802 		add	r2, r3, #8
 2117              	.LVL231:
 2118              		.syntax unified
 2119              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2120 001c 52E8002F 		ldrex r2, [r2]
 2121              	@ 0 "" 2
 2122              	.LVL232:
 2123              		.thumb
 2124              		.syntax unified
 2125              	.LBE761:
 2126              	.LBE760:
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2127              		.loc 1 1749 0 discriminator 1
 2128 0020 22F40002 		bic	r2, r2, #8388608
 2129              	.LVL233:
 2130              	.LBB762:
 2131              	.LBB763:
 2132              		.loc 2 1206 0 discriminator 1
 2133 0024 03F10800 		add	r0, r3, #8
 2134              	.LVL234:
 2135              		.syntax unified
 2136              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2137 0028 40E80021 		strex r1, r2, [r0]
 2138              	@ 0 "" 2
 2139              	.LVL235:
 2140              		.thumb
 2141              		.syntax unified
 2142              	.LBE763:
 2143              	.LBE762:
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2144              		.loc 1 1749 0 discriminator 1
 2145 002c 0029     		cmp	r1, #0
 2146 002e F3D1     		bne	.L192
 2147              	.LBE759:
1752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2148              		.loc 1 1752 0
 2149 0030 9A68     		ldr	r2, [r3, #8]
 2150              	.LVL236:
 2151 0032 1206     		lsls	r2, r2, #24
 2152 0034 1BD5     		bpl	.L193
 2153              	.L194:
 2154              	.LVL237:
 2155              	.LBB764:
 2156              	.LBB765:
 2157              	.LBB766:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 136


1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2158              		.loc 2 1155 0 discriminator 1
 2159 0036 03F10802 		add	r2, r3, #8
 2160              	.LVL238:
 2161              		.syntax unified
 2162              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2163 003a 52E8002F 		ldrex r2, [r2]
 2164              	@ 0 "" 2
 2165              	.LVL239:
 2166              		.thumb
 2167              		.syntax unified
 2168              	.LBE766:
 2169              	.LBE765:
1755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2170              		.loc 1 1755 0 discriminator 1
 2171 003e 22F08002 		bic	r2, r2, #128
 2172              	.LVL240:
 2173              	.LBB767:
 2174              	.LBB768:
 2175              		.loc 2 1206 0 discriminator 1
 2176 0042 03F10800 		add	r0, r3, #8
 2177              	.LVL241:
 2178              		.syntax unified
 2179              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2180 0046 40E80021 		strex r1, r2, [r0]
 2181              	@ 0 "" 2
 2182              	.LVL242:
 2183              		.thumb
 2184              		.syntax unified
 2185              	.LBE768:
 2186              	.LBE767:
1755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2187              		.loc 1 1755 0 discriminator 1
 2188 004a 0029     		cmp	r1, #0
 2189 004c F3D1     		bne	.L194
 2190              	.LBE764:
1758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2191              		.loc 1 1758 0
 2192 004e E06F     		ldr	r0, [r4, #124]
 2193 0050 68B1     		cbz	r0, .L193
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2194              		.loc 1 1762 0
 2195 0052 8163     		str	r1, [r0, #56]
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 2196              		.loc 1 1764 0
 2197 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2198              	.LVL243:
 2199 0058 48B1     		cbz	r0, .L193
1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 2200              		.loc 1 1766 0
 2201 005a E06F     		ldr	r0, [r4, #124]
 2202 005c FFF7FEFF 		bl	HAL_DMA_GetError
 2203              	.LVL244:
 2204 0060 2028     		cmp	r0, #32
 2205 0062 04D1     		bne	.L193
1769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2206              		.loc 1 1769 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 137


 2207 0064 1023     		movs	r3, #16
 2208 0066 C4F89030 		str	r3, [r4, #144]
1771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 2209              		.loc 1 1771 0
 2210 006a 0320     		movs	r0, #3
 2211              	.L195:
1790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2212              		.loc 1 1790 0
 2213 006c 10BD     		pop	{r4, pc}
 2214              	.LVL245:
 2215              	.L193:
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2216              		.loc 1 1778 0
 2217 006e 0023     		movs	r3, #0
 2218 0070 A4F85630 		strh	r3, [r4, #86]	@ movhi
1781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2219              		.loc 1 1781 0
 2220 0074 636E     		ldr	r3, [r4, #100]
 2221 0076 B3F1005F 		cmp	r3, #536870912
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2222              		.loc 1 1783 0
 2223 007a 01BF     		itttt	eq
 2224 007c 2268     		ldreq	r2, [r4]
 2225 007e 9369     		ldreq	r3, [r2, #24]
 2226 0080 43F01003 		orreq	r3, r3, #16
 2227 0084 9361     		streq	r3, [r2, #24]
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2228              		.loc 1 1787 0
 2229 0086 2023     		movs	r3, #32
 2230 0088 C4F88830 		str	r3, [r4, #136]
1789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2231              		.loc 1 1789 0
 2232 008c 0020     		movs	r0, #0
 2233 008e EDE7     		b	.L195
 2234              		.cfi_endproc
 2235              	.LFE346:
 2237              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2238              		.align	1
 2239              		.global	HAL_UART_AbortReceive
 2240              		.syntax unified
 2241              		.thumb
 2242              		.thumb_func
 2243              		.fpu fpv4-sp-d16
 2245              	HAL_UART_AbortReceive:
 2246              	.LFB347:
1805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
 2247              		.loc 1 1805 0
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 0
 2250              		@ frame_needed = 0, uses_anonymous_args = 0
 2251              	.LVL246:
 2252 0000 10B5     		push	{r4, lr}
 2253              	.LCFI16:
 2254              		.cfi_def_cfa_offset 8
 2255              		.cfi_offset 4, -8
 2256              		.cfi_offset 14, -4
 2257 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 138


 2258              	.L210:
 2259              	.LBB769:
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 2260              		.loc 1 1807 0 discriminator 1
 2261 0004 2268     		ldr	r2, [r4]
 2262              	.LVL247:
 2263              	.LBB770:
 2264              	.LBB771:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2265              		.loc 2 1155 0 discriminator 1
 2266              		.syntax unified
 2267              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2268 0006 52E8003F 		ldrex r3, [r2]
 2269              	@ 0 "" 2
 2270              	.LVL248:
 2271              		.thumb
 2272              		.syntax unified
 2273              	.LBE771:
 2274              	.LBE770:
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 2275              		.loc 1 1807 0 discriminator 1
 2276 000a 23F49073 		bic	r3, r3, #288
 2277              	.LVL249:
 2278              	.LBB772:
 2279              	.LBB773:
 2280              		.loc 2 1206 0 discriminator 1
 2281              		.syntax unified
 2282              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2283 000e 42E80031 		strex r1, r3, [r2]
 2284              	@ 0 "" 2
 2285              	.LVL250:
 2286              		.thumb
 2287              		.syntax unified
 2288 0012 2368     		ldr	r3, [r4]
 2289              	.LVL251:
 2290              	.LBE773:
 2291              	.LBE772:
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 2292              		.loc 1 1807 0 discriminator 1
 2293 0014 0029     		cmp	r1, #0
 2294 0016 F5D1     		bne	.L210
 2295              	.LBE769:
 2296              	.LBB774:
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2297              		.loc 1 1808 0
 2298 0018 2348     		ldr	r0, .L230
 2299              	.LVL252:
 2300              	.L211:
 2301              	.LBB775:
 2302              	.LBB776:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2303              		.loc 2 1155 0 discriminator 1
 2304 001a 03F10802 		add	r2, r3, #8
 2305              	.LVL253:
 2306              		.syntax unified
 2307              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2308 001e 52E8002F 		ldrex r2, [r2]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 139


 2309              	@ 0 "" 2
 2310              	.LVL254:
 2311              		.thumb
 2312              		.syntax unified
 2313              	.LBE776:
 2314              	.LBE775:
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2315              		.loc 1 1808 0 discriminator 1
 2316 0022 0240     		ands	r2, r2, r0
 2317              	.LVL255:
 2318              	.LBB777:
 2319              	.LBB778:
 2320              		.loc 2 1206 0 discriminator 1
 2321 0024 03F1080C 		add	ip, r3, #8
 2322              	.LVL256:
 2323              		.syntax unified
 2324              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2325 0028 4CE80021 		strex r1, r2, [ip]
 2326              	@ 0 "" 2
 2327              	.LVL257:
 2328              		.thumb
 2329              		.syntax unified
 2330              	.LBE778:
 2331              	.LBE777:
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2332              		.loc 1 1808 0 discriminator 1
 2333 002c 0029     		cmp	r1, #0
 2334 002e F4D1     		bne	.L211
 2335              	.LBE774:
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2336              		.loc 1 1811 0
 2337 0030 E26E     		ldr	r2, [r4, #108]
 2338              	.LVL258:
 2339 0032 012A     		cmp	r2, #1
 2340 0034 07D1     		bne	.L212
 2341              	.L213:
 2342              	.LVL259:
 2343              	.LBB779:
 2344              	.LBB780:
 2345              	.LBB781:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2346              		.loc 2 1155 0 discriminator 1
 2347              		.syntax unified
 2348              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2349 0036 53E8002F 		ldrex r2, [r3]
 2350              	@ 0 "" 2
 2351              	.LVL260:
 2352              		.thumb
 2353              		.syntax unified
 2354              	.LBE781:
 2355              	.LBE780:
1813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2356              		.loc 1 1813 0 discriminator 1
 2357 003a 22F01002 		bic	r2, r2, #16
 2358              	.LVL261:
 2359              	.LBB782:
 2360              	.LBB783:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 140


 2361              		.loc 2 1206 0 discriminator 1
 2362              		.syntax unified
 2363              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2364 003e 43E80021 		strex r1, r2, [r3]
 2365              	@ 0 "" 2
 2366              	.LVL262:
 2367              		.thumb
 2368              		.syntax unified
 2369              	.LBE783:
 2370              	.LBE782:
1813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2371              		.loc 1 1813 0 discriminator 1
 2372 0042 0029     		cmp	r1, #0
 2373 0044 F7D1     		bne	.L213
 2374              	.LVL263:
 2375              	.L212:
 2376              	.LBE779:
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2377              		.loc 1 1817 0
 2378 0046 9A68     		ldr	r2, [r3, #8]
 2379 0048 5206     		lsls	r2, r2, #25
 2380 004a 1DD5     		bpl	.L214
 2381              	.L215:
 2382              	.LVL264:
 2383              	.LBB784:
 2384              	.LBB785:
 2385              	.LBB786:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2386              		.loc 2 1155 0 discriminator 1
 2387 004c 03F10802 		add	r2, r3, #8
 2388              	.LVL265:
 2389              		.syntax unified
 2390              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2391 0050 52E8002F 		ldrex r2, [r2]
 2392              	@ 0 "" 2
 2393              	.LVL266:
 2394              		.thumb
 2395              		.syntax unified
 2396              	.LBE786:
 2397              	.LBE785:
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2398              		.loc 1 1820 0 discriminator 1
 2399 0054 22F04002 		bic	r2, r2, #64
 2400              	.LVL267:
 2401              	.LBB787:
 2402              	.LBB788:
 2403              		.loc 2 1206 0 discriminator 1
 2404 0058 03F10800 		add	r0, r3, #8
 2405              	.LVL268:
 2406              		.syntax unified
 2407              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2408 005c 40E80021 		strex r1, r2, [r0]
 2409              	@ 0 "" 2
 2410              	.LVL269:
 2411              		.thumb
 2412              		.syntax unified
 2413              	.LBE788:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 141


 2414              	.LBE787:
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2415              		.loc 1 1820 0 discriminator 1
 2416 0060 0029     		cmp	r1, #0
 2417 0062 F3D1     		bne	.L215
 2418              	.LBE784:
1823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2419              		.loc 1 1823 0
 2420 0064 D4F88000 		ldr	r0, [r4, #128]
 2421 0068 70B1     		cbz	r0, .L214
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2422              		.loc 1 1827 0
 2423 006a 8163     		str	r1, [r0, #56]
1829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 2424              		.loc 1 1829 0
 2425 006c FFF7FEFF 		bl	HAL_DMA_Abort
 2426              	.LVL270:
 2427 0070 50B1     		cbz	r0, .L214
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 2428              		.loc 1 1831 0
 2429 0072 D4F88000 		ldr	r0, [r4, #128]
 2430 0076 FFF7FEFF 		bl	HAL_DMA_GetError
 2431              	.LVL271:
 2432 007a 2028     		cmp	r0, #32
 2433 007c 04D1     		bne	.L214
1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2434              		.loc 1 1834 0
 2435 007e 1023     		movs	r3, #16
 2436 0080 C4F89030 		str	r3, [r4, #144]
1836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 2437              		.loc 1 1836 0
 2438 0084 0320     		movs	r0, #3
 2439              	.L216:
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2440              		.loc 1 1856 0
 2441 0086 10BD     		pop	{r4, pc}
 2442              	.LVL272:
 2443              	.L214:
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2444              		.loc 1 1846 0
 2445 0088 2368     		ldr	r3, [r4]
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2446              		.loc 1 1843 0
 2447 008a 0020     		movs	r0, #0
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2448              		.loc 1 1846 0
 2449 008c 0F22     		movs	r2, #15
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2450              		.loc 1 1843 0
 2451 008e A4F85E00 		strh	r0, [r4, #94]	@ movhi
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2452              		.loc 1 1846 0
 2453 0092 1A62     		str	r2, [r3, #32]
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2454              		.loc 1 1849 0
 2455 0094 9A69     		ldr	r2, [r3, #24]
 2456 0096 42F00802 		orr	r2, r2, #8
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 142


 2457 009a 9A61     		str	r2, [r3, #24]
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2458              		.loc 1 1852 0
 2459 009c 2023     		movs	r3, #32
 2460 009e C4F88C30 		str	r3, [r4, #140]
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2461              		.loc 1 1853 0
 2462 00a2 E066     		str	r0, [r4, #108]
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2463              		.loc 1 1855 0
 2464 00a4 EFE7     		b	.L216
 2465              	.L231:
 2466 00a6 00BF     		.align	2
 2467              	.L230:
 2468 00a8 FEFFFFEF 		.word	-268435458
 2469              		.cfi_endproc
 2470              	.LFE347:
 2472              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2473              		.align	1
 2474              		.weak	HAL_UART_TxCpltCallback
 2475              		.syntax unified
 2476              		.thumb
 2477              		.thumb_func
 2478              		.fpu fpv4-sp-d16
 2480              	HAL_UART_TxCpltCallback:
 2481              	.LFB411:
 2482              		.cfi_startproc
 2483              		@ args = 0, pretend = 0, frame = 0
 2484              		@ frame_needed = 0, uses_anonymous_args = 0
 2485              		@ link register save eliminated.
 2486 0000 7047     		bx	lr
 2487              		.cfi_endproc
 2488              	.LFE411:
 2490              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2491              		.align	1
 2492              		.syntax unified
 2493              		.thumb
 2494              		.thumb_func
 2495              		.fpu fpv4-sp-d16
 2497              	UART_DMATransmitCplt:
 2498              	.LFB380:
3604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2499              		.loc 1 3604 0
 2500              		.cfi_startproc
 2501              		@ args = 0, pretend = 0, frame = 0
 2502              		@ frame_needed = 0, uses_anonymous_args = 0
 2503              	.LVL273:
3608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2504              		.loc 1 3608 0
 2505 0000 0268     		ldr	r2, [r0]
 2506 0002 1268     		ldr	r2, [r2]
 2507 0004 12F02002 		ands	r2, r2, #32
3604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2508              		.loc 1 3604 0
 2509 0008 08B5     		push	{r3, lr}
 2510              	.LCFI17:
 2511              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 143


 2512              		.cfi_offset 3, -8
 2513              		.cfi_offset 14, -4
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2514              		.loc 1 3605 0
 2515 000a 836A     		ldr	r3, [r0, #40]
 2516              	.LVL274:
3608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2517              		.loc 1 3608 0
 2518 000c 17D1     		bne	.L234
3610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2519              		.loc 1 3610 0
 2520 000e A3F85620 		strh	r2, [r3, #86]	@ movhi
 2521              	.LVL275:
 2522              	.L235:
 2523              	.LBB789:
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2524              		.loc 1 3614 0 discriminator 1
 2525 0012 1968     		ldr	r1, [r3]
 2526              	.LVL276:
 2527              	.LBB790:
 2528              	.LBB791:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2529              		.loc 2 1155 0 discriminator 1
 2530 0014 01F10802 		add	r2, r1, #8
 2531              	.LVL277:
 2532              		.syntax unified
 2533              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2534 0018 52E8002F 		ldrex r2, [r2]
 2535              	@ 0 "" 2
 2536              	.LVL278:
 2537              		.thumb
 2538              		.syntax unified
 2539              	.LBE791:
 2540              	.LBE790:
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2541              		.loc 1 3614 0 discriminator 1
 2542 001c 22F08002 		bic	r2, r2, #128
 2543              	.LVL279:
 2544              	.LBB792:
 2545              	.LBB793:
 2546              		.loc 2 1206 0 discriminator 1
 2547 0020 0831     		adds	r1, r1, #8
 2548              	.LVL280:
 2549              		.syntax unified
 2550              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2551 0022 41E80020 		strex r0, r2, [r1]
 2552              	@ 0 "" 2
 2553              	.LVL281:
 2554              		.thumb
 2555              		.syntax unified
 2556 0026 1A68     		ldr	r2, [r3]
 2557              	.LVL282:
 2558              	.LBE793:
 2559              	.LBE792:
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2560              		.loc 1 3614 0 discriminator 1
 2561 0028 0028     		cmp	r0, #0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 144


 2562 002a F2D1     		bne	.L235
 2563              	.LVL283:
 2564              	.L236:
 2565              	.LBE789:
 2566              	.LBB794:
 2567              	.LBB795:
 2568              	.LBB796:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2569              		.loc 2 1155 0 discriminator 1
 2570              		.syntax unified
 2571              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2572 002c 52E8003F 		ldrex r3, [r2]
 2573              	@ 0 "" 2
 2574              	.LVL284:
 2575              		.thumb
 2576              		.syntax unified
 2577              	.LBE796:
 2578              	.LBE795:
3617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2579              		.loc 1 3617 0 discriminator 1
 2580 0030 43F04003 		orr	r3, r3, #64
 2581              	.LVL285:
 2582              	.LBB797:
 2583              	.LBB798:
 2584              		.loc 2 1206 0 discriminator 1
 2585              		.syntax unified
 2586              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2587 0034 42E80031 		strex r1, r3, [r2]
 2588              	@ 0 "" 2
 2589              	.LVL286:
 2590              		.thumb
 2591              		.syntax unified
 2592              	.LBE798:
 2593              	.LBE797:
3617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2594              		.loc 1 3617 0 discriminator 1
 2595 0038 0029     		cmp	r1, #0
 2596 003a F7D1     		bne	.L236
 2597              	.LVL287:
 2598              	.L233:
 2599              	.LBE794:
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2600              		.loc 1 3630 0
 2601 003c 08BD     		pop	{r3, pc}
 2602              	.LVL288:
 2603              	.L234:
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2604              		.loc 1 3627 0
 2605 003e 1846     		mov	r0, r3
 2606              	.LVL289:
 2607 0040 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2608              	.LVL290:
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2609              		.loc 1 3630 0
 2610 0044 FAE7     		b	.L233
 2611              		.cfi_endproc
 2612              	.LFE380:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 145


 2614              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2615              		.align	1
 2616              		.weak	HAL_UART_TxHalfCpltCallback
 2617              		.syntax unified
 2618              		.thumb
 2619              		.thumb_func
 2620              		.fpu fpv4-sp-d16
 2622              	HAL_UART_TxHalfCpltCallback:
 2623              	.LFB409:
 2624              		.cfi_startproc
 2625              		@ args = 0, pretend = 0, frame = 0
 2626              		@ frame_needed = 0, uses_anonymous_args = 0
 2627              		@ link register save eliminated.
 2628 0000 7047     		bx	lr
 2629              		.cfi_endproc
 2630              	.LFE409:
 2632              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2633              		.align	1
 2634              		.syntax unified
 2635              		.thumb
 2636              		.thumb_func
 2637              		.fpu fpv4-sp-d16
 2639              	UART_DMATxHalfCplt:
 2640              	.LFB381:
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2641              		.loc 1 3638 0
 2642              		.cfi_startproc
 2643              		@ args = 0, pretend = 0, frame = 0
 2644              		@ frame_needed = 0, uses_anonymous_args = 0
 2645              	.LVL291:
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2646              		.loc 1 3638 0
 2647 0000 08B5     		push	{r3, lr}
 2648              	.LCFI18:
 2649              		.cfi_def_cfa_offset 8
 2650              		.cfi_offset 3, -8
 2651              		.cfi_offset 14, -4
3646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2652              		.loc 1 3646 0
 2653 0002 806A     		ldr	r0, [r0, #40]
 2654              	.LVL292:
 2655 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2656              	.LVL293:
3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2657              		.loc 1 3648 0
 2658 0008 08BD     		pop	{r3, pc}
 2659              		.cfi_endproc
 2660              	.LFE381:
 2662              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2663              		.align	1
 2664              		.weak	HAL_UART_RxCpltCallback
 2665              		.syntax unified
 2666              		.thumb
 2667              		.thumb_func
 2668              		.fpu fpv4-sp-d16
 2670              	HAL_UART_RxCpltCallback:
 2671              	.LFB415:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 146


 2672              		.cfi_startproc
 2673              		@ args = 0, pretend = 0, frame = 0
 2674              		@ frame_needed = 0, uses_anonymous_args = 0
 2675              		@ link register save eliminated.
 2676 0000 7047     		bx	lr
 2677              		.cfi_endproc
 2678              	.LFE415:
 2680              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2681              		.align	1
 2682              		.weak	HAL_UART_RxHalfCpltCallback
 2683              		.syntax unified
 2684              		.thumb
 2685              		.thumb_func
 2686              		.fpu fpv4-sp-d16
 2688              	HAL_UART_RxHalfCpltCallback:
 2689              	.LFB413:
 2690              		.cfi_startproc
 2691              		@ args = 0, pretend = 0, frame = 0
 2692              		@ frame_needed = 0, uses_anonymous_args = 0
 2693              		@ link register save eliminated.
 2694 0000 7047     		bx	lr
 2695              		.cfi_endproc
 2696              	.LFE413:
 2698              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2699              		.align	1
 2700              		.weak	HAL_UART_ErrorCallback
 2701              		.syntax unified
 2702              		.thumb
 2703              		.thumb_func
 2704              		.fpu fpv4-sp-d16
 2706              	HAL_UART_ErrorCallback:
 2707              	.LFB417:
 2708              		.cfi_startproc
 2709              		@ args = 0, pretend = 0, frame = 0
 2710              		@ frame_needed = 0, uses_anonymous_args = 0
 2711              		@ link register save eliminated.
 2712 0000 7047     		bx	lr
 2713              		.cfi_endproc
 2714              	.LFE417:
 2716              		.section	.text.UART_DMAError,"ax",%progbits
 2717              		.align	1
 2718              		.syntax unified
 2719              		.thumb
 2720              		.thumb_func
 2721              		.fpu fpv4-sp-d16
 2723              	UART_DMAError:
 2724              	.LFB384:
3755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2725              		.loc 1 3755 0
 2726              		.cfi_startproc
 2727              		@ args = 0, pretend = 0, frame = 0
 2728              		@ frame_needed = 0, uses_anonymous_args = 0
 2729              	.LVL294:
3755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2730              		.loc 1 3755 0
 2731 0000 38B5     		push	{r3, r4, r5, lr}
 2732              	.LCFI19:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 147


 2733              		.cfi_def_cfa_offset 16
 2734              		.cfi_offset 3, -16
 2735              		.cfi_offset 4, -12
 2736              		.cfi_offset 5, -8
 2737              		.cfi_offset 14, -4
3756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2738              		.loc 1 3756 0
 2739 0002 846A     		ldr	r4, [r0, #40]
 2740              	.LVL295:
3762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2741              		.loc 1 3762 0
 2742 0004 2268     		ldr	r2, [r4]
3758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2743              		.loc 1 3758 0
 2744 0006 D4F88830 		ldr	r3, [r4, #136]
 2745              	.LVL296:
3759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2746              		.loc 1 3759 0
 2747 000a D4F88C50 		ldr	r5, [r4, #140]
 2748              	.LVL297:
3762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2749              		.loc 1 3762 0
 2750 000e 9268     		ldr	r2, [r2, #8]
 2751 0010 1206     		lsls	r2, r2, #24
 2752 0012 07D5     		bpl	.L246
3762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2753              		.loc 1 3762 0 is_stmt 0 discriminator 1
 2754 0014 212B     		cmp	r3, #33
 2755 0016 05D1     		bne	.L246
3765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2756              		.loc 1 3765 0 is_stmt 1
 2757 0018 0023     		movs	r3, #0
 2758              	.LVL298:
 2759 001a A4F85630 		strh	r3, [r4, #86]	@ movhi
3766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2760              		.loc 1 3766 0
 2761 001e 2046     		mov	r0, r4
 2762              	.LVL299:
 2763 0020 FFF7FEFF 		bl	UART_EndTxTransfer
 2764              	.LVL300:
 2765              	.L246:
3770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2766              		.loc 1 3770 0
 2767 0024 2368     		ldr	r3, [r4]
 2768 0026 9B68     		ldr	r3, [r3, #8]
 2769 0028 5B06     		lsls	r3, r3, #25
 2770 002a 07D5     		bpl	.L247
3770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2771              		.loc 1 3770 0 is_stmt 0 discriminator 1
 2772 002c 222D     		cmp	r5, #34
 2773 002e 05D1     		bne	.L247
3773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2774              		.loc 1 3773 0 is_stmt 1
 2775 0030 0023     		movs	r3, #0
 2776 0032 A4F85E30 		strh	r3, [r4, #94]	@ movhi
3774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2777              		.loc 1 3774 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 148


 2778 0036 2046     		mov	r0, r4
 2779 0038 FFF7FEFF 		bl	UART_EndRxTransfer
 2780              	.LVL301:
 2781              	.L247:
3777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2782              		.loc 1 3777 0
 2783 003c D4F89030 		ldr	r3, [r4, #144]
 2784 0040 43F01003 		orr	r3, r3, #16
 2785 0044 C4F89030 		str	r3, [r4, #144]
3784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2786              		.loc 1 3784 0
 2787 0048 2046     		mov	r0, r4
 2788 004a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2789              	.LVL302:
3786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2790              		.loc 1 3786 0
 2791 004e 38BD     		pop	{r3, r4, r5, pc}
 2792              		.cfi_endproc
 2793              	.LFE384:
 2795              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2796              		.align	1
 2797              		.syntax unified
 2798              		.thumb
 2799              		.thumb_func
 2800              		.fpu fpv4-sp-d16
 2802              	UART_DMAAbortOnError:
 2803              	.LFB385:
3795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2804              		.loc 1 3795 0
 2805              		.cfi_startproc
 2806              		@ args = 0, pretend = 0, frame = 0
 2807              		@ frame_needed = 0, uses_anonymous_args = 0
 2808              	.LVL303:
 2809 0000 08B5     		push	{r3, lr}
 2810              	.LCFI20:
 2811              		.cfi_def_cfa_offset 8
 2812              		.cfi_offset 3, -8
 2813              		.cfi_offset 14, -4
3796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2814              		.loc 1 3796 0
 2815 0002 806A     		ldr	r0, [r0, #40]
 2816              	.LVL304:
3797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2817              		.loc 1 3797 0
 2818 0004 0023     		movs	r3, #0
 2819 0006 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2820              		.loc 1 3798 0
 2821 000a A0F85630 		strh	r3, [r0, #86]	@ movhi
3805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2822              		.loc 1 3805 0
 2823 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2824              	.LVL305:
3807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2825              		.loc 1 3807 0
 2826 0012 08BD     		pop	{r3, pc}
 2827              		.cfi_endproc
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 149


 2828              	.LFE385:
 2830              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2831              		.align	1
 2832              		.weak	HAL_UART_AbortCpltCallback
 2833              		.syntax unified
 2834              		.thumb
 2835              		.thumb_func
 2836              		.fpu fpv4-sp-d16
 2838              	HAL_UART_AbortCpltCallback:
 2839              	.LFB419:
 2840              		.cfi_startproc
 2841              		@ args = 0, pretend = 0, frame = 0
 2842              		@ frame_needed = 0, uses_anonymous_args = 0
 2843              		@ link register save eliminated.
 2844 0000 7047     		bx	lr
 2845              		.cfi_endproc
 2846              	.LFE419:
 2848              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2849              		.align	1
 2850              		.global	HAL_UART_Abort_IT
 2851              		.syntax unified
 2852              		.thumb
 2853              		.thumb_func
 2854              		.fpu fpv4-sp-d16
 2856              	HAL_UART_Abort_IT:
 2857              	.LFB348:
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2858              		.loc 1 1873 0
 2859              		.cfi_startproc
 2860              		@ args = 0, pretend = 0, frame = 0
 2861              		@ frame_needed = 0, uses_anonymous_args = 0
 2862              	.LVL306:
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2863              		.loc 1 1873 0
 2864 0000 70B5     		push	{r4, r5, r6, lr}
 2865              	.LCFI21:
 2866              		.cfi_def_cfa_offset 16
 2867              		.cfi_offset 4, -16
 2868              		.cfi_offset 5, -12
 2869              		.cfi_offset 6, -8
 2870              		.cfi_offset 14, -4
 2871 0002 0446     		mov	r4, r0
 2872              	.LVL307:
 2873              	.L257:
 2874              	.LBB799:
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE));
 2875              		.loc 1 1877 0 discriminator 1
 2876 0004 2268     		ldr	r2, [r4]
 2877              	.LVL308:
 2878              	.LBB800:
 2879              	.LBB801:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2880              		.loc 2 1155 0 discriminator 1
 2881              		.syntax unified
 2882              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2883 0006 52E8003F 		ldrex r3, [r2]
 2884              	@ 0 "" 2
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 150


 2885              	.LVL309:
 2886              		.thumb
 2887              		.syntax unified
 2888              	.LBE801:
 2889              	.LBE800:
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE));
 2890              		.loc 1 1877 0 discriminator 1
 2891 000a 23F4F073 		bic	r3, r3, #480
 2892              	.LVL310:
 2893              	.LBB802:
 2894              	.LBB803:
 2895              		.loc 2 1206 0 discriminator 1
 2896              		.syntax unified
 2897              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2898 000e 42E80031 		strex r1, r3, [r2]
 2899              	@ 0 "" 2
 2900              	.LVL311:
 2901              		.thumb
 2902              		.syntax unified
 2903 0012 2368     		ldr	r3, [r4]
 2904              	.LVL312:
 2905              	.LBE803:
 2906              	.LBE802:
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE));
 2907              		.loc 1 1877 0 discriminator 1
 2908 0014 0029     		cmp	r1, #0
 2909 0016 F5D1     		bne	.L257
 2910              	.LBE799:
 2911              	.LBB804:
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2912              		.loc 1 1879 0
 2913 0018 4148     		ldr	r0, .L300
 2914              	.LVL313:
 2915              	.L258:
 2916              	.LBB805:
 2917              	.LBB806:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2918              		.loc 2 1155 0 discriminator 1
 2919 001a 03F10802 		add	r2, r3, #8
 2920              	.LVL314:
 2921              		.syntax unified
 2922              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2923 001e 52E8002F 		ldrex r2, [r2]
 2924              	@ 0 "" 2
 2925              	.LVL315:
 2926              		.thumb
 2927              		.syntax unified
 2928              	.LBE806:
 2929              	.LBE805:
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2930              		.loc 1 1879 0 discriminator 1
 2931 0022 0240     		ands	r2, r2, r0
 2932              	.LVL316:
 2933              	.LBB807:
 2934              	.LBB808:
 2935              		.loc 2 1206 0 discriminator 1
 2936 0024 03F10805 		add	r5, r3, #8
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 151


 2937              	.LVL317:
 2938              		.syntax unified
 2939              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2940 0028 45E80021 		strex r1, r2, [r5]
 2941              	@ 0 "" 2
 2942              	.LVL318:
 2943              		.thumb
 2944              		.syntax unified
 2945              	.LBE808:
 2946              	.LBE807:
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2947              		.loc 1 1879 0 discriminator 1
 2948 002c 0029     		cmp	r1, #0
 2949 002e F4D1     		bne	.L258
 2950              	.LBE804:
1882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2951              		.loc 1 1882 0
 2952 0030 E26E     		ldr	r2, [r4, #108]
 2953              	.LVL319:
 2954 0032 012A     		cmp	r2, #1
 2955 0034 07D1     		bne	.L259
 2956              	.L260:
 2957              	.LVL320:
 2958              	.LBB809:
 2959              	.LBB810:
 2960              	.LBB811:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2961              		.loc 2 1155 0 discriminator 1
 2962              		.syntax unified
 2963              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2964 0036 53E8002F 		ldrex r2, [r3]
 2965              	@ 0 "" 2
 2966              	.LVL321:
 2967              		.thumb
 2968              		.syntax unified
 2969              	.LBE811:
 2970              	.LBE810:
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2971              		.loc 1 1884 0 discriminator 1
 2972 003a 22F01002 		bic	r2, r2, #16
 2973              	.LVL322:
 2974              	.LBB812:
 2975              	.LBB813:
 2976              		.loc 2 1206 0 discriminator 1
 2977              		.syntax unified
 2978              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2979 003e 43E80021 		strex r1, r2, [r3]
 2980              	@ 0 "" 2
 2981              	.LVL323:
 2982              		.thumb
 2983              		.syntax unified
 2984              	.LBE813:
 2985              	.LBE812:
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2986              		.loc 1 1884 0 discriminator 1
 2987 0042 0029     		cmp	r1, #0
 2988 0044 F7D1     		bne	.L260
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 152


 2989              	.LVL324:
 2990              	.L259:
 2991              	.LBE809:
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2992              		.loc 1 1890 0
 2993 0046 E06F     		ldr	r0, [r4, #124]
 2994 0048 28B1     		cbz	r0, .L261
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2995              		.loc 1 1894 0
 2996 004a 9A68     		ldr	r2, [r3, #8]
 2997 004c 12F08002 		ands	r2, r2, #128
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2998              		.loc 1 1896 0
 2999 0050 18BF     		it	ne
 3000 0052 344A     		ldrne	r2, .L300+4
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3001              		.loc 1 1900 0
 3002 0054 8263     		str	r2, [r0, #56]
 3003              	.L261:
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3004              		.loc 1 1904 0
 3005 0056 D4F88010 		ldr	r1, [r4, #128]
 3006 005a 29B1     		cbz	r1, .L263
1908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3007              		.loc 1 1908 0
 3008 005c 9A68     		ldr	r2, [r3, #8]
 3009 005e 12F04002 		ands	r2, r2, #64
1910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3010              		.loc 1 1910 0
 3011 0062 18BF     		it	ne
 3012 0064 304A     		ldrne	r2, .L300+8
1914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3013              		.loc 1 1914 0
 3014 0066 8A63     		str	r2, [r1, #56]
 3015              	.L263:
1919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3016              		.loc 1 1919 0
 3017 0068 9A68     		ldr	r2, [r3, #8]
 3018 006a 1206     		lsls	r2, r2, #24
 3019 006c 3ED4     		bmi	.L265
 3020              	.L299:
1874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3021              		.loc 1 1874 0
 3022 006e 0125     		movs	r5, #1
 3023              	.L266:
 3024              	.LVL325:
1943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3025              		.loc 1 1943 0
 3026 0070 2268     		ldr	r2, [r4]
 3027 0072 9368     		ldr	r3, [r2, #8]
 3028 0074 5B06     		lsls	r3, r3, #25
 3029 0076 4ED5     		bpl	.L268
 3030              	.L269:
 3031              	.LVL326:
 3032              	.LBB814:
 3033              	.LBB815:
 3034              	.LBB816:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 153


1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3035              		.loc 2 1155 0 discriminator 1
 3036 0078 02F10803 		add	r3, r2, #8
 3037              	.LVL327:
 3038              		.syntax unified
 3039              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3040 007c 53E8003F 		ldrex r3, [r3]
 3041              	@ 0 "" 2
 3042              	.LVL328:
 3043              		.thumb
 3044              		.syntax unified
 3045              	.LBE816:
 3046              	.LBE815:
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3047              		.loc 1 1946 0 discriminator 1
 3048 0080 23F04003 		bic	r3, r3, #64
 3049              	.LVL329:
 3050              	.LBB817:
 3051              	.LBB818:
 3052              		.loc 2 1206 0 discriminator 1
 3053 0084 02F10801 		add	r1, r2, #8
 3054              	.LVL330:
 3055              		.syntax unified
 3056              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3057 0088 41E80036 		strex r6, r3, [r1]
 3058              	@ 0 "" 2
 3059              	.LVL331:
 3060              		.thumb
 3061              		.syntax unified
 3062              	.LBE818:
 3063              	.LBE817:
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3064              		.loc 1 1946 0 discriminator 1
 3065 008c 002E     		cmp	r6, #0
 3066 008e F3D1     		bne	.L269
 3067              	.LBE814:
1949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3068              		.loc 1 1949 0
 3069 0090 D4F88000 		ldr	r0, [r4, #128]
 3070 0094 0028     		cmp	r0, #0
 3071 0096 3ED0     		beq	.L268
1955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3072              		.loc 1 1955 0
 3073 0098 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3074              	.LVL332:
 3075 009c 0028     		cmp	r0, #0
 3076 009e 3CD0     		beq	.L271
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 1U;
 3077              		.loc 1 1957 0
 3078 00a0 D4F88030 		ldr	r3, [r4, #128]
 3079 00a4 9E63     		str	r6, [r3, #56]
 3080              	.LVL333:
 3081              	.L272:
1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3082              		.loc 1 1971 0
 3083 00a6 0023     		movs	r3, #0
 3084 00a8 A4F85630 		strh	r3, [r4, #86]	@ movhi
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 154


1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3085              		.loc 1 1976 0
 3086 00ac C4E91D33 		strd	r3, r3, [r4, #116]
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3087              		.loc 1 1972 0
 3088 00b0 A4F85E30 		strh	r3, [r4, #94]	@ movhi
1979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3089              		.loc 1 1979 0
 3090 00b4 C4F89030 		str	r3, [r4, #144]
1982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3091              		.loc 1 1982 0
 3092 00b8 2368     		ldr	r3, [r4]
 3093 00ba 0F22     		movs	r2, #15
 3094 00bc 1A62     		str	r2, [r3, #32]
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3095              		.loc 1 1985 0
 3096 00be 626E     		ldr	r2, [r4, #100]
 3097 00c0 B2F1005F 		cmp	r2, #536870912
1987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3098              		.loc 1 1987 0
 3099 00c4 02BF     		ittt	eq
 3100 00c6 9A69     		ldreq	r2, [r3, #24]
 3101 00c8 42F01002 		orreq	r2, r2, #16
 3102 00cc 9A61     		streq	r2, [r3, #24]
1991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3103              		.loc 1 1991 0
 3104 00ce 9A69     		ldr	r2, [r3, #24]
 3105 00d0 42F00802 		orr	r2, r2, #8
 3106 00d4 9A61     		str	r2, [r3, #24]
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3107              		.loc 1 1994 0
 3108 00d6 2023     		movs	r3, #32
 3109 00d8 C4F88830 		str	r3, [r4, #136]
1995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3110              		.loc 1 1995 0
 3111 00dc C4F88C30 		str	r3, [r4, #140]
1996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3112              		.loc 1 1996 0
 3113 00e0 0023     		movs	r3, #0
 3114 00e2 E366     		str	r3, [r4, #108]
2004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3115              		.loc 1 2004 0
 3116 00e4 2046     		mov	r0, r4
 3117 00e6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3118              	.LVL334:
 3119 00ea 16E0     		b	.L271
 3120              	.LVL335:
 3121              	.L265:
 3122              	.LBB819:
 3123              	.LBB820:
 3124              	.LBB821:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3125              		.loc 2 1155 0 discriminator 1
 3126 00ec 03F10802 		add	r2, r3, #8
 3127              	.LVL336:
 3128              		.syntax unified
 3129              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 155


 3130 00f0 52E8002F 		ldrex r2, [r2]
 3131              	@ 0 "" 2
 3132              	.LVL337:
 3133              		.thumb
 3134              		.syntax unified
 3135              	.LBE821:
 3136              	.LBE820:
1922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3137              		.loc 1 1922 0 discriminator 1
 3138 00f4 22F08002 		bic	r2, r2, #128
 3139              	.LVL338:
 3140              	.LBB822:
 3141              	.LBB823:
 3142              		.loc 2 1206 0 discriminator 1
 3143 00f8 03F10801 		add	r1, r3, #8
 3144              	.LVL339:
 3145              		.syntax unified
 3146              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3147 00fc 41E80025 		strex r5, r2, [r1]
 3148              	@ 0 "" 2
 3149              	.LVL340:
 3150              		.thumb
 3151              		.syntax unified
 3152              	.LBE823:
 3153              	.LBE822:
1922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3154              		.loc 1 1922 0 discriminator 1
 3155 0100 002D     		cmp	r5, #0
 3156 0102 F3D1     		bne	.L265
 3157              	.LBE819:
1925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3158              		.loc 1 1925 0
 3159 0104 0028     		cmp	r0, #0
 3160 0106 B2D0     		beq	.L299
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3161              		.loc 1 1931 0
 3162 0108 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3163              	.LVL341:
 3164 010c 0028     		cmp	r0, #0
 3165 010e AFD0     		beq	.L266
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3166              		.loc 1 1933 0
 3167 0110 E36F     		ldr	r3, [r4, #124]
 3168 0112 9D63     		str	r5, [r3, #56]
 3169 0114 ABE7     		b	.L299
 3170              	.LVL342:
 3171              	.L268:
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3172              		.loc 1 1968 0
 3173 0116 012D     		cmp	r5, #1
 3174 0118 C5D0     		beq	.L272
 3175              	.LVL343:
 3176              	.L271:
2009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3177              		.loc 1 2009 0
 3178 011a 0020     		movs	r0, #0
 3179 011c 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 156


 3180              	.LVL344:
 3181              	.L301:
 3182 011e 00BF     		.align	2
 3183              	.L300:
 3184 0120 FEFF7FEF 		.word	-276824066
 3185 0124 00000000 		.word	UART_DMATxAbortCallback
 3186 0128 00000000 		.word	UART_DMARxAbortCallback
 3187              		.cfi_endproc
 3188              	.LFE348:
 3190              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3191              		.align	1
 3192              		.syntax unified
 3193              		.thumb
 3194              		.thumb_func
 3195              		.fpu fpv4-sp-d16
 3197              	UART_DMARxAbortCallback:
 3198              	.LFB387:
3873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3199              		.loc 1 3873 0
 3200              		.cfi_startproc
 3201              		@ args = 0, pretend = 0, frame = 0
 3202              		@ frame_needed = 0, uses_anonymous_args = 0
 3203              	.LVL345:
3874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3204              		.loc 1 3874 0
 3205 0000 806A     		ldr	r0, [r0, #40]
 3206              	.LVL346:
3876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3207              		.loc 1 3876 0
 3208 0002 D0F88020 		ldr	r2, [r0, #128]
3873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3209              		.loc 1 3873 0
 3210 0006 08B5     		push	{r3, lr}
 3211              	.LCFI22:
 3212              		.cfi_def_cfa_offset 8
 3213              		.cfi_offset 3, -8
 3214              		.cfi_offset 14, -4
3876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3215              		.loc 1 3876 0
 3216 0008 0023     		movs	r3, #0
 3217 000a 9363     		str	r3, [r2, #56]
3879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3218              		.loc 1 3879 0
 3219 000c C26F     		ldr	r2, [r0, #124]
 3220 000e 0AB1     		cbz	r2, .L303
3881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3221              		.loc 1 3881 0
 3222 0010 926B     		ldr	r2, [r2, #56]
 3223 0012 A2B9     		cbnz	r2, .L302
 3224              	.L303:
3895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3225              		.loc 1 3895 0
 3226 0014 0268     		ldr	r2, [r0]
3888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3227              		.loc 1 3888 0
 3228 0016 A0F85630 		strh	r3, [r0, #86]	@ movhi
3895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 157


 3229              		.loc 1 3895 0
 3230 001a 0F21     		movs	r1, #15
3889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3231              		.loc 1 3889 0
 3232 001c A0F85E30 		strh	r3, [r0, #94]	@ movhi
3892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3233              		.loc 1 3892 0
 3234 0020 C0F89030 		str	r3, [r0, #144]
3895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3235              		.loc 1 3895 0
 3236 0024 1162     		str	r1, [r2, #32]
3898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3237              		.loc 1 3898 0
 3238 0026 9169     		ldr	r1, [r2, #24]
 3239 0028 41F00801 		orr	r1, r1, #8
 3240 002c 9161     		str	r1, [r2, #24]
3901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3241              		.loc 1 3901 0
 3242 002e 2022     		movs	r2, #32
 3243 0030 C0F88820 		str	r2, [r0, #136]
3902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3244              		.loc 1 3902 0
 3245 0034 C0F88C20 		str	r2, [r0, #140]
3903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3246              		.loc 1 3903 0
 3247 0038 C366     		str	r3, [r0, #108]
3911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3248              		.loc 1 3911 0
 3249 003a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3250              	.LVL347:
 3251              	.L302:
3913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3252              		.loc 1 3913 0
 3253 003e 08BD     		pop	{r3, pc}
 3254              		.cfi_endproc
 3255              	.LFE387:
 3257              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3258              		.align	1
 3259              		.syntax unified
 3260              		.thumb
 3261              		.thumb_func
 3262              		.fpu fpv4-sp-d16
 3264              	UART_DMATxAbortCallback:
 3265              	.LFB386:
3818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3266              		.loc 1 3818 0
 3267              		.cfi_startproc
 3268              		@ args = 0, pretend = 0, frame = 0
 3269              		@ frame_needed = 0, uses_anonymous_args = 0
 3270              	.LVL348:
3819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3271              		.loc 1 3819 0
 3272 0000 806A     		ldr	r0, [r0, #40]
 3273              	.LVL349:
3821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3274              		.loc 1 3821 0
 3275 0002 C26F     		ldr	r2, [r0, #124]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 158


3818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3276              		.loc 1 3818 0
 3277 0004 08B5     		push	{r3, lr}
 3278              	.LCFI23:
 3279              		.cfi_def_cfa_offset 8
 3280              		.cfi_offset 3, -8
 3281              		.cfi_offset 14, -4
3821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3282              		.loc 1 3821 0
 3283 0006 0023     		movs	r3, #0
 3284 0008 9363     		str	r3, [r2, #56]
3824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3285              		.loc 1 3824 0
 3286 000a D0F88020 		ldr	r2, [r0, #128]
 3287 000e 0AB1     		cbz	r2, .L309
3826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3288              		.loc 1 3826 0
 3289 0010 926B     		ldr	r2, [r2, #56]
 3290 0012 CAB9     		cbnz	r2, .L308
 3291              	.L309:
3833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3292              		.loc 1 3833 0
 3293 0014 A0F85630 		strh	r3, [r0, #86]	@ movhi
3834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3294              		.loc 1 3834 0
 3295 0018 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3296              		.loc 1 3837 0
 3297 001c C0F89030 		str	r3, [r0, #144]
3840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3298              		.loc 1 3840 0
 3299 0020 0368     		ldr	r3, [r0]
 3300 0022 0F22     		movs	r2, #15
 3301 0024 1A62     		str	r2, [r3, #32]
3843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3302              		.loc 1 3843 0
 3303 0026 426E     		ldr	r2, [r0, #100]
 3304 0028 B2F1005F 		cmp	r2, #536870912
3845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3305              		.loc 1 3845 0
 3306 002c 02BF     		ittt	eq
 3307 002e 9A69     		ldreq	r2, [r3, #24]
 3308 0030 42F01002 		orreq	r2, r2, #16
 3309 0034 9A61     		streq	r2, [r3, #24]
3849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3310              		.loc 1 3849 0
 3311 0036 2023     		movs	r3, #32
 3312 0038 C0F88830 		str	r3, [r0, #136]
3850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3313              		.loc 1 3850 0
 3314 003c C0F88C30 		str	r3, [r0, #140]
3851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3315              		.loc 1 3851 0
 3316 0040 0023     		movs	r3, #0
 3317 0042 C366     		str	r3, [r0, #108]
3859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3318              		.loc 1 3859 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 159


 3319 0044 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3320              	.LVL350:
 3321              	.L308:
3861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3322              		.loc 1 3861 0
 3323 0048 08BD     		pop	{r3, pc}
 3324              		.cfi_endproc
 3325              	.LFE386:
 3327              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3328              		.align	1
 3329              		.weak	HAL_UART_AbortTransmitCpltCallback
 3330              		.syntax unified
 3331              		.thumb
 3332              		.thumb_func
 3333              		.fpu fpv4-sp-d16
 3335              	HAL_UART_AbortTransmitCpltCallback:
 3336              	.LFB421:
 3337              		.cfi_startproc
 3338              		@ args = 0, pretend = 0, frame = 0
 3339              		@ frame_needed = 0, uses_anonymous_args = 0
 3340              		@ link register save eliminated.
 3341 0000 7047     		bx	lr
 3342              		.cfi_endproc
 3343              	.LFE421:
 3345              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3346              		.align	1
 3347              		.global	HAL_UART_AbortTransmit_IT
 3348              		.syntax unified
 3349              		.thumb
 3350              		.thumb_func
 3351              		.fpu fpv4-sp-d16
 3353              	HAL_UART_AbortTransmit_IT:
 3354              	.LFB349:
2026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
 3355              		.loc 1 2026 0
 3356              		.cfi_startproc
 3357              		@ args = 0, pretend = 0, frame = 0
 3358              		@ frame_needed = 0, uses_anonymous_args = 0
 3359              	.LVL351:
2026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
 3360              		.loc 1 2026 0
 3361 0000 10B5     		push	{r4, lr}
 3362              	.LCFI24:
 3363              		.cfi_def_cfa_offset 8
 3364              		.cfi_offset 4, -8
 3365              		.cfi_offset 14, -4
 3366 0002 0446     		mov	r4, r0
 3367              	.L317:
 3368              	.LBB824:
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3369              		.loc 1 2028 0 discriminator 1
 3370 0004 2268     		ldr	r2, [r4]
 3371              	.LVL352:
 3372              	.LBB825:
 3373              	.LBB826:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3374              		.loc 2 1155 0 discriminator 1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 160


 3375              		.syntax unified
 3376              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3377 0006 52E8003F 		ldrex r3, [r2]
 3378              	@ 0 "" 2
 3379              	.LVL353:
 3380              		.thumb
 3381              		.syntax unified
 3382              	.LBE826:
 3383              	.LBE825:
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3384              		.loc 1 2028 0 discriminator 1
 3385 000a 23F0C003 		bic	r3, r3, #192
 3386              	.LVL354:
 3387              	.LBB827:
 3388              	.LBB828:
 3389              		.loc 2 1206 0 discriminator 1
 3390              		.syntax unified
 3391              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3392 000e 42E80031 		strex r1, r3, [r2]
 3393              	@ 0 "" 2
 3394              	.LVL355:
 3395              		.thumb
 3396              		.syntax unified
 3397 0012 2368     		ldr	r3, [r4]
 3398              	.LVL356:
 3399              	.LBE828:
 3400              	.LBE827:
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3401              		.loc 1 2028 0 discriminator 1
 3402 0014 0029     		cmp	r1, #0
 3403 0016 F5D1     		bne	.L317
 3404              	.LVL357:
 3405              	.L318:
 3406              	.LBE824:
 3407              	.LBB829:
 3408              	.LBB830:
 3409              	.LBB831:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3410              		.loc 2 1155 0 discriminator 1
 3411 0018 03F10802 		add	r2, r3, #8
 3412              	.LVL358:
 3413              		.syntax unified
 3414              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3415 001c 52E8002F 		ldrex r2, [r2]
 3416              	@ 0 "" 2
 3417              	.LVL359:
 3418              		.thumb
 3419              		.syntax unified
 3420              	.LBE831:
 3421              	.LBE830:
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3422              		.loc 1 2029 0 discriminator 1
 3423 0020 22F40002 		bic	r2, r2, #8388608
 3424              	.LVL360:
 3425              	.LBB832:
 3426              	.LBB833:
 3427              		.loc 2 1206 0 discriminator 1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 161


 3428 0024 03F10800 		add	r0, r3, #8
 3429              	.LVL361:
 3430              		.syntax unified
 3431              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3432 0028 40E80021 		strex r1, r2, [r0]
 3433              	@ 0 "" 2
 3434              	.LVL362:
 3435              		.thumb
 3436              		.syntax unified
 3437              	.LBE833:
 3438              	.LBE832:
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3439              		.loc 1 2029 0 discriminator 1
 3440 002c 0029     		cmp	r1, #0
 3441 002e F3D1     		bne	.L318
 3442              	.LBE829:
2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3443              		.loc 1 2032 0
 3444 0030 9A68     		ldr	r2, [r3, #8]
 3445              	.LVL363:
 3446 0032 12F08002 		ands	r2, r2, #128
 3447 0036 21D0     		beq	.L319
 3448              	.L320:
 3449              	.LVL364:
 3450              	.LBB834:
 3451              	.LBB835:
 3452              	.LBB836:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3453              		.loc 2 1155 0 discriminator 1
 3454 0038 03F10802 		add	r2, r3, #8
 3455              	.LVL365:
 3456              		.syntax unified
 3457              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3458 003c 52E8002F 		ldrex r2, [r2]
 3459              	@ 0 "" 2
 3460              	.LVL366:
 3461              		.thumb
 3462              		.syntax unified
 3463              	.LBE836:
 3464              	.LBE835:
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3465              		.loc 1 2035 0 discriminator 1
 3466 0040 22F08002 		bic	r2, r2, #128
 3467              	.LVL367:
 3468              	.LBB837:
 3469              	.LBB838:
 3470              		.loc 2 1206 0 discriminator 1
 3471 0044 03F10800 		add	r0, r3, #8
 3472              	.LVL368:
 3473              		.syntax unified
 3474              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3475 0048 40E80021 		strex r1, r2, [r0]
 3476              	@ 0 "" 2
 3477              	.LVL369:
 3478              		.thumb
 3479              		.syntax unified
 3480              	.LBE838:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 162


 3481              	.LBE837:
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3482              		.loc 1 2035 0 discriminator 1
 3483 004c 0029     		cmp	r1, #0
 3484 004e F3D1     		bne	.L320
 3485              	.LBE834:
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3486              		.loc 1 2038 0
 3487 0050 E06F     		ldr	r0, [r4, #124]
 3488 0052 48B1     		cbz	r0, .L321
2042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3489              		.loc 1 2042 0
 3490 0054 0F4B     		ldr	r3, .L330
 3491 0056 8363     		str	r3, [r0, #56]
2045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3492              		.loc 1 2045 0
 3493 0058 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3494              	.LVL370:
 3495 005c 10B1     		cbz	r0, .L322
2048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3496              		.loc 1 2048 0
 3497 005e E06F     		ldr	r0, [r4, #124]
 3498 0060 836B     		ldr	r3, [r0, #56]
 3499 0062 9847     		blx	r3
 3500              	.LVL371:
 3501              	.L322:
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3502              		.loc 1 2100 0
 3503 0064 0020     		movs	r0, #0
 3504 0066 10BD     		pop	{r4, pc}
 3505              	.LVL372:
 3506              	.L321:
2054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3507              		.loc 1 2054 0
 3508 0068 A4F85600 		strh	r0, [r4, #86]	@ movhi
2057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3509              		.loc 1 2057 0
 3510 006c A067     		str	r0, [r4, #120]
 3511              	.LVL373:
 3512              	.L323:
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3513              		.loc 1 2087 0
 3514 006e 2023     		movs	r3, #32
 3515 0070 C4F88830 		str	r3, [r4, #136]
2095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3516              		.loc 1 2095 0
 3517 0074 2046     		mov	r0, r4
 3518 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3519              	.LVL374:
 3520 007a F3E7     		b	.L322
 3521              	.L319:
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3522              		.loc 1 2075 0
 3523 007c A4F85620 		strh	r2, [r4, #86]	@ movhi
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3524              		.loc 1 2078 0
 3525 0080 A267     		str	r2, [r4, #120]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 163


2081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3526              		.loc 1 2081 0
 3527 0082 626E     		ldr	r2, [r4, #100]
 3528 0084 B2F1005F 		cmp	r2, #536870912
2083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3529              		.loc 1 2083 0
 3530 0088 02BF     		ittt	eq
 3531 008a 9A69     		ldreq	r2, [r3, #24]
 3532 008c 42F01002 		orreq	r2, r2, #16
 3533 0090 9A61     		streq	r2, [r3, #24]
 3534 0092 ECE7     		b	.L323
 3535              	.L331:
 3536              		.align	2
 3537              	.L330:
 3538 0094 00000000 		.word	UART_DMATxOnlyAbortCallback
 3539              		.cfi_endproc
 3540              	.LFE349:
 3542              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3543              		.align	1
 3544              		.syntax unified
 3545              		.thumb
 3546              		.thumb_func
 3547              		.fpu fpv4-sp-d16
 3549              	UART_DMATxOnlyAbortCallback:
 3550              	.LFB388:
3925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3551              		.loc 1 3925 0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
 3555              	.LVL375:
3926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3556              		.loc 1 3926 0
 3557 0000 806A     		ldr	r0, [r0, #40]
 3558              	.LVL376:
3925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3559              		.loc 1 3925 0
 3560 0002 08B5     		push	{r3, lr}
 3561              	.LCFI25:
 3562              		.cfi_def_cfa_offset 8
 3563              		.cfi_offset 3, -8
 3564              		.cfi_offset 14, -4
3928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3565              		.loc 1 3928 0
 3566 0004 0023     		movs	r3, #0
 3567 0006 A0F85630 		strh	r3, [r0, #86]	@ movhi
3931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3568              		.loc 1 3931 0
 3569 000a 436E     		ldr	r3, [r0, #100]
 3570 000c B3F1005F 		cmp	r3, #536870912
3933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3571              		.loc 1 3933 0
 3572 0010 01BF     		itttt	eq
 3573 0012 0268     		ldreq	r2, [r0]
 3574 0014 9369     		ldreq	r3, [r2, #24]
 3575 0016 43F01003 		orreq	r3, r3, #16
 3576 001a 9361     		streq	r3, [r2, #24]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 164


3937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3577              		.loc 1 3937 0
 3578 001c 2023     		movs	r3, #32
 3579 001e C0F88830 		str	r3, [r0, #136]
3945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3580              		.loc 1 3945 0
 3581 0022 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3582              	.LVL377:
3947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3583              		.loc 1 3947 0
 3584 0026 08BD     		pop	{r3, pc}
 3585              		.cfi_endproc
 3586              	.LFE388:
 3588              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3589              		.align	1
 3590              		.weak	HAL_UART_AbortReceiveCpltCallback
 3591              		.syntax unified
 3592              		.thumb
 3593              		.thumb_func
 3594              		.fpu fpv4-sp-d16
 3596              	HAL_UART_AbortReceiveCpltCallback:
 3597              	.LFB423:
 3598              		.cfi_startproc
 3599              		@ args = 0, pretend = 0, frame = 0
 3600              		@ frame_needed = 0, uses_anonymous_args = 0
 3601              		@ link register save eliminated.
 3602 0000 7047     		bx	lr
 3603              		.cfi_endproc
 3604              	.LFE423:
 3606              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3607              		.align	1
 3608              		.global	HAL_UART_AbortReceive_IT
 3609              		.syntax unified
 3610              		.thumb
 3611              		.thumb_func
 3612              		.fpu fpv4-sp-d16
 3614              	HAL_UART_AbortReceive_IT:
 3615              	.LFB350:
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3616              		.loc 1 2117 0
 3617              		.cfi_startproc
 3618              		@ args = 0, pretend = 0, frame = 0
 3619              		@ frame_needed = 0, uses_anonymous_args = 0
 3620              	.LVL378:
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3621              		.loc 1 2117 0
 3622 0000 10B5     		push	{r4, lr}
 3623              	.LCFI26:
 3624              		.cfi_def_cfa_offset 8
 3625              		.cfi_offset 4, -8
 3626              		.cfi_offset 14, -4
 3627 0002 0446     		mov	r4, r0
 3628              	.L336:
 3629              	.LBB839:
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 3630              		.loc 1 2119 0 discriminator 1
 3631 0004 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 165


 3632              	.LVL379:
 3633              	.LBB840:
 3634              	.LBB841:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3635              		.loc 2 1155 0 discriminator 1
 3636              		.syntax unified
 3637              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3638 0006 52E8003F 		ldrex r3, [r2]
 3639              	@ 0 "" 2
 3640              	.LVL380:
 3641              		.thumb
 3642              		.syntax unified
 3643              	.LBE841:
 3644              	.LBE840:
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 3645              		.loc 1 2119 0 discriminator 1
 3646 000a 23F49073 		bic	r3, r3, #288
 3647              	.LVL381:
 3648              	.LBB842:
 3649              	.LBB843:
 3650              		.loc 2 1206 0 discriminator 1
 3651              		.syntax unified
 3652              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3653 000e 42E80031 		strex r1, r3, [r2]
 3654              	@ 0 "" 2
 3655              	.LVL382:
 3656              		.thumb
 3657              		.syntax unified
 3658 0012 2368     		ldr	r3, [r4]
 3659              	.LVL383:
 3660              	.LBE843:
 3661              	.LBE842:
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 3662              		.loc 1 2119 0 discriminator 1
 3663 0014 0029     		cmp	r1, #0
 3664 0016 F5D1     		bne	.L336
 3665              	.LBE839:
 3666              	.LBB844:
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3667              		.loc 1 2120 0
 3668 0018 2748     		ldr	r0, .L352
 3669              	.LVL384:
 3670              	.L337:
 3671              	.LBB845:
 3672              	.LBB846:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3673              		.loc 2 1155 0 discriminator 1
 3674 001a 03F10802 		add	r2, r3, #8
 3675              	.LVL385:
 3676              		.syntax unified
 3677              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3678 001e 52E8002F 		ldrex r2, [r2]
 3679              	@ 0 "" 2
 3680              	.LVL386:
 3681              		.thumb
 3682              		.syntax unified
 3683              	.LBE846:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 166


 3684              	.LBE845:
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3685              		.loc 1 2120 0 discriminator 1
 3686 0022 0240     		ands	r2, r2, r0
 3687              	.LVL387:
 3688              	.LBB847:
 3689              	.LBB848:
 3690              		.loc 2 1206 0 discriminator 1
 3691 0024 03F1080C 		add	ip, r3, #8
 3692              	.LVL388:
 3693              		.syntax unified
 3694              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3695 0028 4CE80021 		strex r1, r2, [ip]
 3696              	@ 0 "" 2
 3697              	.LVL389:
 3698              		.thumb
 3699              		.syntax unified
 3700              	.LBE848:
 3701              	.LBE847:
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3702              		.loc 1 2120 0 discriminator 1
 3703 002c 0029     		cmp	r1, #0
 3704 002e F4D1     		bne	.L337
 3705              	.LBE844:
2123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3706              		.loc 1 2123 0
 3707 0030 E26E     		ldr	r2, [r4, #108]
 3708              	.LVL390:
 3709 0032 012A     		cmp	r2, #1
 3710 0034 07D1     		bne	.L338
 3711              	.L339:
 3712              	.LVL391:
 3713              	.LBB849:
 3714              	.LBB850:
 3715              	.LBB851:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3716              		.loc 2 1155 0 discriminator 1
 3717              		.syntax unified
 3718              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3719 0036 53E8002F 		ldrex r2, [r3]
 3720              	@ 0 "" 2
 3721              	.LVL392:
 3722              		.thumb
 3723              		.syntax unified
 3724              	.LBE851:
 3725              	.LBE850:
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3726              		.loc 1 2125 0 discriminator 1
 3727 003a 22F01002 		bic	r2, r2, #16
 3728              	.LVL393:
 3729              	.LBB852:
 3730              	.LBB853:
 3731              		.loc 2 1206 0 discriminator 1
 3732              		.syntax unified
 3733              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3734 003e 43E80021 		strex r1, r2, [r3]
 3735              	@ 0 "" 2
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 167


 3736              	.LVL394:
 3737              		.thumb
 3738              		.syntax unified
 3739              	.LBE853:
 3740              	.LBE852:
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3741              		.loc 1 2125 0 discriminator 1
 3742 0042 0029     		cmp	r1, #0
 3743 0044 F7D1     		bne	.L339
 3744              	.LVL395:
 3745              	.L338:
 3746              	.LBE849:
2129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3747              		.loc 1 2129 0
 3748 0046 9A68     		ldr	r2, [r3, #8]
 3749 0048 12F04002 		ands	r2, r2, #64
 3750 004c 2AD0     		beq	.L340
 3751              	.L341:
 3752              	.LVL396:
 3753              	.LBB854:
 3754              	.LBB855:
 3755              	.LBB856:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3756              		.loc 2 1155 0 discriminator 1
 3757 004e 03F10802 		add	r2, r3, #8
 3758              	.LVL397:
 3759              		.syntax unified
 3760              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3761 0052 52E8002F 		ldrex r2, [r2]
 3762              	@ 0 "" 2
 3763              	.LVL398:
 3764              		.thumb
 3765              		.syntax unified
 3766              	.LBE856:
 3767              	.LBE855:
2132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3768              		.loc 1 2132 0 discriminator 1
 3769 0056 22F04002 		bic	r2, r2, #64
 3770              	.LVL399:
 3771              	.LBB857:
 3772              	.LBB858:
 3773              		.loc 2 1206 0 discriminator 1
 3774 005a 03F10800 		add	r0, r3, #8
 3775              	.LVL400:
 3776              		.syntax unified
 3777              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3778 005e 40E80021 		strex r1, r2, [r0]
 3779              	@ 0 "" 2
 3780              	.LVL401:
 3781              		.thumb
 3782              		.syntax unified
 3783              	.LBE858:
 3784              	.LBE857:
2132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3785              		.loc 1 2132 0 discriminator 1
 3786 0062 0029     		cmp	r1, #0
 3787 0064 F3D1     		bne	.L341
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 168


 3788              	.LBE854:
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3789              		.loc 1 2135 0
 3790 0066 D4F88000 		ldr	r0, [r4, #128]
 3791 006a 50B1     		cbz	r0, .L342
2139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3792              		.loc 1 2139 0
 3793 006c 134B     		ldr	r3, .L352+4
 3794 006e 8363     		str	r3, [r0, #56]
2142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3795              		.loc 1 2142 0
 3796 0070 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3797              	.LVL402:
 3798 0074 18B1     		cbz	r0, .L343
2145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3799              		.loc 1 2145 0
 3800 0076 D4F88000 		ldr	r0, [r4, #128]
 3801 007a 836B     		ldr	r3, [r0, #56]
 3802 007c 9847     		blx	r3
 3803              	.LVL403:
 3804              	.L343:
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3805              		.loc 1 2202 0
 3806 007e 0020     		movs	r0, #0
 3807 0080 10BD     		pop	{r4, pc}
 3808              	.LVL404:
 3809              	.L342:
2157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3810              		.loc 1 2157 0
 3811 0082 0F22     		movs	r2, #15
 3812              	.LVL405:
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3813              		.loc 1 2151 0
 3814 0084 A4F85E00 		strh	r0, [r4, #94]	@ movhi
2154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3815              		.loc 1 2154 0
 3816 0088 A065     		str	r0, [r4, #88]
2157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3817              		.loc 1 2157 0
 3818 008a 1A62     		str	r2, [r3, #32]
2160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3819              		.loc 1 2160 0
 3820 008c 9A69     		ldr	r2, [r3, #24]
 3821 008e 42F00802 		orr	r2, r2, #8
 3822 0092 9A61     		str	r2, [r3, #24]
2163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3823              		.loc 1 2163 0
 3824 0094 2023     		movs	r3, #32
 3825 0096 C4F88C30 		str	r3, [r4, #140]
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3826              		.loc 1 2164 0
 3827 009a E066     		str	r0, [r4, #108]
 3828              	.L351:
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3829              		.loc 1 2197 0
 3830 009c 2046     		mov	r0, r4
 3831 009e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 169


 3832              	.LVL406:
 3833 00a2 ECE7     		b	.L343
 3834              	.L340:
2185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3835              		.loc 1 2185 0
 3836 00a4 0F21     		movs	r1, #15
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3837              		.loc 1 2179 0
 3838 00a6 A4F85E20 		strh	r2, [r4, #94]	@ movhi
2182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3839              		.loc 1 2182 0
 3840 00aa A265     		str	r2, [r4, #88]
2185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3841              		.loc 1 2185 0
 3842 00ac 1962     		str	r1, [r3, #32]
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3843              		.loc 1 2188 0
 3844 00ae 2023     		movs	r3, #32
 3845 00b0 C4F88C30 		str	r3, [r4, #140]
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3846              		.loc 1 2189 0
 3847 00b4 E266     		str	r2, [r4, #108]
 3848 00b6 F1E7     		b	.L351
 3849              	.L353:
 3850              		.align	2
 3851              	.L352:
 3852 00b8 FEFFFFEF 		.word	-268435458
 3853 00bc 00000000 		.word	UART_DMARxOnlyAbortCallback
 3854              		.cfi_endproc
 3855              	.LFE350:
 3857              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3858              		.align	1
 3859              		.syntax unified
 3860              		.thumb
 3861              		.thumb_func
 3862              		.fpu fpv4-sp-d16
 3864              	UART_DMARxOnlyAbortCallback:
 3865              	.LFB389:
3958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3866              		.loc 1 3958 0
 3867              		.cfi_startproc
 3868              		@ args = 0, pretend = 0, frame = 0
 3869              		@ frame_needed = 0, uses_anonymous_args = 0
 3870              	.LVL407:
3959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3871              		.loc 1 3959 0
 3872 0000 806A     		ldr	r0, [r0, #40]
 3873              	.LVL408:
3958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3874              		.loc 1 3958 0
 3875 0002 08B5     		push	{r3, lr}
 3876              	.LCFI27:
 3877              		.cfi_def_cfa_offset 8
 3878              		.cfi_offset 3, -8
 3879              		.cfi_offset 14, -4
3964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3880              		.loc 1 3964 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 170


 3881 0004 0368     		ldr	r3, [r0]
3961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3882              		.loc 1 3961 0
 3883 0006 0021     		movs	r1, #0
3964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3884              		.loc 1 3964 0
 3885 0008 0F22     		movs	r2, #15
3961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3886              		.loc 1 3961 0
 3887 000a A0F85E10 		strh	r1, [r0, #94]	@ movhi
3964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3888              		.loc 1 3964 0
 3889 000e 1A62     		str	r2, [r3, #32]
3967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3890              		.loc 1 3967 0
 3891 0010 9A69     		ldr	r2, [r3, #24]
 3892 0012 42F00802 		orr	r2, r2, #8
 3893 0016 9A61     		str	r2, [r3, #24]
3970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3894              		.loc 1 3970 0
 3895 0018 2023     		movs	r3, #32
 3896 001a C0F88C30 		str	r3, [r0, #140]
3971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3897              		.loc 1 3971 0
 3898 001e C166     		str	r1, [r0, #108]
3979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3899              		.loc 1 3979 0
 3900 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3901              	.LVL409:
3981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3902              		.loc 1 3981 0
 3903 0024 08BD     		pop	{r3, pc}
 3904              		.cfi_endproc
 3905              	.LFE389:
 3907              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 3908              		.align	1
 3909              		.weak	HAL_UARTEx_RxEventCallback
 3910              		.syntax unified
 3911              		.thumb
 3912              		.thumb_func
 3913              		.fpu fpv4-sp-d16
 3915              	HAL_UARTEx_RxEventCallback:
 3916              	.LFB360:
2662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3917              		.loc 1 2662 0
 3918              		.cfi_startproc
 3919              		@ args = 0, pretend = 0, frame = 0
 3920              		@ frame_needed = 0, uses_anonymous_args = 0
 3921              		@ link register save eliminated.
 3922              	.LVL410:
2670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3923              		.loc 1 2670 0
 3924 0000 7047     		bx	lr
 3925              		.cfi_endproc
 3926              	.LFE360:
 3928              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3929              		.align	1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 171


 3930              		.global	HAL_UART_IRQHandler
 3931              		.syntax unified
 3932              		.thumb
 3933              		.thumb_func
 3934              		.fpu fpv4-sp-d16
 3936              	HAL_UART_IRQHandler:
 3937              	.LFB351:
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3938              		.loc 1 2210 0
 3939              		.cfi_startproc
 3940              		@ args = 0, pretend = 0, frame = 0
 3941              		@ frame_needed = 0, uses_anonymous_args = 0
 3942              	.LVL411:
2211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3943              		.loc 1 2211 0
 3944 0000 0368     		ldr	r3, [r0]
 3945 0002 DA69     		ldr	r2, [r3, #28]
 3946              	.LVL412:
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3947              		.loc 1 2212 0
 3948 0004 1968     		ldr	r1, [r3]
 3949              	.LVL413:
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3950              		.loc 1 2210 0
 3951 0006 70B5     		push	{r4, r5, r6, lr}
 3952              	.LCFI28:
 3953              		.cfi_def_cfa_offset 16
 3954              		.cfi_offset 4, -16
 3955              		.cfi_offset 5, -12
 3956              		.cfi_offset 6, -8
 3957              		.cfi_offset 14, -4
2220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3958              		.loc 1 2220 0
 3959 0008 40F60F05 		movw	r5, #2063
 3960 000c 2A42     		tst	r2, r5
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3961              		.loc 1 2210 0
 3962 000e 0446     		mov	r4, r0
2213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3963              		.loc 1 2213 0
 3964 0010 9868     		ldr	r0, [r3, #8]
 3965              	.LVL414:
2220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3966              		.loc 1 2220 0
 3967 0012 0DD1     		bne	.L357
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 3968              		.loc 1 2223 0
 3969 0014 9606     		lsls	r6, r2, #26
 3970 0016 40F19080 		bpl	.L358
2224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 3971              		.loc 1 2224 0
 3972 001a 8D06     		lsls	r5, r1, #26
 3973 001c 02D4     		bmi	.L359
2225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3974              		.loc 1 2225 0
 3975 001e C600     		lsls	r6, r0, #3
 3976 0020 40F18B80 		bpl	.L358
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 172


 3977              	.L359:
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3978              		.loc 1 2227 0
 3979 0024 636F     		ldr	r3, [r4, #116]
 3980              	.L510:
2493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3981              		.loc 1 2493 0
 3982 0026 002B     		cmp	r3, #0
 3983 0028 00F08180 		beq	.L356
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3984              		.loc 1 2495 0
 3985 002c 2046     		mov	r0, r4
 3986              	.LVL415:
 3987 002e 78E0     		b	.L507
 3988              	.LVL416:
 3989              	.L357:
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 3990              		.loc 1 2237 0
 3991 0030 A64E     		ldr	r6, .L511
 3992 0032 0640     		ands	r6, r0, r6
 3993 0034 02D1     		bne	.L362
2238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3994              		.loc 1 2238 0
 3995 0036 A64D     		ldr	r5, .L511+4
 3996 0038 2942     		tst	r1, r5
 3997 003a 7ED0     		beq	.L358
 3998              	.L362:
2241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3999              		.loc 1 2241 0
 4000 003c D507     		lsls	r5, r2, #31
 4001 003e 09D5     		bpl	.L363
2241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4002              		.loc 1 2241 0 is_stmt 0 discriminator 1
 4003 0040 CD05     		lsls	r5, r1, #23
 4004 0042 07D5     		bpl	.L363
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4005              		.loc 1 2243 0 is_stmt 1
 4006 0044 0125     		movs	r5, #1
 4007 0046 1D62     		str	r5, [r3, #32]
2245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 4008              		.loc 1 2245 0
 4009 0048 D4F89050 		ldr	r5, [r4, #144]
 4010 004c 45F00105 		orr	r5, r5, #1
 4011 0050 C4F89050 		str	r5, [r4, #144]
 4012              	.L363:
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4013              		.loc 1 2249 0
 4014 0054 9507     		lsls	r5, r2, #30
 4015 0056 09D5     		bpl	.L364
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4016              		.loc 1 2249 0 is_stmt 0 discriminator 1
 4017 0058 C507     		lsls	r5, r0, #31
 4018 005a 07D5     		bpl	.L364
2251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4019              		.loc 1 2251 0 is_stmt 1
 4020 005c 0225     		movs	r5, #2
 4021 005e 1D62     		str	r5, [r3, #32]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 173


2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 4022              		.loc 1 2253 0
 4023 0060 D4F89050 		ldr	r5, [r4, #144]
 4024 0064 45F00405 		orr	r5, r5, #4
 4025 0068 C4F89050 		str	r5, [r4, #144]
 4026              	.L364:
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4027              		.loc 1 2257 0
 4028 006c 5507     		lsls	r5, r2, #29
 4029 006e 09D5     		bpl	.L365
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4030              		.loc 1 2257 0 is_stmt 0 discriminator 1
 4031 0070 C507     		lsls	r5, r0, #31
 4032 0072 07D5     		bpl	.L365
2259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4033              		.loc 1 2259 0 is_stmt 1
 4034 0074 0425     		movs	r5, #4
 4035 0076 1D62     		str	r5, [r3, #32]
2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 4036              		.loc 1 2261 0
 4037 0078 D4F89050 		ldr	r5, [r4, #144]
 4038 007c 45F00205 		orr	r5, r5, #2
 4039 0080 C4F89050 		str	r5, [r4, #144]
 4040              	.L365:
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 4041              		.loc 1 2265 0
 4042 0084 1507     		lsls	r5, r2, #28
 4043 0086 0AD5     		bpl	.L366
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 4044              		.loc 1 2266 0
 4045 0088 8D06     		lsls	r5, r1, #26
 4046 008a 00D4     		bmi	.L367
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 4047              		.loc 1 2266 0 is_stmt 0 discriminator 1
 4048 008c 3EB1     		cbz	r6, .L366
 4049              	.L367:
2269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4050              		.loc 1 2269 0 is_stmt 1
 4051 008e 0825     		movs	r5, #8
 4052 0090 1D62     		str	r5, [r3, #32]
2271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 4053              		.loc 1 2271 0
 4054 0092 D4F89050 		ldr	r5, [r4, #144]
 4055 0096 45F00805 		orr	r5, r5, #8
 4056 009a C4F89050 		str	r5, [r4, #144]
 4057              	.L366:
2275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4058              		.loc 1 2275 0
 4059 009e 1605     		lsls	r6, r2, #20
 4060 00a0 0AD5     		bpl	.L368
2275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4061              		.loc 1 2275 0 is_stmt 0 discriminator 1
 4062 00a2 4D01     		lsls	r5, r1, #5
 4063 00a4 08D5     		bpl	.L368
2277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4064              		.loc 1 2277 0 is_stmt 1
 4065 00a6 4FF40065 		mov	r5, #2048
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 174


 4066 00aa 1D62     		str	r5, [r3, #32]
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 4067              		.loc 1 2279 0
 4068 00ac D4F89030 		ldr	r3, [r4, #144]
 4069 00b0 43F02003 		orr	r3, r3, #32
 4070 00b4 C4F89030 		str	r3, [r4, #144]
 4071              	.L368:
2283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4072              		.loc 1 2283 0
 4073 00b8 D4F89030 		ldr	r3, [r4, #144]
 4074 00bc 002B     		cmp	r3, #0
 4075 00be 36D0     		beq	.L356
2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 4076              		.loc 1 2286 0
 4077 00c0 9606     		lsls	r6, r2, #26
 4078 00c2 07D5     		bpl	.L370
2287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 4079              		.loc 1 2287 0
 4080 00c4 8D06     		lsls	r5, r1, #26
 4081 00c6 01D4     		bmi	.L371
2288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 4082              		.loc 1 2288 0
 4083 00c8 C100     		lsls	r1, r0, #3
 4084              	.LVL417:
 4085 00ca 03D5     		bpl	.L370
 4086              	.L371:
2290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 4087              		.loc 1 2290 0
 4088 00cc 636F     		ldr	r3, [r4, #116]
 4089 00ce 0BB1     		cbz	r3, .L370
2292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 4090              		.loc 1 2292 0
 4091 00d0 2046     		mov	r0, r4
 4092              	.LVL418:
 4093 00d2 9847     		blx	r3
 4094              	.LVL419:
 4095              	.L370:
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 4096              		.loc 1 2302 0
 4097 00d4 2268     		ldr	r2, [r4]
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 4098              		.loc 1 2301 0
 4099 00d6 D4F89050 		ldr	r5, [r4, #144]
 4100              	.LVL420:
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 4101              		.loc 1 2302 0
 4102 00da 9268     		ldr	r2, [r2, #8]
 4103 00dc 5206     		lsls	r2, r2, #25
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4104              		.loc 1 2308 0
 4105 00de 2046     		mov	r0, r4
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 4106              		.loc 1 2302 0
 4107 00e0 02D4     		bmi	.L372
 4108              	.LVL421:
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 4109              		.loc 1 2302 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 175


 4110 00e2 15F02805 		ands	r5, r5, #40
 4111              	.LVL422:
 4112 00e6 23D0     		beq	.L373
 4113              	.L372:
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4114              		.loc 1 2308 0 is_stmt 1
 4115 00e8 FFF7FEFF 		bl	UART_EndRxTransfer
 4116              	.LVL423:
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 4117              		.loc 1 2311 0
 4118 00ec 2268     		ldr	r2, [r4]
 4119 00ee 9368     		ldr	r3, [r2, #8]
 4120 00f0 5B06     		lsls	r3, r3, #25
 4121 00f2 19D5     		bpl	.L374
 4122              	.LVL424:
 4123              	.L375:
 4124              	.LBB908:
 4125              	.LBB909:
 4126              	.LBB910:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4127              		.loc 2 1155 0 discriminator 1
 4128 00f4 02F10803 		add	r3, r2, #8
 4129              	.LVL425:
 4130              		.syntax unified
 4131              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4132 00f8 53E8003F 		ldrex r3, [r3]
 4133              	@ 0 "" 2
 4134              	.LVL426:
 4135              		.thumb
 4136              		.syntax unified
 4137              	.LBE910:
 4138              	.LBE909:
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4139              		.loc 1 2314 0 discriminator 1
 4140 00fc 23F04003 		bic	r3, r3, #64
 4141              	.LVL427:
 4142              	.LBB911:
 4143              	.LBB912:
 4144              		.loc 2 1206 0 discriminator 1
 4145 0100 02F10800 		add	r0, r2, #8
 4146              	.LVL428:
 4147              		.syntax unified
 4148              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4149 0104 40E80031 		strex r1, r3, [r0]
 4150              	@ 0 "" 2
 4151              	.LVL429:
 4152              		.thumb
 4153              		.syntax unified
 4154              	.LBE912:
 4155              	.LBE911:
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4156              		.loc 1 2314 0 discriminator 1
 4157 0108 0029     		cmp	r1, #0
 4158 010a F3D1     		bne	.L375
 4159              	.LBE908:
2317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
 4160              		.loc 1 2317 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 176


 4161 010c D4F88000 		ldr	r0, [r4, #128]
 4162 0110 50B1     		cbz	r0, .L374
2321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4163              		.loc 1 2321 0
 4164 0112 704B     		ldr	r3, .L511+8
 4165              	.LVL430:
 4166 0114 8363     		str	r3, [r0, #56]
2324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             {
 4167              		.loc 1 2324 0
 4168 0116 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4169              	.LVL431:
 4170 011a 40B1     		cbz	r0, .L356
2327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             }
 4171              		.loc 1 2327 0
 4172 011c D4F88000 		ldr	r0, [r4, #128]
 4173 0120 836B     		ldr	r3, [r0, #56]
 4174              	.L507:
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4175              		.loc 1 2532 0
 4176 0122 BDE87040 		pop	{r4, r5, r6, lr}
 4177              	.LCFI29:
 4178              		.cfi_remember_state
 4179              		.cfi_restore 14
 4180              		.cfi_restore 6
 4181              		.cfi_restore 5
 4182              		.cfi_restore 4
 4183              		.cfi_def_cfa_offset 0
 4184              	.LVL432:
2327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             }
 4185              		.loc 1 2327 0
 4186 0126 1847     		bx	r3	@ indirect register sibling call
 4187              	.LVL433:
 4188              	.L374:
 4189              	.LCFI30:
 4190              		.cfi_restore_state
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4191              		.loc 1 2338 0
 4192 0128 2046     		mov	r0, r4
 4193 012a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4194              	.LVL434:
 4195              	.L356:
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4196              		.loc 1 2532 0
 4197 012e 70BD     		pop	{r4, r5, r6, pc}
 4198              	.LVL435:
 4199              	.L373:
2364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4200              		.loc 1 2364 0
 4201 0130 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4202              	.LVL436:
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 4203              		.loc 1 2366 0
 4204 0134 C4F89050 		str	r5, [r4, #144]
 4205 0138 F9E7     		b	.L356
 4206              	.LVL437:
 4207              	.L358:
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 177


 4208              		.loc 1 2375 0
 4209 013a E56E     		ldr	r5, [r4, #108]
 4210 013c 012D     		cmp	r5, #1
 4211 013e 40F08980 		bne	.L376
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
 4212              		.loc 1 2376 0
 4213 0142 D606     		lsls	r6, r2, #27
 4214 0144 40F18680 		bpl	.L376
2377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4215              		.loc 1 2377 0
 4216 0148 CD06     		lsls	r5, r1, #27
 4217 014a 40F18380 		bpl	.L376
2379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4218              		.loc 1 2379 0
 4219 014e 1022     		movs	r2, #16
 4220              	.LVL438:
 4221 0150 1A62     		str	r2, [r3, #32]
2382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4222              		.loc 1 2382 0
 4223 0152 9A68     		ldr	r2, [r3, #8]
 4224 0154 5206     		lsls	r2, r2, #25
 4225 0156 4BD5     		bpl	.L377
 4226              	.LBB913:
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 4227              		.loc 1 2388 0
 4228 0158 D4F88020 		ldr	r2, [r4, #128]
 4229 015c 1168     		ldr	r1, [r2]
 4230              	.LVL439:
 4231 015e 4A68     		ldr	r2, [r1, #4]
 4232 0160 92B2     		uxth	r2, r2
 4233              	.LVL440:
2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 4234              		.loc 1 2389 0
 4235 0162 002A     		cmp	r2, #0
 4236 0164 E3D0     		beq	.L356
2390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 4237              		.loc 1 2390 0
 4238 0166 B4F85C00 		ldrh	r0, [r4, #92]
 4239              	.LVL441:
 4240 016a 9042     		cmp	r0, r2
 4241 016c DFD9     		bls	.L356
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4242              		.loc 1 2393 0
 4243 016e A4F85E20 		strh	r2, [r4, #94]	@ movhi
2396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 4244              		.loc 1 2396 0
 4245 0172 0A68     		ldr	r2, [r1]
 4246              	.LVL442:
 4247 0174 9606     		lsls	r6, r2, #26
 4248 0176 2FD4     		bmi	.L378
 4249              	.L379:
 4250              	.LVL443:
 4251              	.LBB914:
 4252              	.LBB915:
 4253              	.LBB916:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4254              		.loc 2 1155 0 discriminator 1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 178


 4255              		.syntax unified
 4256              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4257 0178 53E8002F 		ldrex r2, [r3]
 4258              	@ 0 "" 2
 4259              	.LVL444:
 4260              		.thumb
 4261              		.syntax unified
 4262              	.LBE916:
 4263              	.LBE915:
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4264              		.loc 1 2399 0 discriminator 1
 4265 017c 22F48072 		bic	r2, r2, #256
 4266              	.LVL445:
 4267              	.LBB917:
 4268              	.LBB918:
 4269              		.loc 2 1206 0 discriminator 1
 4270              		.syntax unified
 4271              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4272 0180 43E80021 		strex r1, r2, [r3]
 4273              	@ 0 "" 2
 4274              	.LVL446:
 4275              		.thumb
 4276              		.syntax unified
 4277              	.LBE918:
 4278              	.LBE917:
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4279              		.loc 1 2399 0 discriminator 1
 4280 0184 0029     		cmp	r1, #0
 4281 0186 F7D1     		bne	.L379
 4282              	.LVL447:
 4283              	.L380:
 4284              	.LBE914:
 4285              	.LBB919:
 4286              	.LBB920:
 4287              	.LBB921:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4288              		.loc 2 1155 0 discriminator 1
 4289 0188 03F10802 		add	r2, r3, #8
 4290              	.LVL448:
 4291              		.syntax unified
 4292              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4293 018c 52E8002F 		ldrex r2, [r2]
 4294              	@ 0 "" 2
 4295              	.LVL449:
 4296              		.thumb
 4297              		.syntax unified
 4298              	.LBE921:
 4299              	.LBE920:
2400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4300              		.loc 1 2400 0 discriminator 1
 4301 0190 22F00102 		bic	r2, r2, #1
 4302              	.LVL450:
 4303              	.LBB922:
 4304              	.LBB923:
 4305              		.loc 2 1206 0 discriminator 1
 4306 0194 03F10800 		add	r0, r3, #8
 4307              	.LVL451:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 179


 4308              		.syntax unified
 4309              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4310 0198 40E80021 		strex r1, r2, [r0]
 4311              	@ 0 "" 2
 4312              	.LVL452:
 4313              		.thumb
 4314              		.syntax unified
 4315              	.LBE923:
 4316              	.LBE922:
2400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4317              		.loc 1 2400 0 discriminator 1
 4318 019c 0029     		cmp	r1, #0
 4319 019e F3D1     		bne	.L380
 4320              	.LVL453:
 4321              	.L381:
 4322              	.LBE919:
 4323              	.LBB924:
 4324              	.LBB925:
 4325              	.LBB926:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4326              		.loc 2 1155 0 discriminator 1
 4327 01a0 03F10802 		add	r2, r3, #8
 4328              	.LVL454:
 4329              		.syntax unified
 4330              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4331 01a4 52E8002F 		ldrex r2, [r2]
 4332              	@ 0 "" 2
 4333              	.LVL455:
 4334              		.thumb
 4335              		.syntax unified
 4336              	.LBE926:
 4337              	.LBE925:
2404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4338              		.loc 1 2404 0 discriminator 1
 4339 01a8 22F04002 		bic	r2, r2, #64
 4340              	.LVL456:
 4341              	.LBB927:
 4342              	.LBB928:
 4343              		.loc 2 1206 0 discriminator 1
 4344 01ac 03F10800 		add	r0, r3, #8
 4345              	.LVL457:
 4346              		.syntax unified
 4347              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4348 01b0 40E80021 		strex r1, r2, [r0]
 4349              	@ 0 "" 2
 4350              	.LVL458:
 4351              		.thumb
 4352              		.syntax unified
 4353              	.LBE928:
 4354              	.LBE927:
2404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4355              		.loc 1 2404 0 discriminator 1
 4356 01b4 0029     		cmp	r1, #0
 4357 01b6 F3D1     		bne	.L381
 4358              	.LBE924:
2407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4359              		.loc 1 2407 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 180


 4360 01b8 2022     		movs	r2, #32
 4361              	.LVL459:
 4362 01ba C4F88C20 		str	r2, [r4, #140]
 4363              	.LVL460:
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4364              		.loc 1 2408 0
 4365 01be E166     		str	r1, [r4, #108]
 4366              	.L382:
 4367              	.LVL461:
 4368              	.LBB929:
 4369              	.LBB930:
 4370              	.LBB931:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4371              		.loc 2 1155 0 discriminator 1
 4372              		.syntax unified
 4373              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4374 01c0 53E8002F 		ldrex r2, [r3]
 4375              	@ 0 "" 2
 4376              	.LVL462:
 4377              		.thumb
 4378              		.syntax unified
 4379              	.LBE931:
 4380              	.LBE930:
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4381              		.loc 1 2410 0 discriminator 1
 4382 01c4 22F01002 		bic	r2, r2, #16
 4383              	.LVL463:
 4384              	.LBB932:
 4385              	.LBB933:
 4386              		.loc 2 1206 0 discriminator 1
 4387              		.syntax unified
 4388              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4389 01c8 43E80021 		strex r1, r2, [r3]
 4390              	@ 0 "" 2
 4391              	.LVL464:
 4392              		.thumb
 4393              		.syntax unified
 4394              	.LBE933:
 4395              	.LBE932:
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4396              		.loc 1 2410 0 discriminator 1
 4397 01cc 0029     		cmp	r1, #0
 4398 01ce F7D1     		bne	.L382
 4399              	.LBE929:
2413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 4400              		.loc 1 2413 0
 4401 01d0 D4F88000 		ldr	r0, [r4, #128]
 4402 01d4 FFF7FEFF 		bl	HAL_DMA_Abort
 4403              	.LVL465:
 4404              	.L378:
2418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4405              		.loc 1 2418 0
 4406 01d8 0223     		movs	r3, #2
 4407 01da 2367     		str	r3, [r4, #112]
2425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4408              		.loc 1 2425 0
 4409 01dc B4F85E30 		ldrh	r3, [r4, #94]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 181


 4410 01e0 B4F85C10 		ldrh	r1, [r4, #92]
 4411 01e4 C91A     		subs	r1, r1, r3
 4412 01e6 89B2     		uxth	r1, r1
 4413              	.L506:
 4414              	.LBE913:
 4415              	.LBB934:
2463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4416              		.loc 1 2463 0
 4417 01e8 2046     		mov	r0, r4
 4418 01ea FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4419              	.LVL466:
 4420 01ee 9EE7     		b	.L356
 4421              	.LVL467:
 4422              	.L377:
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 4423              		.loc 1 2435 0
 4424 01f0 B4F85E10 		ldrh	r1, [r4, #94]
 4425              	.LVL468:
 4426 01f4 8AB2     		uxth	r2, r1
 4427              	.LVL469:
2436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (nb_rx_data > 0U))
 4428              		.loc 1 2436 0
 4429 01f6 B4F85E10 		ldrh	r1, [r4, #94]
 4430 01fa 89B2     		uxth	r1, r1
 4431 01fc 0029     		cmp	r1, #0
 4432 01fe 96D0     		beq	.L356
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 4433              		.loc 1 2435 0
 4434 0200 B4F85C10 		ldrh	r1, [r4, #92]
 4435 0204 891A     		subs	r1, r1, r2
 4436 0206 89B2     		uxth	r1, r1
2437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 4437              		.loc 1 2437 0
 4438 0208 0029     		cmp	r1, #0
 4439 020a 90D0     		beq	.L356
 4440              	.LVL470:
 4441              	.L383:
 4442              	.LBB935:
 4443              	.LBB936:
 4444              	.LBB937:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4445              		.loc 2 1155 0 discriminator 1
 4446              		.syntax unified
 4447              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4448 020c 53E8002F 		ldrex r2, [r3]
 4449              	@ 0 "" 2
 4450              	.LVL471:
 4451              		.thumb
 4452              		.syntax unified
 4453              	.LBE937:
 4454              	.LBE936:
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4455              		.loc 1 2440 0 discriminator 1
 4456 0210 22F49072 		bic	r2, r2, #288
 4457              	.LVL472:
 4458              	.LBB938:
 4459              	.LBB939:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 182


 4460              		.loc 2 1206 0 discriminator 1
 4461              		.syntax unified
 4462              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4463 0214 43E80020 		strex r0, r2, [r3]
 4464              	@ 0 "" 2
 4465              	.LVL473:
 4466              		.thumb
 4467              		.syntax unified
 4468              	.LBE939:
 4469              	.LBE938:
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4470              		.loc 1 2440 0 discriminator 1
 4471 0218 0028     		cmp	r0, #0
 4472 021a F7D1     		bne	.L383
 4473              	.LBE935:
 4474              	.LBB940:
2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4475              		.loc 1 2443 0
 4476 021c 2E4D     		ldr	r5, .L511+12
 4477              	.LVL474:
 4478              	.L384:
 4479              	.LBB941:
 4480              	.LBB942:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4481              		.loc 2 1155 0 discriminator 1
 4482 021e 03F10802 		add	r2, r3, #8
 4483              	.LVL475:
 4484              		.syntax unified
 4485              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4486 0222 52E8002F 		ldrex r2, [r2]
 4487              	@ 0 "" 2
 4488              	.LVL476:
 4489              		.thumb
 4490              		.syntax unified
 4491              	.LBE942:
 4492              	.LBE941:
2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4493              		.loc 1 2443 0 discriminator 1
 4494 0226 2A40     		ands	r2, r2, r5
 4495              	.LVL477:
 4496              	.LBB943:
 4497              	.LBB944:
 4498              		.loc 2 1206 0 discriminator 1
 4499 0228 03F10806 		add	r6, r3, #8
 4500              	.LVL478:
 4501              		.syntax unified
 4502              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4503 022c 46E80020 		strex r0, r2, [r6]
 4504              	@ 0 "" 2
 4505              	.LVL479:
 4506              		.thumb
 4507              		.syntax unified
 4508              	.LBE944:
 4509              	.LBE943:
2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4510              		.loc 1 2443 0 discriminator 1
 4511 0230 0028     		cmp	r0, #0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 183


 4512 0232 F4D1     		bne	.L384
 4513              	.LBE940:
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4514              		.loc 1 2446 0
 4515 0234 2022     		movs	r2, #32
 4516              	.LVL480:
 4517 0236 C4F88C20 		str	r2, [r4, #140]
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4518              		.loc 1 2450 0
 4519 023a 6067     		str	r0, [r4, #116]
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4520              		.loc 1 2447 0
 4521 023c E066     		str	r0, [r4, #108]
 4522              	.L385:
 4523              	.LVL481:
 4524              	.LBB945:
 4525              	.LBB946:
 4526              	.LBB947:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4527              		.loc 2 1155 0 discriminator 1
 4528              		.syntax unified
 4529              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4530 023e 53E8002F 		ldrex r2, [r3]
 4531              	@ 0 "" 2
 4532              	.LVL482:
 4533              		.thumb
 4534              		.syntax unified
 4535              	.LBE947:
 4536              	.LBE946:
2452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4537              		.loc 1 2452 0 discriminator 1
 4538 0242 22F01002 		bic	r2, r2, #16
 4539              	.LVL483:
 4540              	.LBB948:
 4541              	.LBB949:
 4542              		.loc 2 1206 0 discriminator 1
 4543              		.syntax unified
 4544              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4545 0246 43E80020 		strex r0, r2, [r3]
 4546              	@ 0 "" 2
 4547              	.LVL484:
 4548              		.thumb
 4549              		.syntax unified
 4550              	.LBE949:
 4551              	.LBE948:
2452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4552              		.loc 1 2452 0 discriminator 1
 4553 024a 0028     		cmp	r0, #0
 4554 024c F7D1     		bne	.L385
 4555              	.LBE945:
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4556              		.loc 1 2456 0
 4557 024e 0223     		movs	r3, #2
 4558 0250 2367     		str	r3, [r4, #112]
 4559 0252 C9E7     		b	.L506
 4560              	.LVL485:
 4561              	.L376:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 184


 4562              	.LBE934:
2471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4563              		.loc 1 2471 0
 4564 0254 D502     		lsls	r5, r2, #11
 4565 0256 09D5     		bpl	.L386
2471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4566              		.loc 1 2471 0 is_stmt 0 discriminator 1
 4567 0258 4602     		lsls	r6, r0, #9
 4568 025a 07D5     		bpl	.L386
2473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4569              		.loc 1 2473 0 is_stmt 1
 4570 025c 4FF48012 		mov	r2, #1048576
 4571              	.LVL486:
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4572              		.loc 1 2483 0
 4573 0260 2046     		mov	r0, r4
 4574              	.LVL487:
2473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4575              		.loc 1 2473 0
 4576 0262 1A62     		str	r2, [r3, #32]
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4577              		.loc 1 2532 0
 4578 0264 BDE87040 		pop	{r4, r5, r6, lr}
 4579              	.LCFI31:
 4580              		.cfi_remember_state
 4581              		.cfi_restore 14
 4582              		.cfi_restore 6
 4583              		.cfi_restore 5
 4584              		.cfi_restore 4
 4585              		.cfi_def_cfa_offset 0
 4586              	.LVL488:
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4587              		.loc 1 2483 0
 4588 0268 FFF7FEBF 		b	HAL_UARTEx_WakeupCallback
 4589              	.LVL489:
 4590              	.L386:
 4591              	.LCFI32:
 4592              		.cfi_restore_state
2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 4593              		.loc 1 2489 0
 4594 026c 1506     		lsls	r5, r2, #24
 4595 026e 05D5     		bpl	.L387
2490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 4596              		.loc 1 2490 0
 4597 0270 0E06     		lsls	r6, r1, #24
 4598 0272 01D4     		bmi	.L388
2491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4599              		.loc 1 2491 0
 4600 0274 0502     		lsls	r5, r0, #8
 4601 0276 01D5     		bpl	.L387
 4602              	.L388:
2493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4603              		.loc 1 2493 0
 4604 0278 A36F     		ldr	r3, [r4, #120]
 4605 027a D4E6     		b	.L510
 4606              	.L387:
2501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 185


 4607              		.loc 1 2501 0
 4608 027c 5006     		lsls	r0, r2, #25
 4609              	.LVL490:
 4610 027e 11D5     		bpl	.L389
2501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4611              		.loc 1 2501 0 is_stmt 0 discriminator 1
 4612 0280 4E06     		lsls	r6, r1, #25
 4613 0282 0FD5     		bpl	.L389
 4614              	.LVL491:
 4615              	.L390:
 4616              	.LBB950:
 4617              	.LBB951:
 4618              	.LBB952:
 4619              	.LBB953:
 4620              	.LBB954:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4621              		.loc 2 1155 0 is_stmt 1
 4622              		.syntax unified
 4623              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4624 0284 53E8002F 		ldrex r2, [r3]
 4625              	@ 0 "" 2
 4626              	.LVL492:
 4627              		.thumb
 4628              		.syntax unified
 4629              	.LBE954:
 4630              	.LBE953:
4125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
4127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
4128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
4129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
4130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
4131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
4132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
4133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
4134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
4135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4631              		.loc 1 4135 0
 4632 0288 22F04002 		bic	r2, r2, #64
 4633              	.LVL493:
 4634              	.LBB955:
 4635              	.LBB956:
 4636              		.loc 2 1206 0
 4637              		.syntax unified
 4638              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4639 028c 43E80021 		strex r1, r2, [r3]
 4640              	@ 0 "" 2
 4641              	.LVL494:
 4642              		.thumb
 4643              		.syntax unified
 4644              	.LBE956:
 4645              	.LBE955:
 4646              		.loc 1 4135 0
 4647 0290 0029     		cmp	r1, #0
 4648 0292 F7D1     		bne	.L390
 4649              	.LBE952:
4136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 186


4137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
4138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4650              		.loc 1 4138 0
 4651 0294 2023     		movs	r3, #32
 4652 0296 C4F88830 		str	r3, [r4, #136]
4139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
4141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
 4653              		.loc 1 4141 0
 4654 029a A167     		str	r1, [r4, #120]
4142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
4145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
4146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
4148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4655              		.loc 1 4148 0
 4656 029c 2046     		mov	r0, r4
 4657 029e FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4658              	.LVL495:
 4659 02a2 44E7     		b	.L356
 4660              	.LVL496:
 4661              	.L389:
 4662              	.LBE951:
 4663              	.LBE950:
2508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4664              		.loc 1 2508 0
 4665 02a4 1502     		lsls	r5, r2, #8
 4666 02a6 06D5     		bpl	.L391
2508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4667              		.loc 1 2508 0 is_stmt 0 discriminator 1
 4668 02a8 4800     		lsls	r0, r1, #1
 4669 02aa 04D5     		bpl	.L391
2515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4670              		.loc 1 2515 0 is_stmt 1
 4671 02ac 2046     		mov	r0, r4
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4672              		.loc 1 2532 0
 4673 02ae BDE87040 		pop	{r4, r5, r6, lr}
 4674              	.LCFI33:
 4675              		.cfi_remember_state
 4676              		.cfi_restore 14
 4677              		.cfi_restore 6
 4678              		.cfi_restore 5
 4679              		.cfi_restore 4
 4680              		.cfi_def_cfa_offset 0
 4681              	.LVL497:
2515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4682              		.loc 1 2515 0
 4683 02b2 FFF7FEBF 		b	HAL_UARTEx_TxFifoEmptyCallback
 4684              	.LVL498:
 4685              	.L391:
 4686              	.LCFI34:
 4687              		.cfi_restore_state
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4688              		.loc 1 2521 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 187


 4689 02b6 D301     		lsls	r3, r2, #7
 4690 02b8 7FF539AF 		bpl	.L356
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4691              		.loc 1 2521 0 is_stmt 0 discriminator 1
 4692 02bc 0029     		cmp	r1, #0
 4693 02be BFF636AF 		bge	.L356
2528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4694              		.loc 1 2528 0 is_stmt 1
 4695 02c2 2046     		mov	r0, r4
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4696              		.loc 1 2532 0
 4697 02c4 BDE87040 		pop	{r4, r5, r6, lr}
 4698              	.LCFI35:
 4699              		.cfi_restore 14
 4700              		.cfi_restore 6
 4701              		.cfi_restore 5
 4702              		.cfi_restore 4
 4703              		.cfi_def_cfa_offset 0
 4704              	.LVL499:
2528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4705              		.loc 1 2528 0
 4706 02c8 FFF7FEBF 		b	HAL_UARTEx_RxFifoFullCallback
 4707              	.LVL500:
 4708              	.L512:
 4709              		.align	2
 4710              	.L511:
 4711 02cc 01000010 		.word	268435457
 4712 02d0 20010004 		.word	67109152
 4713 02d4 00000000 		.word	UART_DMAAbortOnError
 4714 02d8 FEFFFFEF 		.word	-268435458
 4715              		.cfi_endproc
 4716              	.LFE351:
 4718              		.section	.text.UART_RxISR_8BIT.part.4,"ax",%progbits
 4719              		.align	1
 4720              		.syntax unified
 4721              		.thumb
 4722              		.thumb_func
 4723              		.fpu fpv4-sp-d16
 4725              	UART_RxISR_8BIT.part.4:
 4726              	.LFB403:
4149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
4151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
4153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
4154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
4155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
4156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
4157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
 4727              		.loc 1 4157 0
 4728              		.cfi_startproc
 4729              		@ args = 0, pretend = 0, frame = 0
 4730              		@ frame_needed = 0, uses_anonymous_args = 0
 4731              	.LVL501:
 4732 0000 08B5     		push	{r3, lr}
 4733              	.LCFI36:
 4734              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 188


 4735              		.cfi_offset 3, -8
 4736              		.cfi_offset 14, -4
 4737              	.L514:
 4738              	.LBB957:
4158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
4159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
4160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
4161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
4164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
4166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
4167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr++;
4168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
4169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
4171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 4739              		.loc 1 4173 0
 4740 0002 0268     		ldr	r2, [r0]
 4741              	.LVL502:
 4742              	.LBB958:
 4743              	.LBB959:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4744              		.loc 2 1155 0
 4745              		.syntax unified
 4746              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4747 0004 52E8003F 		ldrex r3, [r2]
 4748              	@ 0 "" 2
 4749              	.LVL503:
 4750              		.thumb
 4751              		.syntax unified
 4752              	.LBE959:
 4753              	.LBE958:
 4754              		.loc 1 4173 0
 4755 0008 23F49073 		bic	r3, r3, #288
 4756              	.LVL504:
 4757              	.LBB960:
 4758              	.LBB961:
 4759              		.loc 2 1206 0
 4760              		.syntax unified
 4761              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4762 000c 42E80031 		strex r1, r3, [r2]
 4763              	@ 0 "" 2
 4764              	.LVL505:
 4765              		.thumb
 4766              		.syntax unified
 4767 0010 0368     		ldr	r3, [r0]
 4768              	.LVL506:
 4769              	.LBE961:
 4770              	.LBE960:
 4771              		.loc 1 4173 0
 4772 0012 0029     		cmp	r1, #0
 4773 0014 F5D1     		bne	.L514
 4774              	.L515:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 189


 4775              	.LVL507:
 4776              	.LBE957:
 4777              	.LBB962:
 4778              	.LBB963:
 4779              	.LBB964:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4780              		.loc 2 1155 0
 4781 0016 03F10802 		add	r2, r3, #8
 4782              	.LVL508:
 4783              		.syntax unified
 4784              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4785 001a 52E8002F 		ldrex r2, [r2]
 4786              	@ 0 "" 2
 4787              	.LVL509:
 4788              		.thumb
 4789              		.syntax unified
 4790              	.LBE964:
 4791              	.LBE963:
4174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4792              		.loc 1 4176 0
 4793 001e 22F00102 		bic	r2, r2, #1
 4794              	.LVL510:
 4795              	.LBB965:
 4796              	.LBB966:
 4797              		.loc 2 1206 0
 4798 0022 03F1080C 		add	ip, r3, #8
 4799              	.LVL511:
 4800              		.syntax unified
 4801              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4802 0026 4CE80021 		strex r1, r2, [ip]
 4803              	@ 0 "" 2
 4804              	.LVL512:
 4805              		.thumb
 4806              		.syntax unified
 4807              	.LBE966:
 4808              	.LBE965:
 4809              		.loc 1 4176 0
 4810 002a 0029     		cmp	r1, #0
 4811 002c F3D1     		bne	.L515
 4812              	.LBE962:
4177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4813              		.loc 1 4179 0
 4814 002e 2022     		movs	r2, #32
 4815              	.LVL513:
 4816 0030 C0F88C20 		str	r2, [r0, #140]
4180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = NULL;
4183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
4185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
4186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (!(IS_LPUART_INSTANCE(huart->Instance)))
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 190


 4817              		.loc 1 4187 0
 4818 0034 144A     		ldr	r2, .L532
4182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4819              		.loc 1 4182 0
 4820 0036 4167     		str	r1, [r0, #116]
 4821              		.loc 1 4187 0
 4822 0038 9342     		cmp	r3, r2
4185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4823              		.loc 1 4185 0
 4824 003a 0167     		str	r1, [r0, #112]
 4825              		.loc 1 4187 0
 4826 003c 0AD0     		beq	.L516
4188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Check that USART RTOEN bit is set */
4190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 4827              		.loc 1 4190 0
 4828 003e 5A68     		ldr	r2, [r3, #4]
 4829 0040 1102     		lsls	r1, r2, #8
 4830 0042 07D5     		bpl	.L516
 4831              	.L517:
 4832              	.LVL514:
 4833              	.LBB967:
 4834              	.LBB968:
 4835              	.LBB969:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4836              		.loc 2 1155 0
 4837              		.syntax unified
 4838              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4839 0044 53E8002F 		ldrex r2, [r3]
 4840              	@ 0 "" 2
 4841              	.LVL515:
 4842              		.thumb
 4843              		.syntax unified
 4844              	.LBE969:
 4845              	.LBE968:
4191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Enable the UART Receiver Timeout Interrupt */
4193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 4846              		.loc 1 4193 0
 4847 0048 22F08062 		bic	r2, r2, #67108864
 4848              	.LVL516:
 4849              	.LBB970:
 4850              	.LBB971:
 4851              		.loc 2 1206 0
 4852              		.syntax unified
 4853              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4854 004c 43E80021 		strex r1, r2, [r3]
 4855              	@ 0 "" 2
 4856              	.LVL517:
 4857              		.thumb
 4858              		.syntax unified
 4859              	.LBE971:
 4860              	.LBE970:
 4861              		.loc 1 4193 0
 4862 0050 0029     		cmp	r1, #0
 4863 0052 F7D1     		bne	.L517
 4864              	.LVL518:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 191


 4865              	.L516:
 4866              	.LBE967:
4194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Check current reception Mode :
4198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4867              		.loc 1 4199 0
 4868 0054 C26E     		ldr	r2, [r0, #108]
 4869 0056 012A     		cmp	r2, #1
 4870 0058 13D1     		bne	.L518
4200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Set reception type to Standard */
4202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4871              		.loc 1 4202 0
 4872 005a 0022     		movs	r2, #0
 4873 005c C266     		str	r2, [r0, #108]
 4874              	.L519:
 4875              	.LVL519:
 4876              	.LBB972:
 4877              	.LBB973:
 4878              	.LBB974:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4879              		.loc 2 1155 0
 4880              		.syntax unified
 4881              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4882 005e 53E8002F 		ldrex r2, [r3]
 4883              	@ 0 "" 2
 4884              	.LVL520:
 4885              		.thumb
 4886              		.syntax unified
 4887              	.LBE974:
 4888              	.LBE973:
4203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable IDLE interrupt */
4205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 4889              		.loc 1 4205 0
 4890 0062 22F01002 		bic	r2, r2, #16
 4891              	.LVL521:
 4892              	.LBB975:
 4893              	.LBB976:
 4894              		.loc 2 1206 0
 4895              		.syntax unified
 4896              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4897 0066 43E80021 		strex r1, r2, [r3]
 4898              	@ 0 "" 2
 4899              	.LVL522:
 4900              		.thumb
 4901              		.syntax unified
 4902              	.LBE976:
 4903              	.LBE975:
 4904              		.loc 1 4205 0
 4905 006a 0029     		cmp	r1, #0
 4906 006c F7D1     		bne	.L519
 4907              	.LBE972:
4206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 192


4207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 4908              		.loc 1 4207 0
 4909 006e DA69     		ldr	r2, [r3, #28]
 4910              	.LVL523:
4208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Clear IDLE Flag */
4210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
4211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 4911              		.loc 1 4218 0
 4912 0070 B0F85C10 		ldrh	r1, [r0, #92]
4207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 4913              		.loc 1 4207 0
 4914 0074 D206     		lsls	r2, r2, #27
4210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 4915              		.loc 1 4210 0
 4916 0076 44BF     		itt	mi
 4917 0078 1022     		movmi	r2, #16
 4918 007a 1A62     		strmi	r2, [r3, #32]
 4919              		.loc 1 4218 0
 4920 007c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4921              	.LVL524:
 4922              	.L513:
4219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
4222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Standard reception API called */
4224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
4235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4923              		.loc 1 4239 0
 4924 0080 08BD     		pop	{r3, pc}
 4925              	.LVL525:
 4926              	.L518:
4229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4927              		.loc 1 4229 0
 4928 0082 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 193


 4929              	.LVL526:
 4930 0086 FBE7     		b	.L513
 4931              	.L533:
 4932              		.align	2
 4933              	.L532:
 4934 0088 00800040 		.word	1073774592
 4935              		.cfi_endproc
 4936              	.LFE403:
 4938              		.thumb_set UART_RxISR_16BIT.part.5,UART_RxISR_8BIT.part.4
 4939              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 4940              		.align	1
 4941              		.syntax unified
 4942              		.thumb
 4943              		.thumb_func
 4944              		.fpu fpv4-sp-d16
 4946              	UART_RxISR_16BIT:
 4947              	.LFB396:
4240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
4242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
4243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
4246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
4247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
4248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4948              		.loc 1 4249 0
 4949              		.cfi_startproc
 4950              		@ args = 0, pretend = 0, frame = 0
 4951              		@ frame_needed = 0, uses_anonymous_args = 0
 4952              		@ link register save eliminated.
 4953              	.LVL527:
4250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
4251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
4252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
4253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 4954              		.loc 1 4255 0
 4955 0000 D0F88C10 		ldr	r1, [r0, #140]
 4956 0004 0268     		ldr	r2, [r0]
 4957 0006 2229     		cmp	r1, #34
 4958 0008 13D1     		bne	.L535
4256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4959              		.loc 1 4257 0
 4960 000a 516A     		ldr	r1, [r2, #36]
 4961              	.LVL528:
4258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
4259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 4962              		.loc 1 4259 0
 4963 000c B0F86020 		ldrh	r2, [r0, #96]
 4964 0010 1140     		ands	r1, r1, r2
 4965              	.LVL529:
 4966 0012 826D     		ldr	r2, [r0, #88]
 4967 0014 22F8021B 		strh	r1, [r2], #2	@ movhi
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 194


 4968              	.LVL530:
4260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 4969              		.loc 1 4260 0
 4970 0018 8265     		str	r2, [r0, #88]
 4971              	.LVL531:
4261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
 4972              		.loc 1 4261 0
 4973 001a B0F85E20 		ldrh	r2, [r0, #94]
 4974              	.LVL532:
 4975 001e 013A     		subs	r2, r2, #1
 4976 0020 92B2     		uxth	r2, r2
 4977 0022 A0F85E20 		strh	r2, [r0, #94]	@ movhi
4262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 4978              		.loc 1 4263 0
 4979 0026 B0F85E30 		ldrh	r3, [r0, #94]
 4980 002a 9BB2     		uxth	r3, r3
 4981 002c 2BB9     		cbnz	r3, .L534
 4982 002e FFF7FEBF 		b	UART_RxISR_16BIT.part.5
 4983              	.LVL533:
 4984              	.L535:
4264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
4270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
4273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = NULL;
4276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
4278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
4279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (!(IS_LPUART_INSTANCE(huart->Instance)))
4281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Check that USART RTOEN bit is set */
4283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
4284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Enable the UART Receiver Timeout Interrupt */
4286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
4287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Check current reception Mode :
4291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
4293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Set reception type to Standard */
4295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable IDLE interrupt */
4298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
4299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 195


4300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
4301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Clear IDLE Flag */
4303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
4304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
4312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
4315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Standard reception API called */
4317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
4328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4985              		.loc 1 4330 0
 4986 0032 9369     		ldr	r3, [r2, #24]
 4987 0034 43F00803 		orr	r3, r3, #8
 4988 0038 9361     		str	r3, [r2, #24]
 4989              	.LVL534:
 4990              	.L534:
4331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4991              		.loc 1 4332 0
 4992 003a 7047     		bx	lr
 4993              		.cfi_endproc
 4994              	.LFE396:
 4996              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 4997              		.align	1
 4998              		.syntax unified
 4999              		.thumb
 5000              		.thumb_func
 5001              		.fpu fpv4-sp-d16
 5003              	UART_RxISR_8BIT:
 5004              	.LFB395:
4158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 5005              		.loc 1 4158 0
 5006              		.cfi_startproc
 5007              		@ args = 0, pretend = 0, frame = 0
 5008              		@ frame_needed = 0, uses_anonymous_args = 0
 5009              		@ link register save eliminated.
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 196


 5010              	.LVL535:
4163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5011              		.loc 1 4163 0
 5012 0000 D0F88C10 		ldr	r1, [r0, #140]
 5013 0004 0268     		ldr	r2, [r0]
 5014 0006 2229     		cmp	r1, #34
4158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 5015              		.loc 1 4158 0
 5016 0008 10B4     		push	{r4}
 5017              	.LCFI37:
 5018              		.cfi_def_cfa_offset 4
 5019              		.cfi_offset 4, -4
4163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5020              		.loc 1 4163 0
 5021 000a 16D1     		bne	.L538
4165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 5022              		.loc 1 4165 0
 5023 000c 526A     		ldr	r2, [r2, #36]
 5024              	.LVL536:
4166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr++;
 5025              		.loc 1 4166 0
 5026 000e 90F86040 		ldrb	r4, [r0, #96]	@ zero_extendqisi2
 5027 0012 816D     		ldr	r1, [r0, #88]
 5028 0014 2240     		ands	r2, r2, r4
 5029              	.LVL537:
 5030 0016 0A70     		strb	r2, [r1]
 5031              	.LVL538:
4167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
 5032              		.loc 1 4167 0
 5033 0018 826D     		ldr	r2, [r0, #88]
 5034 001a 0132     		adds	r2, r2, #1
 5035 001c 8265     		str	r2, [r0, #88]
4168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5036              		.loc 1 4168 0
 5037 001e B0F85E20 		ldrh	r2, [r0, #94]
 5038 0022 013A     		subs	r2, r2, #1
 5039 0024 92B2     		uxth	r2, r2
 5040 0026 A0F85E20 		strh	r2, [r0, #94]	@ movhi
4170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5041              		.loc 1 4170 0
 5042 002a B0F85E30 		ldrh	r3, [r0, #94]
 5043 002e 9BB2     		uxth	r3, r3
 5044 0030 3BB9     		cbnz	r3, .L537
4239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5045              		.loc 1 4239 0
 5046 0032 5DF8044B 		ldr	r4, [sp], #4
 5047              	.LCFI38:
 5048              		.cfi_remember_state
 5049              		.cfi_restore 4
 5050              		.cfi_def_cfa_offset 0
 5051 0036 FFF7FEBF 		b	UART_RxISR_8BIT.part.4
 5052              	.LVL539:
 5053              	.L538:
 5054              	.LCFI39:
 5055              		.cfi_restore_state
4237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5056              		.loc 1 4237 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 197


 5057 003a 9369     		ldr	r3, [r2, #24]
 5058 003c 43F00803 		orr	r3, r3, #8
 5059 0040 9361     		str	r3, [r2, #24]
 5060              	.LVL540:
 5061              	.L537:
4239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5062              		.loc 1 4239 0
 5063 0042 5DF8044B 		ldr	r4, [sp], #4
 5064              	.LCFI40:
 5065              		.cfi_restore 4
 5066              		.cfi_def_cfa_offset 0
 5067 0046 7047     		bx	lr
 5068              		.cfi_endproc
 5069              	.LFE395:
 5071              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 5072              		.align	1
 5073              		.syntax unified
 5074              		.thumb
 5075              		.thumb_func
 5076              		.fpu fpv4-sp-d16
 5078              	UART_RxISR_8BIT_FIFOEN:
 5079              	.LFB397:
4333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
4335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
4336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
4339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
4340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
4341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 5080              		.loc 1 4342 0
 5081              		.cfi_startproc
 5082              		@ args = 0, pretend = 0, frame = 8
 5083              		@ frame_needed = 0, uses_anonymous_args = 0
 5084              	.LVL541:
 5085 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5086              	.LCFI41:
 5087              		.cfi_def_cfa_offset 48
 5088              		.cfi_offset 4, -36
 5089              		.cfi_offset 5, -32
 5090              		.cfi_offset 6, -28
 5091              		.cfi_offset 7, -24
 5092              		.cfi_offset 8, -20
 5093              		.cfi_offset 9, -16
 5094              		.cfi_offset 10, -12
 5095              		.cfi_offset 11, -8
 5096              		.cfi_offset 14, -4
4343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
4344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
4345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_rx_data;
4346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  rxdatacount;
4347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 5097              		.loc 1 4347 0
 5098 0004 0368     		ldr	r3, [r0]
 5099 0006 DF69     		ldr	r7, [r3, #28]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 198


 5100              	.LVL542:
4348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 5101              		.loc 1 4348 0
 5102 0008 1A68     		ldr	r2, [r3]
4349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 5103              		.loc 1 4349 0
 5104 000a 9D68     		ldr	r5, [r3, #8]
4350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 5105              		.loc 1 4352 0
 5106 000c D0F88C10 		ldr	r1, [r0, #140]
4348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 5107              		.loc 1 4348 0
 5108 0010 0192     		str	r2, [sp, #4]
 5109              	.LVL543:
 5110              		.loc 1 4352 0
 5111 0012 2229     		cmp	r1, #34
4342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 5112              		.loc 1 4342 0
 5113 0014 0446     		mov	r4, r0
 5114              		.loc 1 4352 0
 5115 0016 40F0B680 		bne	.L541
4343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
 5116              		.loc 1 4343 0
 5117 001a B0F86080 		ldrh	r8, [r0, #96]
4353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     nb_rx_data = huart->NbRxDataToProcess;
 5118              		.loc 1 4354 0
 5119 001e B0F86890 		ldrh	r9, [r0, #104]
 5120              	.LVL544:
 5121              	.LBB977:
4355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
4356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
4358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
4359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr++;
4360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
4361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
4362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* If some non blocking errors occurred */
4364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
4365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* UART parity error interrupt occurred -------------------------------------*/
4367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
4368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
4370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_PE;
4372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* UART frame error interrupt occurred --------------------------------------*/
4375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
4376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
4378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_FE;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 199


4380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* UART noise error interrupt occurred --------------------------------------*/
4383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
4384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
4386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_NE;
4388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Call UART Error Call back function if need be ----------------------------*/
4391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (huart->ErrorCode != HAL_UART_ERROR_NONE)
4392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Non Blocking error : transfer could go on.
4394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           Error is notified to user through user error callback */
4395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call registered error callback*/
4397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCallback(huart);
4398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call legacy weak error callback*/
4400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
4401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_NONE;
4403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
4407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
4410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 5122              		.loc 1 4413 0
 5123 0022 DFF870A1 		ldr	r10, .L600+4
 5124              	.LBE977:
4414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
4417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Clear RxISR function pointer */
4419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = NULL;
4420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Initialize type of RxEvent to Transfer Complete */
4422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_TC;
4423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (!(IS_LPUART_INSTANCE(huart->Instance)))
 5125              		.loc 1 4424 0
 5126 0026 DFF870B1 		ldr	fp, .L600+8
4402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5127              		.loc 1 4402 0
 5128 002a 0026     		movs	r6, #0
 5129              	.LVL545:
 5130              	.L542:
4355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 5131              		.loc 1 4355 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 200


 5132 002c B9F1000F 		cmp	r9, #0
 5133 0030 01D0     		beq	.L557
4355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 5134              		.loc 1 4355 0 is_stmt 0 discriminator 1
 5135 0032 BB06     		lsls	r3, r7, #26
 5136 0034 21D4     		bmi	.L558
 5137              	.L557:
4425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Check that USART RTOEN bit is set */
4427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
4428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
4429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Enable the UART Receiver Timeout Interrupt */
4430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
4431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
4432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Check current reception Mode :
4435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            If Reception till IDLE event has been selected : */
4436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
4437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set reception type to Standard */
4439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Disable IDLE interrupt */
4442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
4443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
4445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
4446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Clear IDLE Flag */
4447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
4448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
4449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call registered Rx Event callback*/
4452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxEventCallback(huart, huart->RxXferSize);
4453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call legacy weak Rx Event callback*/
4455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
4456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         else
4459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Standard reception API called */
4461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call registered Rx complete callback*/
4463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxCpltCallback(huart);
4464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call legacy weak Rx complete callback*/
4466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           HAL_UART_RxCpltCallback(huart);
4467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 201


4475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     */
4476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 5138              		.loc 1 4476 0 is_stmt 1
 5139 0036 B4F85E30 		ldrh	r3, [r4, #94]
 5140 003a 9BB2     		uxth	r3, r3
 5141              	.LVL546:
4477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 5142              		.loc 1 4477 0
 5143 003c D3B1     		cbz	r3, .L540
 5144              		.loc 1 4477 0 is_stmt 0 discriminator 1
 5145 003e B4F86820 		ldrh	r2, [r4, #104]
 5146 0042 9A42     		cmp	r2, r3
 5147 0044 16D9     		bls	.L540
 5148              	.LVL547:
 5149              	.L562:
 5150              	.LBB982:
4478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 5151              		.loc 1 4480 0 is_stmt 1 discriminator 1
 5152 0046 2268     		ldr	r2, [r4]
 5153              	.LVL548:
 5154              	.LBB983:
 5155              	.LBB984:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5156              		.loc 2 1155 0 discriminator 1
 5157 0048 02F10803 		add	r3, r2, #8
 5158              	.LVL549:
 5159              		.syntax unified
 5160              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5161 004c 53E8003F 		ldrex r3, [r3]
 5162              	@ 0 "" 2
 5163              	.LVL550:
 5164              		.thumb
 5165              		.syntax unified
 5166              	.LBE984:
 5167              	.LBE983:
 5168              		.loc 1 4480 0 discriminator 1
 5169 0050 23F08053 		bic	r3, r3, #268435456
 5170              	.LVL551:
 5171              	.LBB985:
 5172              	.LBB986:
 5173              		.loc 2 1206 0 discriminator 1
 5174 0054 0832     		adds	r2, r2, #8
 5175              	.LVL552:
 5176              		.syntax unified
 5177              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5178 0056 42E80031 		strex r1, r3, [r2]
 5179              	@ 0 "" 2
 5180              	.LVL553:
 5181              		.thumb
 5182              		.syntax unified
 5183 005a 2268     		ldr	r2, [r4]
 5184              	.LBE986:
 5185              	.LBE985:
 5186              		.loc 1 4480 0 discriminator 1
 5187 005c 0029     		cmp	r1, #0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 202


 5188 005e F2D1     		bne	.L562
 5189              	.LBE982:
4481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Update the RxISR function pointer */
4483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 5190              		.loc 1 4483 0
 5191 0060 4B4B     		ldr	r3, .L600
 5192              	.LVL554:
 5193 0062 6367     		str	r3, [r4, #116]
 5194              	.L563:
 5195              	.LVL555:
 5196              	.LBB987:
 5197              	.LBB988:
 5198              	.LBB989:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5199              		.loc 2 1155 0 discriminator 1
 5200              		.syntax unified
 5201              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5202 0064 52E8003F 		ldrex r3, [r2]
 5203              	@ 0 "" 2
 5204              	.LVL556:
 5205              		.thumb
 5206              		.syntax unified
 5207              	.LBE989:
 5208              	.LBE988:
4484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 5209              		.loc 1 4486 0 discriminator 1
 5210 0068 43F02003 		orr	r3, r3, #32
 5211              	.LVL557:
 5212              	.LBB990:
 5213              	.LBB991:
 5214              		.loc 2 1206 0 discriminator 1
 5215              		.syntax unified
 5216              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5217 006c 42E80031 		strex r1, r3, [r2]
 5218              	@ 0 "" 2
 5219              	.LVL558:
 5220              		.thumb
 5221              		.syntax unified
 5222              	.LBE991:
 5223              	.LBE990:
 5224              		.loc 1 4486 0 discriminator 1
 5225 0070 0029     		cmp	r1, #0
 5226 0072 F7D1     		bne	.L563
 5227              	.LVL559:
 5228              	.L540:
 5229              	.LBE987:
4487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
4490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 203


 5230              		.loc 1 4494 0
 5231 0074 03B0     		add	sp, sp, #12
 5232              	.LCFI42:
 5233              		.cfi_remember_state
 5234              		.cfi_def_cfa_offset 36
 5235              		@ sp needed
 5236 0076 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5237              	.LVL560:
 5238              	.L558:
 5239              	.LCFI43:
 5240              		.cfi_restore_state
4357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 5241              		.loc 1 4357 0
 5242 007a 2368     		ldr	r3, [r4]
4358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr++;
 5243              		.loc 1 4358 0
 5244 007c A26D     		ldr	r2, [r4, #88]
4357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 5245              		.loc 1 4357 0
 5246 007e 5B6A     		ldr	r3, [r3, #36]
 5247              	.LVL561:
4358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr++;
 5248              		.loc 1 4358 0
 5249 0080 03EA0803 		and	r3, r3, r8
 5250              	.LVL562:
 5251 0084 1370     		strb	r3, [r2]
4359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
 5252              		.loc 1 4359 0
 5253 0086 A36D     		ldr	r3, [r4, #88]
 5254 0088 0133     		adds	r3, r3, #1
 5255 008a A365     		str	r3, [r4, #88]
4360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
 5256              		.loc 1 4360 0
 5257 008c B4F85E30 		ldrh	r3, [r4, #94]
 5258 0090 013B     		subs	r3, r3, #1
 5259 0092 9BB2     		uxth	r3, r3
 5260 0094 A4F85E30 		strh	r3, [r4, #94]	@ movhi
4361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5261              		.loc 1 4361 0
 5262 0098 2368     		ldr	r3, [r4]
 5263 009a DF69     		ldr	r7, [r3, #28]
 5264              	.LVL563:
4364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5265              		.loc 1 4364 0
 5266 009c 7807     		lsls	r0, r7, #29
 5267 009e 2CD0     		beq	.L544
4367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5268              		.loc 1 4367 0
 5269 00a0 F907     		lsls	r1, r7, #31
 5270 00a2 0AD5     		bpl	.L545
4367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5271              		.loc 1 4367 0 is_stmt 0 discriminator 1
 5272 00a4 019A     		ldr	r2, [sp, #4]
 5273 00a6 D205     		lsls	r2, r2, #23
 5274 00a8 07D5     		bpl	.L545
4369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5275              		.loc 1 4369 0 is_stmt 1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 204


 5276 00aa 0121     		movs	r1, #1
 5277 00ac 1962     		str	r1, [r3, #32]
4371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5278              		.loc 1 4371 0
 5279 00ae D4F89010 		ldr	r1, [r4, #144]
 5280 00b2 41F00101 		orr	r1, r1, #1
 5281 00b6 C4F89010 		str	r1, [r4, #144]
 5282              	.L545:
4375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5283              		.loc 1 4375 0
 5284 00ba B807     		lsls	r0, r7, #30
 5285 00bc 09D5     		bpl	.L546
4375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5286              		.loc 1 4375 0 is_stmt 0 discriminator 1
 5287 00be E907     		lsls	r1, r5, #31
 5288 00c0 07D5     		bpl	.L546
4377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5289              		.loc 1 4377 0 is_stmt 1
 5290 00c2 0221     		movs	r1, #2
 5291 00c4 1962     		str	r1, [r3, #32]
4379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5292              		.loc 1 4379 0
 5293 00c6 D4F89010 		ldr	r1, [r4, #144]
 5294 00ca 41F00401 		orr	r1, r1, #4
 5295 00ce C4F89010 		str	r1, [r4, #144]
 5296              	.L546:
4383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5297              		.loc 1 4383 0
 5298 00d2 7A07     		lsls	r2, r7, #29
 5299 00d4 09D5     		bpl	.L547
4383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5300              		.loc 1 4383 0 is_stmt 0 discriminator 1
 5301 00d6 E807     		lsls	r0, r5, #31
 5302 00d8 07D5     		bpl	.L547
4385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5303              		.loc 1 4385 0 is_stmt 1
 5304 00da 0421     		movs	r1, #4
 5305 00dc 1962     		str	r1, [r3, #32]
4387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5306              		.loc 1 4387 0
 5307 00de D4F89030 		ldr	r3, [r4, #144]
 5308 00e2 43F00203 		orr	r3, r3, #2
 5309 00e6 C4F89030 		str	r3, [r4, #144]
 5310              	.L547:
4391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5311              		.loc 1 4391 0
 5312 00ea D4F89030 		ldr	r3, [r4, #144]
 5313 00ee 23B1     		cbz	r3, .L544
4400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5314              		.loc 1 4400 0
 5315 00f0 2046     		mov	r0, r4
 5316 00f2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5317              	.LVL564:
4402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5318              		.loc 1 4402 0
 5319 00f6 C4F89060 		str	r6, [r4, #144]
 5320              	.L544:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 205


4406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5321              		.loc 1 4406 0
 5322 00fa B4F85E30 		ldrh	r3, [r4, #94]
 5323 00fe 9BB2     		uxth	r3, r3
 5324 0100 002B     		cmp	r3, #0
 5325 0102 93D1     		bne	.L542
 5326              	.L550:
 5327              	.LBB992:
4409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5328              		.loc 1 4409 0 discriminator 1
 5329 0104 2168     		ldr	r1, [r4]
 5330              	.LVL565:
 5331              	.LBB993:
 5332              	.LBB994:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5333              		.loc 2 1155 0 discriminator 1
 5334              		.syntax unified
 5335              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5336 0106 51E8003F 		ldrex r3, [r1]
 5337              	@ 0 "" 2
 5338              	.LVL566:
 5339              		.thumb
 5340              		.syntax unified
 5341              	.LBE994:
 5342              	.LBE993:
4409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5343              		.loc 1 4409 0 discriminator 1
 5344 010a 23F48073 		bic	r3, r3, #256
 5345              	.LVL567:
 5346              	.LBB995:
 5347              	.LBB996:
 5348              		.loc 2 1206 0 discriminator 1
 5349              		.syntax unified
 5350              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5351 010e 41E80030 		strex r0, r3, [r1]
 5352              	@ 0 "" 2
 5353              	.LVL568:
 5354              		.thumb
 5355              		.syntax unified
 5356 0112 2368     		ldr	r3, [r4]
 5357              	.LVL569:
 5358              	.LBE996:
 5359              	.LBE995:
4409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5360              		.loc 1 4409 0 discriminator 1
 5361 0114 0028     		cmp	r0, #0
 5362 0116 F5D1     		bne	.L550
 5363              	.L551:
 5364              	.LVL570:
 5365              	.LBE992:
 5366              	.LBB997:
 5367              	.LBB978:
 5368              	.LBB979:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5369              		.loc 2 1155 0 discriminator 1
 5370 0118 03F10802 		add	r2, r3, #8
 5371              	.LVL571:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 206


 5372              		.syntax unified
 5373              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5374 011c 52E8001F 		ldrex r1, [r2]
 5375              	@ 0 "" 2
 5376              	.LVL572:
 5377              		.thumb
 5378              		.syntax unified
 5379              	.LBE979:
 5380              	.LBE978:
4413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5381              		.loc 1 4413 0 discriminator 1
 5382 0120 01EA0A01 		and	r1, r1, r10
 5383              	.LVL573:
 5384              	.LBB980:
 5385              	.LBB981:
 5386              		.loc 2 1206 0 discriminator 1
 5387              		.syntax unified
 5388              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5389 0124 42E80010 		strex r0, r1, [r2]
 5390              	@ 0 "" 2
 5391              	.LVL574:
 5392              		.thumb
 5393              		.syntax unified
 5394              	.LBE981:
 5395              	.LBE980:
4413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5396              		.loc 1 4413 0 discriminator 1
 5397 0128 0028     		cmp	r0, #0
 5398 012a F5D1     		bne	.L551
 5399              	.LBE997:
4416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5400              		.loc 1 4416 0
 5401 012c 2021     		movs	r1, #32
 5402              	.LVL575:
4424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5403              		.loc 1 4424 0
 5404 012e 5B45     		cmp	r3, fp
4416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5405              		.loc 1 4416 0
 5406 0130 C4F88C10 		str	r1, [r4, #140]
4419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5407              		.loc 1 4419 0
 5408 0134 6067     		str	r0, [r4, #116]
4422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5409              		.loc 1 4422 0
 5410 0136 2067     		str	r0, [r4, #112]
4424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5411              		.loc 1 4424 0
 5412 0138 0AD0     		beq	.L552
4427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
 5413              		.loc 1 4427 0
 5414 013a 5968     		ldr	r1, [r3, #4]
 5415 013c 0902     		lsls	r1, r1, #8
 5416 013e 07D5     		bpl	.L552
 5417              	.L553:
 5418              	.LVL576:
 5419              	.LBB998:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 207


 5420              	.LBB999:
 5421              	.LBB1000:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5422              		.loc 2 1155 0 discriminator 1
 5423              		.syntax unified
 5424              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5425 0140 53E8001F 		ldrex r1, [r3]
 5426              	@ 0 "" 2
 5427              	.LVL577:
 5428              		.thumb
 5429              		.syntax unified
 5430              	.LBE1000:
 5431              	.LBE999:
4430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
 5432              		.loc 1 4430 0 discriminator 1
 5433 0144 21F08061 		bic	r1, r1, #67108864
 5434              	.LVL578:
 5435              	.LBB1001:
 5436              	.LBB1002:
 5437              		.loc 2 1206 0 discriminator 1
 5438              		.syntax unified
 5439              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5440 0148 43E80010 		strex r0, r1, [r3]
 5441              	@ 0 "" 2
 5442              	.LVL579:
 5443              		.thumb
 5444              		.syntax unified
 5445              	.LBE1002:
 5446              	.LBE1001:
4430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
 5447              		.loc 1 4430 0 discriminator 1
 5448 014c 0028     		cmp	r0, #0
 5449 014e F7D1     		bne	.L553
 5450              	.LVL580:
 5451              	.L552:
 5452              	.LBE998:
4436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5453              		.loc 1 4436 0
 5454 0150 E16E     		ldr	r1, [r4, #108]
 5455 0152 0129     		cmp	r1, #1
 5456 0154 13D1     		bne	.L554
4439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5457              		.loc 1 4439 0
 5458 0156 E666     		str	r6, [r4, #108]
 5459              	.L555:
 5460              	.LVL581:
 5461              	.LBB1003:
 5462              	.LBB1004:
 5463              	.LBB1005:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5464              		.loc 2 1155 0 discriminator 1
 5465              		.syntax unified
 5466              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5467 0158 53E8001F 		ldrex r1, [r3]
 5468              	@ 0 "" 2
 5469              	.LVL582:
 5470              		.thumb
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 208


 5471              		.syntax unified
 5472              	.LBE1005:
 5473              	.LBE1004:
4442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5474              		.loc 1 4442 0 discriminator 1
 5475 015c 21F01001 		bic	r1, r1, #16
 5476              	.LVL583:
 5477              	.LBB1006:
 5478              	.LBB1007:
 5479              		.loc 2 1206 0 discriminator 1
 5480              		.syntax unified
 5481              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5482 0160 43E80010 		strex r0, r1, [r3]
 5483              	@ 0 "" 2
 5484              	.LVL584:
 5485              		.thumb
 5486              		.syntax unified
 5487              	.LBE1007:
 5488              	.LBE1006:
4442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5489              		.loc 1 4442 0 discriminator 1
 5490 0164 0028     		cmp	r0, #0
 5491 0166 F7D1     		bne	.L555
 5492              	.LBE1003:
4444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
 5493              		.loc 1 4444 0
 5494 0168 D969     		ldr	r1, [r3, #28]
 5495              	.LVL585:
 5496 016a CA06     		lsls	r2, r1, #27
4447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
 5497              		.loc 1 4447 0
 5498 016c 44BF     		itt	mi
 5499 016e 1021     		movmi	r1, #16
 5500 0170 1962     		strmi	r1, [r3, #32]
4455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5501              		.loc 1 4455 0
 5502 0172 2046     		mov	r0, r4
 5503 0174 B4F85C10 		ldrh	r1, [r4, #92]
 5504 0178 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5505              	.LVL586:
 5506 017c 56E7     		b	.L542
 5507              	.L554:
4466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5508              		.loc 1 4466 0
 5509 017e 2046     		mov	r0, r4
 5510 0180 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5511              	.LVL587:
 5512 0184 52E7     		b	.L542
 5513              	.LVL588:
 5514              	.L541:
4492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5515              		.loc 1 4492 0
 5516 0186 9A69     		ldr	r2, [r3, #24]
 5517              	.LVL589:
 5518 0188 42F00802 		orr	r2, r2, #8
 5519 018c 9A61     		str	r2, [r3, #24]
 5520              		.loc 1 4494 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 209


 5521 018e 71E7     		b	.L540
 5522              	.L601:
 5523              		.align	2
 5524              	.L600:
 5525 0190 00000000 		.word	UART_RxISR_8BIT
 5526 0194 FEFFFFEF 		.word	-268435458
 5527 0198 00800040 		.word	1073774592
 5528              		.cfi_endproc
 5529              	.LFE397:
 5531              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 5532              		.align	1
 5533              		.syntax unified
 5534              		.thumb
 5535              		.thumb_func
 5536              		.fpu fpv4-sp-d16
 5538              	UART_RxISR_16BIT_FIFOEN:
 5539              	.LFB398:
4495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
4497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
4501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
4502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
4503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 5540              		.loc 1 4504 0
 5541              		.cfi_startproc
 5542              		@ args = 0, pretend = 0, frame = 8
 5543              		@ frame_needed = 0, uses_anonymous_args = 0
 5544              	.LVL590:
 5545 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5546              	.LCFI44:
 5547              		.cfi_def_cfa_offset 48
 5548              		.cfi_offset 4, -36
 5549              		.cfi_offset 5, -32
 5550              		.cfi_offset 6, -28
 5551              		.cfi_offset 7, -24
 5552              		.cfi_offset 8, -20
 5553              		.cfi_offset 9, -16
 5554              		.cfi_offset 10, -12
 5555              		.cfi_offset 11, -8
 5556              		.cfi_offset 14, -4
4505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
4506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
4507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
4508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_rx_data;
4509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  rxdatacount;
4510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 5557              		.loc 1 4510 0
 5558 0004 0368     		ldr	r3, [r0]
 5559 0006 DF69     		ldr	r7, [r3, #28]
 5560              	.LVL591:
4511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 5561              		.loc 1 4511 0
 5562 0008 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 210


4512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 5563              		.loc 1 4512 0
 5564 000a 9D68     		ldr	r5, [r3, #8]
4513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 5565              		.loc 1 4515 0
 5566 000c D0F88C10 		ldr	r1, [r0, #140]
4511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 5567              		.loc 1 4511 0
 5568 0010 0192     		str	r2, [sp, #4]
 5569              	.LVL592:
 5570              		.loc 1 4515 0
 5571 0012 2229     		cmp	r1, #34
4504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
 5572              		.loc 1 4504 0
 5573 0014 0446     		mov	r4, r0
 5574              		.loc 1 4515 0
 5575 0016 40F0B480 		bne	.L603
4506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
 5576              		.loc 1 4506 0
 5577 001a B0F86080 		ldrh	r8, [r0, #96]
4516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     nb_rx_data = huart->NbRxDataToProcess;
 5578              		.loc 1 4517 0
 5579 001e B0F86890 		ldrh	r9, [r0, #104]
 5580              	.LVL593:
 5581              	.LBB1008:
4518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
4519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
4521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
4522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
4523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
4524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
4525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
4526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* If some non blocking errors occurred */
4528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
4529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* UART parity error interrupt occurred -------------------------------------*/
4531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
4532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
4534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_PE;
4536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* UART frame error interrupt occurred --------------------------------------*/
4539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
4540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
4542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_FE;
4544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* UART noise error interrupt occurred --------------------------------------*/
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 211


4547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
4548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
4550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_NE;
4552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Call UART Error Call back function if need be ----------------------------*/
4555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (huart->ErrorCode != HAL_UART_ERROR_NONE)
4556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Non Blocking error : transfer could go on.
4558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           Error is notified to user through user error callback */
4559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call registered error callback*/
4561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCallback(huart);
4562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call legacy weak error callback*/
4564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
4565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_NONE;
4567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
4571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
4574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 5582              		.loc 1 4577 0
 5583 0022 DFF86CA1 		ldr	r10, .L662+4
 5584              	.LBE1008:
4578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
4581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Clear RxISR function pointer */
4583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = NULL;
4584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Initialize type of RxEvent to Transfer Complete */
4586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_TC;
4587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (!(IS_LPUART_INSTANCE(huart->Instance)))
 5585              		.loc 1 4588 0
 5586 0026 DFF86CB1 		ldr	fp, .L662+8
4566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5587              		.loc 1 4566 0
 5588 002a 0026     		movs	r6, #0
 5589              	.LVL594:
 5590              	.L604:
4518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 5591              		.loc 1 4518 0
 5592 002c B9F1000F 		cmp	r9, #0
 5593 0030 01D0     		beq	.L619
4518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 212


 5594              		.loc 1 4518 0 is_stmt 0 discriminator 1
 5595 0032 BB06     		lsls	r3, r7, #26
 5596 0034 21D4     		bmi	.L620
 5597              	.L619:
4589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Check that USART RTOEN bit is set */
4591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
4592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
4593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Enable the UART Receiver Timeout Interrupt */
4594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
4595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
4596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Check current reception Mode :
4599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            If Reception till IDLE event has been selected : */
4600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
4601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set reception type to Standard */
4603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Disable IDLE interrupt */
4606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
4607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
4609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
4610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Clear IDLE Flag */
4611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
4612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
4613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call registered Rx Event callback*/
4616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxEventCallback(huart, huart->RxXferSize);
4617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call legacy weak Rx Event callback*/
4619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
4620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         else
4623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
4624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Standard reception API called */
4625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call registered Rx complete callback*/
4627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxCpltCallback(huart);
4628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call legacy weak Rx complete callback*/
4630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           HAL_UART_RxCpltCallback(huart);
4631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
4633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     */
4640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 5598              		.loc 1 4640 0 is_stmt 1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 213


 5599 0036 B4F85E30 		ldrh	r3, [r4, #94]
 5600 003a 9BB2     		uxth	r3, r3
 5601              	.LVL595:
4641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 5602              		.loc 1 4641 0
 5603 003c D3B1     		cbz	r3, .L602
 5604              		.loc 1 4641 0 is_stmt 0 discriminator 1
 5605 003e B4F86820 		ldrh	r2, [r4, #104]
 5606 0042 9A42     		cmp	r2, r3
 5607 0044 16D9     		bls	.L602
 5608              	.LVL596:
 5609              	.L624:
 5610              	.LBB1013:
4642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 5611              		.loc 1 4644 0 is_stmt 1 discriminator 1
 5612 0046 2268     		ldr	r2, [r4]
 5613              	.LVL597:
 5614              	.LBB1014:
 5615              	.LBB1015:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5616              		.loc 2 1155 0 discriminator 1
 5617 0048 02F10803 		add	r3, r2, #8
 5618              	.LVL598:
 5619              		.syntax unified
 5620              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5621 004c 53E8003F 		ldrex r3, [r3]
 5622              	@ 0 "" 2
 5623              	.LVL599:
 5624              		.thumb
 5625              		.syntax unified
 5626              	.LBE1015:
 5627              	.LBE1014:
 5628              		.loc 1 4644 0 discriminator 1
 5629 0050 23F08053 		bic	r3, r3, #268435456
 5630              	.LVL600:
 5631              	.LBB1016:
 5632              	.LBB1017:
 5633              		.loc 2 1206 0 discriminator 1
 5634 0054 0832     		adds	r2, r2, #8
 5635              	.LVL601:
 5636              		.syntax unified
 5637              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5638 0056 42E80031 		strex r1, r3, [r2]
 5639              	@ 0 "" 2
 5640              	.LVL602:
 5641              		.thumb
 5642              		.syntax unified
 5643 005a 2268     		ldr	r2, [r4]
 5644              	.LBE1017:
 5645              	.LBE1016:
 5646              		.loc 1 4644 0 discriminator 1
 5647 005c 0029     		cmp	r1, #0
 5648 005e F2D1     		bne	.L624
 5649              	.LBE1013:
4645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 214


4646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Update the RxISR function pointer */
4647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 5650              		.loc 1 4647 0
 5651 0060 4A4B     		ldr	r3, .L662
 5652              	.LVL603:
 5653 0062 6367     		str	r3, [r4, #116]
 5654              	.L625:
 5655              	.LVL604:
 5656              	.LBB1018:
 5657              	.LBB1019:
 5658              	.LBB1020:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5659              		.loc 2 1155 0 discriminator 1
 5660              		.syntax unified
 5661              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5662 0064 52E8003F 		ldrex r3, [r2]
 5663              	@ 0 "" 2
 5664              	.LVL605:
 5665              		.thumb
 5666              		.syntax unified
 5667              	.LBE1020:
 5668              	.LBE1019:
4648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 5669              		.loc 1 4650 0 discriminator 1
 5670 0068 43F02003 		orr	r3, r3, #32
 5671              	.LVL606:
 5672              	.LBB1021:
 5673              	.LBB1022:
 5674              		.loc 2 1206 0 discriminator 1
 5675              		.syntax unified
 5676              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5677 006c 42E80031 		strex r1, r3, [r2]
 5678              	@ 0 "" 2
 5679              	.LVL607:
 5680              		.thumb
 5681              		.syntax unified
 5682              	.LBE1022:
 5683              	.LBE1021:
 5684              		.loc 1 4650 0 discriminator 1
 5685 0070 0029     		cmp	r1, #0
 5686 0072 F7D1     		bne	.L625
 5687              	.LVL608:
 5688              	.L602:
 5689              	.LBE1018:
4651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
4654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 5690              		.loc 1 4658 0
 5691 0074 03B0     		add	sp, sp, #12
 5692              	.LCFI45:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 215


 5693              		.cfi_remember_state
 5694              		.cfi_def_cfa_offset 36
 5695              		@ sp needed
 5696 0076 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5697              	.LVL609:
 5698              	.L620:
 5699              	.LCFI46:
 5700              		.cfi_restore_state
4520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 5701              		.loc 1 4520 0
 5702 007a 2368     		ldr	r3, [r4]
4522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 5703              		.loc 1 4522 0
 5704 007c A26D     		ldr	r2, [r4, #88]
4520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 5705              		.loc 1 4520 0
 5706 007e 596A     		ldr	r1, [r3, #36]
 5707              	.LVL610:
4522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 5708              		.loc 1 4522 0
 5709 0080 08EA0101 		and	r1, r8, r1
 5710              	.LVL611:
 5711 0084 22F8021B 		strh	r1, [r2], #2	@ movhi
 5712              	.LVL612:
4523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
 5713              		.loc 1 4523 0
 5714 0088 A265     		str	r2, [r4, #88]
 5715              	.LVL613:
4524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
 5716              		.loc 1 4524 0
 5717 008a B4F85E20 		ldrh	r2, [r4, #94]
 5718              	.LVL614:
 5719 008e 013A     		subs	r2, r2, #1
 5720 0090 92B2     		uxth	r2, r2
 5721 0092 A4F85E20 		strh	r2, [r4, #94]	@ movhi
4525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5722              		.loc 1 4525 0
 5723 0096 DF69     		ldr	r7, [r3, #28]
 5724              	.LVL615:
4528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5725              		.loc 1 4528 0
 5726 0098 7807     		lsls	r0, r7, #29
 5727 009a 2CD0     		beq	.L606
4531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5728              		.loc 1 4531 0
 5729 009c F907     		lsls	r1, r7, #31
 5730 009e 0AD5     		bpl	.L607
4531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5731              		.loc 1 4531 0 is_stmt 0 discriminator 1
 5732 00a0 019A     		ldr	r2, [sp, #4]
 5733 00a2 D205     		lsls	r2, r2, #23
 5734 00a4 07D5     		bpl	.L607
4533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5735              		.loc 1 4533 0 is_stmt 1
 5736 00a6 0121     		movs	r1, #1
 5737 00a8 1962     		str	r1, [r3, #32]
4535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 216


 5738              		.loc 1 4535 0
 5739 00aa D4F89010 		ldr	r1, [r4, #144]
 5740 00ae 41F00101 		orr	r1, r1, #1
 5741 00b2 C4F89010 		str	r1, [r4, #144]
 5742              	.L607:
4539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5743              		.loc 1 4539 0
 5744 00b6 B807     		lsls	r0, r7, #30
 5745 00b8 09D5     		bpl	.L608
4539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5746              		.loc 1 4539 0 is_stmt 0 discriminator 1
 5747 00ba E907     		lsls	r1, r5, #31
 5748 00bc 07D5     		bpl	.L608
4541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5749              		.loc 1 4541 0 is_stmt 1
 5750 00be 0221     		movs	r1, #2
 5751 00c0 1962     		str	r1, [r3, #32]
4543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5752              		.loc 1 4543 0
 5753 00c2 D4F89010 		ldr	r1, [r4, #144]
 5754 00c6 41F00401 		orr	r1, r1, #4
 5755 00ca C4F89010 		str	r1, [r4, #144]
 5756              	.L608:
4547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5757              		.loc 1 4547 0
 5758 00ce 7A07     		lsls	r2, r7, #29
 5759 00d0 09D5     		bpl	.L609
4547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5760              		.loc 1 4547 0 is_stmt 0 discriminator 1
 5761 00d2 E807     		lsls	r0, r5, #31
 5762 00d4 07D5     		bpl	.L609
4549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5763              		.loc 1 4549 0 is_stmt 1
 5764 00d6 0421     		movs	r1, #4
 5765 00d8 1962     		str	r1, [r3, #32]
4551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5766              		.loc 1 4551 0
 5767 00da D4F89030 		ldr	r3, [r4, #144]
 5768 00de 43F00203 		orr	r3, r3, #2
 5769 00e2 C4F89030 		str	r3, [r4, #144]
 5770              	.L609:
4555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5771              		.loc 1 4555 0
 5772 00e6 D4F89030 		ldr	r3, [r4, #144]
 5773 00ea 23B1     		cbz	r3, .L606
4564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5774              		.loc 1 4564 0
 5775 00ec 2046     		mov	r0, r4
 5776 00ee FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5777              	.LVL616:
4566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5778              		.loc 1 4566 0
 5779 00f2 C4F89060 		str	r6, [r4, #144]
 5780              	.L606:
4570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5781              		.loc 1 4570 0
 5782 00f6 B4F85E30 		ldrh	r3, [r4, #94]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 217


 5783 00fa 9BB2     		uxth	r3, r3
 5784 00fc 002B     		cmp	r3, #0
 5785 00fe 95D1     		bne	.L604
 5786              	.L612:
 5787              	.LBB1023:
4573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5788              		.loc 1 4573 0 discriminator 1
 5789 0100 2168     		ldr	r1, [r4]
 5790              	.LVL617:
 5791              	.LBB1024:
 5792              	.LBB1025:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5793              		.loc 2 1155 0 discriminator 1
 5794              		.syntax unified
 5795              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5796 0102 51E8003F 		ldrex r3, [r1]
 5797              	@ 0 "" 2
 5798              	.LVL618:
 5799              		.thumb
 5800              		.syntax unified
 5801              	.LBE1025:
 5802              	.LBE1024:
4573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5803              		.loc 1 4573 0 discriminator 1
 5804 0106 23F48073 		bic	r3, r3, #256
 5805              	.LVL619:
 5806              	.LBB1026:
 5807              	.LBB1027:
 5808              		.loc 2 1206 0 discriminator 1
 5809              		.syntax unified
 5810              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5811 010a 41E80030 		strex r0, r3, [r1]
 5812              	@ 0 "" 2
 5813              	.LVL620:
 5814              		.thumb
 5815              		.syntax unified
 5816 010e 2368     		ldr	r3, [r4]
 5817              	.LVL621:
 5818              	.LBE1027:
 5819              	.LBE1026:
4573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5820              		.loc 1 4573 0 discriminator 1
 5821 0110 0028     		cmp	r0, #0
 5822 0112 F5D1     		bne	.L612
 5823              	.L613:
 5824              	.LVL622:
 5825              	.LBE1023:
 5826              	.LBB1028:
 5827              	.LBB1009:
 5828              	.LBB1010:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5829              		.loc 2 1155 0 discriminator 1
 5830 0114 03F10802 		add	r2, r3, #8
 5831              	.LVL623:
 5832              		.syntax unified
 5833              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5834 0118 52E8001F 		ldrex r1, [r2]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 218


 5835              	@ 0 "" 2
 5836              	.LVL624:
 5837              		.thumb
 5838              		.syntax unified
 5839              	.LBE1010:
 5840              	.LBE1009:
4577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5841              		.loc 1 4577 0 discriminator 1
 5842 011c 01EA0A01 		and	r1, r1, r10
 5843              	.LVL625:
 5844              	.LBB1011:
 5845              	.LBB1012:
 5846              		.loc 2 1206 0 discriminator 1
 5847              		.syntax unified
 5848              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5849 0120 42E80010 		strex r0, r1, [r2]
 5850              	@ 0 "" 2
 5851              	.LVL626:
 5852              		.thumb
 5853              		.syntax unified
 5854              	.LBE1012:
 5855              	.LBE1011:
4577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5856              		.loc 1 4577 0 discriminator 1
 5857 0124 0028     		cmp	r0, #0
 5858 0126 F5D1     		bne	.L613
 5859              	.LBE1028:
4580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5860              		.loc 1 4580 0
 5861 0128 2021     		movs	r1, #32
 5862              	.LVL627:
4588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5863              		.loc 1 4588 0
 5864 012a 5B45     		cmp	r3, fp
4580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5865              		.loc 1 4580 0
 5866 012c C4F88C10 		str	r1, [r4, #140]
4583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5867              		.loc 1 4583 0
 5868 0130 6067     		str	r0, [r4, #116]
4586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5869              		.loc 1 4586 0
 5870 0132 2067     		str	r0, [r4, #112]
4588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5871              		.loc 1 4588 0
 5872 0134 0AD0     		beq	.L614
4591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
 5873              		.loc 1 4591 0
 5874 0136 5968     		ldr	r1, [r3, #4]
 5875 0138 0902     		lsls	r1, r1, #8
 5876 013a 07D5     		bpl	.L614
 5877              	.L615:
 5878              	.LVL628:
 5879              	.LBB1029:
 5880              	.LBB1030:
 5881              	.LBB1031:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 219


 5882              		.loc 2 1155 0 discriminator 1
 5883              		.syntax unified
 5884              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5885 013c 53E8001F 		ldrex r1, [r3]
 5886              	@ 0 "" 2
 5887              	.LVL629:
 5888              		.thumb
 5889              		.syntax unified
 5890              	.LBE1031:
 5891              	.LBE1030:
4594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
 5892              		.loc 1 4594 0 discriminator 1
 5893 0140 21F08061 		bic	r1, r1, #67108864
 5894              	.LVL630:
 5895              	.LBB1032:
 5896              	.LBB1033:
 5897              		.loc 2 1206 0 discriminator 1
 5898              		.syntax unified
 5899              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5900 0144 43E80010 		strex r0, r1, [r3]
 5901              	@ 0 "" 2
 5902              	.LVL631:
 5903              		.thumb
 5904              		.syntax unified
 5905              	.LBE1033:
 5906              	.LBE1032:
4594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
 5907              		.loc 1 4594 0 discriminator 1
 5908 0148 0028     		cmp	r0, #0
 5909 014a F7D1     		bne	.L615
 5910              	.LVL632:
 5911              	.L614:
 5912              	.LBE1029:
4600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5913              		.loc 1 4600 0
 5914 014c E16E     		ldr	r1, [r4, #108]
 5915 014e 0129     		cmp	r1, #1
 5916 0150 13D1     		bne	.L616
4603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5917              		.loc 1 4603 0
 5918 0152 E666     		str	r6, [r4, #108]
 5919              	.L617:
 5920              	.LVL633:
 5921              	.LBB1034:
 5922              	.LBB1035:
 5923              	.LBB1036:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5924              		.loc 2 1155 0 discriminator 1
 5925              		.syntax unified
 5926              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5927 0154 53E8001F 		ldrex r1, [r3]
 5928              	@ 0 "" 2
 5929              	.LVL634:
 5930              		.thumb
 5931              		.syntax unified
 5932              	.LBE1036:
 5933              	.LBE1035:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 220


4606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5934              		.loc 1 4606 0 discriminator 1
 5935 0158 21F01001 		bic	r1, r1, #16
 5936              	.LVL635:
 5937              	.LBB1037:
 5938              	.LBB1038:
 5939              		.loc 2 1206 0 discriminator 1
 5940              		.syntax unified
 5941              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5942 015c 43E80010 		strex r0, r1, [r3]
 5943              	@ 0 "" 2
 5944              	.LVL636:
 5945              		.thumb
 5946              		.syntax unified
 5947              	.LBE1038:
 5948              	.LBE1037:
4606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5949              		.loc 1 4606 0 discriminator 1
 5950 0160 0028     		cmp	r0, #0
 5951 0162 F7D1     		bne	.L617
 5952              	.LBE1034:
4608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
 5953              		.loc 1 4608 0
 5954 0164 D969     		ldr	r1, [r3, #28]
 5955              	.LVL637:
 5956 0166 CA06     		lsls	r2, r1, #27
4611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
 5957              		.loc 1 4611 0
 5958 0168 44BF     		itt	mi
 5959 016a 1021     		movmi	r1, #16
 5960 016c 1962     		strmi	r1, [r3, #32]
4619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5961              		.loc 1 4619 0
 5962 016e 2046     		mov	r0, r4
 5963 0170 B4F85C10 		ldrh	r1, [r4, #92]
 5964 0174 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5965              	.LVL638:
 5966 0178 58E7     		b	.L604
 5967              	.L616:
4630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5968              		.loc 1 4630 0
 5969 017a 2046     		mov	r0, r4
 5970 017c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5971              	.LVL639:
 5972 0180 54E7     		b	.L604
 5973              	.LVL640:
 5974              	.L603:
4656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5975              		.loc 1 4656 0
 5976 0182 9A69     		ldr	r2, [r3, #24]
 5977              	.LVL641:
 5978 0184 42F00802 		orr	r2, r2, #8
 5979 0188 9A61     		str	r2, [r3, #24]
 5980              		.loc 1 4658 0
 5981 018a 73E7     		b	.L602
 5982              	.L663:
 5983              		.align	2
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 221


 5984              	.L662:
 5985 018c 00000000 		.word	UART_RxISR_16BIT
 5986 0190 FEFFFFEF 		.word	-268435458
 5987 0194 00800040 		.word	1073774592
 5988              		.cfi_endproc
 5989              	.LFE398:
 5991              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 5992              		.align	1
 5993              		.syntax unified
 5994              		.thumb
 5995              		.thumb_func
 5996              		.fpu fpv4-sp-d16
 5998              	UART_DMARxHalfCplt:
 5999              	.LFB383:
3717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6000              		.loc 1 3717 0
 6001              		.cfi_startproc
 6002              		@ args = 0, pretend = 0, frame = 0
 6003              		@ frame_needed = 0, uses_anonymous_args = 0
 6004              	.LVL642:
3718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6005              		.loc 1 3718 0
 6006 0000 806A     		ldr	r0, [r0, #40]
 6007              	.LVL643:
3717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6008              		.loc 1 3717 0
 6009 0002 08B5     		push	{r3, lr}
 6010              	.LCFI47:
 6011              		.cfi_def_cfa_offset 8
 6012              		.cfi_offset 3, -8
 6013              		.cfi_offset 14, -4
3722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6014              		.loc 1 3722 0
 6015 0004 0123     		movs	r3, #1
 6016 0006 0367     		str	r3, [r0, #112]
3726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6017              		.loc 1 3726 0
 6018 0008 C36E     		ldr	r3, [r0, #108]
 6019 000a 012B     		cmp	r3, #1
 6020 000c 05D1     		bne	.L665
3733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 6021              		.loc 1 3733 0
 6022 000e B0F85C10 		ldrh	r1, [r0, #92]
 6023 0012 4908     		lsrs	r1, r1, #1
 6024 0014 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 6025              	.LVL644:
 6026              	.L664:
3747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6027              		.loc 1 3747 0
 6028 0018 08BD     		pop	{r3, pc}
 6029              	.LVL645:
 6030              	.L665:
3744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 6031              		.loc 1 3744 0
 6032 001a FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 6033              	.LVL646:
3747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 222


 6034              		.loc 1 3747 0
 6035 001e FBE7     		b	.L664
 6036              		.cfi_endproc
 6037              	.LFE383:
 6039              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 6040              		.align	1
 6041              		.syntax unified
 6042              		.thumb
 6043              		.thumb_func
 6044              		.fpu fpv4-sp-d16
 6046              	UART_DMAReceiveCplt:
 6047              	.LFB382:
3656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6048              		.loc 1 3656 0
 6049              		.cfi_startproc
 6050              		@ args = 0, pretend = 0, frame = 0
 6051              		@ frame_needed = 0, uses_anonymous_args = 0
 6052              	.LVL647:
 6053 0000 08B5     		push	{r3, lr}
 6054              	.LCFI48:
 6055              		.cfi_def_cfa_offset 8
 6056              		.cfi_offset 3, -8
 6057              		.cfi_offset 14, -4
3656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6058              		.loc 1 3656 0
 6059 0002 0346     		mov	r3, r0
3657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6060              		.loc 1 3657 0
 6061 0004 806A     		ldr	r0, [r0, #40]
 6062              	.LVL648:
3660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6063              		.loc 1 3660 0
 6064 0006 1B68     		ldr	r3, [r3]
 6065              	.LVL649:
 6066 0008 1B68     		ldr	r3, [r3]
 6067 000a 13F02003 		ands	r3, r3, #32
 6068 000e 31D1     		bne	.L668
3662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6069              		.loc 1 3662 0
 6070 0010 A0F85E30 		strh	r3, [r0, #94]	@ movhi
 6071              	.L669:
 6072              	.LBB1039:
3665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6073              		.loc 1 3665 0 discriminator 1
 6074 0014 0268     		ldr	r2, [r0]
 6075              	.LVL650:
 6076              	.LBB1040:
 6077              	.LBB1041:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6078              		.loc 2 1155 0 discriminator 1
 6079              		.syntax unified
 6080              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6081 0016 52E8003F 		ldrex r3, [r2]
 6082              	@ 0 "" 2
 6083              	.LVL651:
 6084              		.thumb
 6085              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 223


 6086              	.LBE1041:
 6087              	.LBE1040:
3665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6088              		.loc 1 3665 0 discriminator 1
 6089 001a 23F48073 		bic	r3, r3, #256
 6090              	.LVL652:
 6091              	.LBB1042:
 6092              	.LBB1043:
 6093              		.loc 2 1206 0 discriminator 1
 6094              		.syntax unified
 6095              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6096 001e 42E80031 		strex r1, r3, [r2]
 6097              	@ 0 "" 2
 6098              	.LVL653:
 6099              		.thumb
 6100              		.syntax unified
 6101 0022 0368     		ldr	r3, [r0]
 6102              	.LVL654:
 6103              	.LBE1043:
 6104              	.LBE1042:
3665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6105              		.loc 1 3665 0 discriminator 1
 6106 0024 0029     		cmp	r1, #0
 6107 0026 F5D1     		bne	.L669
 6108              	.L670:
 6109              	.LVL655:
 6110              	.LBE1039:
 6111              	.LBB1044:
 6112              	.LBB1045:
 6113              	.LBB1046:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6114              		.loc 2 1155 0 discriminator 1
 6115 0028 03F10802 		add	r2, r3, #8
 6116              	.LVL656:
 6117              		.syntax unified
 6118              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6119 002c 52E8002F 		ldrex r2, [r2]
 6120              	@ 0 "" 2
 6121              	.LVL657:
 6122              		.thumb
 6123              		.syntax unified
 6124              	.LBE1046:
 6125              	.LBE1045:
3666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6126              		.loc 1 3666 0 discriminator 1
 6127 0030 22F00102 		bic	r2, r2, #1
 6128              	.LVL658:
 6129              	.LBB1047:
 6130              	.LBB1048:
 6131              		.loc 2 1206 0 discriminator 1
 6132 0034 03F1080C 		add	ip, r3, #8
 6133              	.LVL659:
 6134              		.syntax unified
 6135              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6136 0038 4CE80021 		strex r1, r2, [ip]
 6137              	@ 0 "" 2
 6138              	.LVL660:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 224


 6139              		.thumb
 6140              		.syntax unified
 6141              	.LBE1048:
 6142              	.LBE1047:
3666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6143              		.loc 1 3666 0 discriminator 1
 6144 003c 0029     		cmp	r1, #0
 6145 003e F3D1     		bne	.L670
 6146              	.LVL661:
 6147              	.L671:
 6148              	.LBE1044:
 6149              	.LBB1049:
 6150              	.LBB1050:
 6151              	.LBB1051:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6152              		.loc 2 1155 0 discriminator 1
 6153 0040 03F10802 		add	r2, r3, #8
 6154              	.LVL662:
 6155              		.syntax unified
 6156              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6157 0044 52E8002F 		ldrex r2, [r2]
 6158              	@ 0 "" 2
 6159              	.LVL663:
 6160              		.thumb
 6161              		.syntax unified
 6162              	.LBE1051:
 6163              	.LBE1050:
3670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6164              		.loc 1 3670 0 discriminator 1
 6165 0048 22F04002 		bic	r2, r2, #64
 6166              	.LVL664:
 6167              	.LBB1052:
 6168              	.LBB1053:
 6169              		.loc 2 1206 0 discriminator 1
 6170 004c 03F1080C 		add	ip, r3, #8
 6171              	.LVL665:
 6172              		.syntax unified
 6173              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6174 0050 4CE80021 		strex r1, r2, [ip]
 6175              	@ 0 "" 2
 6176              	.LVL666:
 6177              		.thumb
 6178              		.syntax unified
 6179              	.LBE1053:
 6180              	.LBE1052:
3670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6181              		.loc 1 3670 0 discriminator 1
 6182 0054 0029     		cmp	r1, #0
 6183 0056 F3D1     		bne	.L671
 6184              	.LBE1049:
3673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6185              		.loc 1 3673 0
 6186 0058 2022     		movs	r2, #32
 6187              	.LVL667:
 6188 005a C0F88C20 		str	r2, [r0, #140]
3676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 6189              		.loc 1 3676 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 225


 6190 005e C26E     		ldr	r2, [r0, #108]
 6191 0060 012A     		cmp	r2, #1
 6192 0062 07D1     		bne	.L668
 6193              	.L672:
 6194              	.LVL668:
 6195              	.LBB1054:
 6196              	.LBB1055:
 6197              	.LBB1056:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6198              		.loc 2 1155 0 discriminator 1
 6199              		.syntax unified
 6200              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6201 0064 53E8002F 		ldrex r2, [r3]
 6202              	@ 0 "" 2
 6203              	.LVL669:
 6204              		.thumb
 6205              		.syntax unified
 6206              	.LBE1056:
 6207              	.LBE1055:
3678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 6208              		.loc 1 3678 0 discriminator 1
 6209 0068 22F01002 		bic	r2, r2, #16
 6210              	.LVL670:
 6211              	.LBB1057:
 6212              	.LBB1058:
 6213              		.loc 2 1206 0 discriminator 1
 6214              		.syntax unified
 6215              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6216 006c 43E80021 		strex r1, r2, [r3]
 6217              	@ 0 "" 2
 6218              	.LVL671:
 6219              		.thumb
 6220              		.syntax unified
 6221              	.LBE1058:
 6222              	.LBE1057:
3678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 6223              		.loc 1 3678 0 discriminator 1
 6224 0070 0029     		cmp	r1, #0
 6225 0072 F7D1     		bne	.L672
 6226              	.LVL672:
 6227              	.L668:
 6228              	.LBE1054:
3684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6229              		.loc 1 3684 0
 6230 0074 0023     		movs	r3, #0
 6231 0076 0367     		str	r3, [r0, #112]
3688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6232              		.loc 1 3688 0
 6233 0078 C36E     		ldr	r3, [r0, #108]
 6234 007a 012B     		cmp	r3, #1
 6235 007c 04D1     		bne	.L673
3695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 6236              		.loc 1 3695 0
 6237 007e B0F85C10 		ldrh	r1, [r0, #92]
 6238 0082 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 6239              	.LVL673:
 6240              	.L667:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 226


3709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6241              		.loc 1 3709 0
 6242 0086 08BD     		pop	{r3, pc}
 6243              	.LVL674:
 6244              	.L673:
3706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 6245              		.loc 1 3706 0
 6246 0088 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 6247              	.LVL675:
3709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6248              		.loc 1 3709 0
 6249 008c FBE7     		b	.L667
 6250              		.cfi_endproc
 6251              	.LFE382:
 6253              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 6254              		.align	1
 6255              		.global	HAL_UART_ReceiverTimeout_Config
 6256              		.syntax unified
 6257              		.thumb
 6258              		.thumb_func
 6259              		.fpu fpv4-sp-d16
 6261              	HAL_UART_ReceiverTimeout_Config:
 6262              	.LFB361:
2710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 6263              		.loc 1 2710 0
 6264              		.cfi_startproc
 6265              		@ args = 0, pretend = 0, frame = 0
 6266              		@ frame_needed = 0, uses_anonymous_args = 0
 6267              		@ link register save eliminated.
 6268              	.LVL676:
2711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6269              		.loc 1 2711 0
 6270 0000 044B     		ldr	r3, .L681
 6271 0002 0268     		ldr	r2, [r0]
 6272 0004 9A42     		cmp	r2, r3
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6273              		.loc 1 2714 0
 6274 0006 1FBF     		itttt	ne
 6275 0008 5369     		ldrne	r3, [r2, #20]
 6276 000a 03F07F43 		andne	r3, r3, #-16777216
 6277 000e 1943     		orrne	r1, r1, r3
 6278              	.LVL677:
 6279 0010 5161     		strne	r1, [r2, #20]
2716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6280              		.loc 1 2716 0
 6281 0012 7047     		bx	lr
 6282              	.L682:
 6283              		.align	2
 6284              	.L681:
 6285 0014 00800040 		.word	1073774592
 6286              		.cfi_endproc
 6287              	.LFE361:
 6289              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 6290              		.align	1
 6291              		.global	HAL_UART_EnableReceiverTimeout
 6292              		.syntax unified
 6293              		.thumb
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 227


 6294              		.thumb_func
 6295              		.fpu fpv4-sp-d16
 6297              	HAL_UART_EnableReceiverTimeout:
 6298              	.LFB362:
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 6299              		.loc 1 2725 0
 6300              		.cfi_startproc
 6301              		@ args = 0, pretend = 0, frame = 0
 6302              		@ frame_needed = 0, uses_anonymous_args = 0
 6303              		@ link register save eliminated.
 6304              	.LVL678:
2726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6305              		.loc 1 2726 0
 6306 0000 0368     		ldr	r3, [r0]
 6307 0002 0E4A     		ldr	r2, .L688
 6308 0004 9342     		cmp	r3, r2
 6309 0006 15D0     		beq	.L685
2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 6310              		.loc 1 2728 0
 6311 0008 D0F88810 		ldr	r1, [r0, #136]
 6312 000c 2029     		cmp	r1, #32
 6313 000e 13D1     		bne	.L687
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6314              		.loc 1 2731 0
 6315 0010 90F88420 		ldrb	r2, [r0, #132]	@ zero_extendqisi2
 6316 0014 012A     		cmp	r2, #1
 6317 0016 0FD0     		beq	.L687
2733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6318              		.loc 1 2733 0 discriminator 2
 6319 0018 2422     		movs	r2, #36
 6320 001a C0F88820 		str	r2, [r0, #136]
2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6321              		.loc 1 2736 0 discriminator 2
 6322 001e 5A68     		ldr	r2, [r3, #4]
 6323 0020 42F40002 		orr	r2, r2, #8388608
 6324 0024 5A60     		str	r2, [r3, #4]
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6325              		.loc 1 2741 0 discriminator 2
 6326 0026 0023     		movs	r3, #0
2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6327              		.loc 1 2738 0 discriminator 2
 6328 0028 C0F88810 		str	r1, [r0, #136]
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6329              		.loc 1 2741 0 discriminator 2
 6330 002c 80F88430 		strb	r3, [r0, #132]
2743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 6331              		.loc 1 2743 0 discriminator 2
 6332 0030 1846     		mov	r0, r3
 6333              	.LVL679:
 6334 0032 7047     		bx	lr
 6335              	.LVL680:
 6336              	.L685:
2752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6337              		.loc 1 2752 0
 6338 0034 0120     		movs	r0, #1
 6339              	.LVL681:
 6340 0036 7047     		bx	lr
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 228


 6341              	.LVL682:
 6342              	.L687:
2747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 6343              		.loc 1 2747 0
 6344 0038 0220     		movs	r0, #2
 6345              	.LVL683:
2754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6346              		.loc 1 2754 0
 6347 003a 7047     		bx	lr
 6348              	.L689:
 6349              		.align	2
 6350              	.L688:
 6351 003c 00800040 		.word	1073774592
 6352              		.cfi_endproc
 6353              	.LFE362:
 6355              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 6356              		.align	1
 6357              		.global	HAL_UART_DisableReceiverTimeout
 6358              		.syntax unified
 6359              		.thumb
 6360              		.thumb_func
 6361              		.fpu fpv4-sp-d16
 6363              	HAL_UART_DisableReceiverTimeout:
 6364              	.LFB363:
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 6365              		.loc 1 2763 0
 6366              		.cfi_startproc
 6367              		@ args = 0, pretend = 0, frame = 0
 6368              		@ frame_needed = 0, uses_anonymous_args = 0
 6369              		@ link register save eliminated.
 6370              	.LVL684:
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6371              		.loc 1 2764 0
 6372 0000 0368     		ldr	r3, [r0]
 6373 0002 0E4A     		ldr	r2, .L695
 6374 0004 9342     		cmp	r3, r2
 6375 0006 15D0     		beq	.L692
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 6376              		.loc 1 2766 0
 6377 0008 D0F88810 		ldr	r1, [r0, #136]
 6378 000c 2029     		cmp	r1, #32
 6379 000e 13D1     		bne	.L694
2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6380              		.loc 1 2769 0
 6381 0010 90F88420 		ldrb	r2, [r0, #132]	@ zero_extendqisi2
 6382 0014 012A     		cmp	r2, #1
 6383 0016 0FD0     		beq	.L694
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6384              		.loc 1 2771 0 discriminator 2
 6385 0018 2422     		movs	r2, #36
 6386 001a C0F88820 		str	r2, [r0, #136]
2774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6387              		.loc 1 2774 0 discriminator 2
 6388 001e 5A68     		ldr	r2, [r3, #4]
 6389 0020 22F40002 		bic	r2, r2, #8388608
 6390 0024 5A60     		str	r2, [r3, #4]
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 229


 6391              		.loc 1 2779 0 discriminator 2
 6392 0026 0023     		movs	r3, #0
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6393              		.loc 1 2776 0 discriminator 2
 6394 0028 C0F88810 		str	r1, [r0, #136]
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6395              		.loc 1 2779 0 discriminator 2
 6396 002c 80F88430 		strb	r3, [r0, #132]
2781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 6397              		.loc 1 2781 0 discriminator 2
 6398 0030 1846     		mov	r0, r3
 6399              	.LVL685:
 6400 0032 7047     		bx	lr
 6401              	.LVL686:
 6402              	.L692:
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6403              		.loc 1 2790 0
 6404 0034 0120     		movs	r0, #1
 6405              	.LVL687:
 6406 0036 7047     		bx	lr
 6407              	.LVL688:
 6408              	.L694:
2785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 6409              		.loc 1 2785 0
 6410 0038 0220     		movs	r0, #2
 6411              	.LVL689:
2792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6412              		.loc 1 2792 0
 6413 003a 7047     		bx	lr
 6414              	.L696:
 6415              		.align	2
 6416              	.L695:
 6417 003c 00800040 		.word	1073774592
 6418              		.cfi_endproc
 6419              	.LFE363:
 6421              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 6422              		.align	1
 6423              		.global	HAL_MultiProcessor_EnterMuteMode
 6424              		.syntax unified
 6425              		.thumb
 6426              		.thumb_func
 6427              		.fpu fpv4-sp-d16
 6429              	HAL_MultiProcessor_EnterMuteMode:
 6430              	.LFB366:
2841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 6431              		.loc 1 2841 0
 6432              		.cfi_startproc
 6433              		@ args = 0, pretend = 0, frame = 0
 6434              		@ frame_needed = 0, uses_anonymous_args = 0
 6435              		@ link register save eliminated.
 6436              	.LVL690:
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6437              		.loc 1 2842 0
 6438 0000 0268     		ldr	r2, [r0]
 6439 0002 9369     		ldr	r3, [r2, #24]
 6440 0004 43F00403 		orr	r3, r3, #4
 6441 0008 9361     		str	r3, [r2, #24]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 230


2843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6442              		.loc 1 2843 0
 6443 000a 7047     		bx	lr
 6444              		.cfi_endproc
 6445              	.LFE366:
 6447              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 6448              		.align	1
 6449              		.global	HAL_HalfDuplex_EnableTransmitter
 6450              		.syntax unified
 6451              		.thumb
 6452              		.thumb_func
 6453              		.fpu fpv4-sp-d16
 6455              	HAL_HalfDuplex_EnableTransmitter:
 6456              	.LFB367:
2851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6457              		.loc 1 2851 0
 6458              		.cfi_startproc
 6459              		@ args = 0, pretend = 0, frame = 0
 6460              		@ frame_needed = 0, uses_anonymous_args = 0
 6461              	.LVL691:
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6462              		.loc 1 2852 0
 6463 0000 90F88430 		ldrb	r3, [r0, #132]	@ zero_extendqisi2
 6464 0004 012B     		cmp	r3, #1
2851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6465              		.loc 1 2851 0
 6466 0006 10B5     		push	{r4, lr}
 6467              	.LCFI49:
 6468              		.cfi_def_cfa_offset 8
 6469              		.cfi_offset 4, -8
 6470              		.cfi_offset 14, -4
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6471              		.loc 1 2852 0
 6472 0008 1ED0     		beq	.L702
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6473              		.loc 1 2852 0 is_stmt 0 discriminator 2
 6474 000a 0123     		movs	r3, #1
 6475 000c 80F88430 		strb	r3, [r0, #132]
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6476              		.loc 1 2853 0 is_stmt 1 discriminator 2
 6477 0010 2423     		movs	r3, #36
 6478 0012 C0F88830 		str	r3, [r0, #136]
 6479              	.L700:
 6480              	.LBB1059:
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6481              		.loc 1 2856 0 discriminator 1
 6482 0016 0268     		ldr	r2, [r0]
 6483              	.LVL692:
 6484              	.LBB1060:
 6485              	.LBB1061:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6486              		.loc 2 1155 0 discriminator 1
 6487              		.syntax unified
 6488              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6489 0018 52E8003F 		ldrex r3, [r2]
 6490              	@ 0 "" 2
 6491              	.LVL693:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 231


 6492              		.thumb
 6493              		.syntax unified
 6494              	.LBE1061:
 6495              	.LBE1060:
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6496              		.loc 1 2856 0 discriminator 1
 6497 001c 23F00C03 		bic	r3, r3, #12
 6498              	.LVL694:
 6499              	.LBB1062:
 6500              	.LBB1063:
 6501              		.loc 2 1206 0 discriminator 1
 6502              		.syntax unified
 6503              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6504 0020 42E80034 		strex r4, r3, [r2]
 6505              	@ 0 "" 2
 6506              	.LVL695:
 6507              		.thumb
 6508              		.syntax unified
 6509 0024 0168     		ldr	r1, [r0]
 6510              	.LBE1063:
 6511              	.LBE1062:
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6512              		.loc 1 2856 0 discriminator 1
 6513 0026 002C     		cmp	r4, #0
 6514 0028 F5D1     		bne	.L700
 6515              	.LVL696:
 6516              	.L701:
 6517              	.LBE1059:
 6518              	.LBB1064:
 6519              	.LBB1065:
 6520              	.LBB1066:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6521              		.loc 2 1155 0 discriminator 1
 6522              		.syntax unified
 6523              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6524 002a 51E8002F 		ldrex r2, [r1]
 6525              	@ 0 "" 2
 6526              	.LVL697:
 6527              		.thumb
 6528              		.syntax unified
 6529              	.LBE1066:
 6530              	.LBE1065:
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6531              		.loc 1 2859 0 discriminator 1
 6532 002e 42F00802 		orr	r2, r2, #8
 6533              	.LVL698:
 6534              	.LBB1067:
 6535              	.LBB1068:
 6536              		.loc 2 1206 0 discriminator 1
 6537              		.syntax unified
 6538              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6539 0032 41E80023 		strex r3, r2, [r1]
 6540              	@ 0 "" 2
 6541              	.LVL699:
 6542              		.thumb
 6543              		.syntax unified
 6544              	.LBE1068:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 232


 6545              	.LBE1067:
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6546              		.loc 1 2859 0 discriminator 1
 6547 0036 002B     		cmp	r3, #0
 6548 0038 F7D1     		bne	.L701
 6549              	.LBE1064:
2861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6550              		.loc 1 2861 0
 6551 003a 2022     		movs	r2, #32
 6552              	.LVL700:
 6553 003c C0F88820 		str	r2, [r0, #136]
2863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6554              		.loc 1 2863 0
 6555 0040 80F88430 		strb	r3, [r0, #132]
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6556              		.loc 1 2865 0
 6557 0044 1846     		mov	r0, r3
 6558              	.LVL701:
 6559              	.L699:
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6560              		.loc 1 2866 0
 6561 0046 10BD     		pop	{r4, pc}
 6562              	.LVL702:
 6563              	.L702:
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6564              		.loc 1 2852 0
 6565 0048 0220     		movs	r0, #2
 6566              	.LVL703:
 6567 004a FCE7     		b	.L699
 6568              		.cfi_endproc
 6569              	.LFE367:
 6571              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 6572              		.align	1
 6573              		.global	HAL_HalfDuplex_EnableReceiver
 6574              		.syntax unified
 6575              		.thumb
 6576              		.thumb_func
 6577              		.fpu fpv4-sp-d16
 6579              	HAL_HalfDuplex_EnableReceiver:
 6580              	.LFB368:
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6581              		.loc 1 2874 0
 6582              		.cfi_startproc
 6583              		@ args = 0, pretend = 0, frame = 0
 6584              		@ frame_needed = 0, uses_anonymous_args = 0
 6585              	.LVL704:
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6586              		.loc 1 2875 0
 6587 0000 90F88430 		ldrb	r3, [r0, #132]	@ zero_extendqisi2
 6588 0004 012B     		cmp	r3, #1
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6589              		.loc 1 2874 0
 6590 0006 10B5     		push	{r4, lr}
 6591              	.LCFI50:
 6592              		.cfi_def_cfa_offset 8
 6593              		.cfi_offset 4, -8
 6594              		.cfi_offset 14, -4
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 233


2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6595              		.loc 1 2875 0
 6596 0008 1ED0     		beq	.L709
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6597              		.loc 1 2875 0 is_stmt 0 discriminator 2
 6598 000a 0123     		movs	r3, #1
 6599 000c 80F88430 		strb	r3, [r0, #132]
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6600              		.loc 1 2876 0 is_stmt 1 discriminator 2
 6601 0010 2423     		movs	r3, #36
 6602 0012 C0F88830 		str	r3, [r0, #136]
 6603              	.L707:
 6604              	.LBB1069:
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6605              		.loc 1 2879 0 discriminator 1
 6606 0016 0268     		ldr	r2, [r0]
 6607              	.LVL705:
 6608              	.LBB1070:
 6609              	.LBB1071:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6610              		.loc 2 1155 0 discriminator 1
 6611              		.syntax unified
 6612              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6613 0018 52E8003F 		ldrex r3, [r2]
 6614              	@ 0 "" 2
 6615              	.LVL706:
 6616              		.thumb
 6617              		.syntax unified
 6618              	.LBE1071:
 6619              	.LBE1070:
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6620              		.loc 1 2879 0 discriminator 1
 6621 001c 23F00C03 		bic	r3, r3, #12
 6622              	.LVL707:
 6623              	.LBB1072:
 6624              	.LBB1073:
 6625              		.loc 2 1206 0 discriminator 1
 6626              		.syntax unified
 6627              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6628 0020 42E80034 		strex r4, r3, [r2]
 6629              	@ 0 "" 2
 6630              	.LVL708:
 6631              		.thumb
 6632              		.syntax unified
 6633 0024 0168     		ldr	r1, [r0]
 6634              	.LBE1073:
 6635              	.LBE1072:
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6636              		.loc 1 2879 0 discriminator 1
 6637 0026 002C     		cmp	r4, #0
 6638 0028 F5D1     		bne	.L707
 6639              	.LVL709:
 6640              	.L708:
 6641              	.LBE1069:
 6642              	.LBB1074:
 6643              	.LBB1075:
 6644              	.LBB1076:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 234


1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6645              		.loc 2 1155 0 discriminator 1
 6646              		.syntax unified
 6647              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6648 002a 51E8002F 		ldrex r2, [r1]
 6649              	@ 0 "" 2
 6650              	.LVL710:
 6651              		.thumb
 6652              		.syntax unified
 6653              	.LBE1076:
 6654              	.LBE1075:
2882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6655              		.loc 1 2882 0 discriminator 1
 6656 002e 42F00402 		orr	r2, r2, #4
 6657              	.LVL711:
 6658              	.LBB1077:
 6659              	.LBB1078:
 6660              		.loc 2 1206 0 discriminator 1
 6661              		.syntax unified
 6662              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6663 0032 41E80023 		strex r3, r2, [r1]
 6664              	@ 0 "" 2
 6665              	.LVL712:
 6666              		.thumb
 6667              		.syntax unified
 6668              	.LBE1078:
 6669              	.LBE1077:
2882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6670              		.loc 1 2882 0 discriminator 1
 6671 0036 002B     		cmp	r3, #0
 6672 0038 F7D1     		bne	.L708
 6673              	.LBE1074:
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6674              		.loc 1 2884 0
 6675 003a 2022     		movs	r2, #32
 6676              	.LVL713:
 6677 003c C0F88820 		str	r2, [r0, #136]
2886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6678              		.loc 1 2886 0
 6679 0040 80F88430 		strb	r3, [r0, #132]
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6680              		.loc 1 2888 0
 6681 0044 1846     		mov	r0, r3
 6682              	.LVL714:
 6683              	.L706:
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6684              		.loc 1 2889 0
 6685 0046 10BD     		pop	{r4, pc}
 6686              	.LVL715:
 6687              	.L709:
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6688              		.loc 1 2875 0
 6689 0048 0220     		movs	r0, #2
 6690              	.LVL716:
 6691 004a FCE7     		b	.L706
 6692              		.cfi_endproc
 6693              	.LFE368:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 235


 6695              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 6696              		.align	1
 6697              		.global	HAL_LIN_SendBreak
 6698              		.syntax unified
 6699              		.thumb
 6700              		.thumb_func
 6701              		.fpu fpv4-sp-d16
 6703              	HAL_LIN_SendBreak:
 6704              	.LFB369:
2898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
 6705              		.loc 1 2898 0
 6706              		.cfi_startproc
 6707              		@ args = 0, pretend = 0, frame = 0
 6708              		@ frame_needed = 0, uses_anonymous_args = 0
 6709              		@ link register save eliminated.
 6710              	.LVL717:
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6711              		.loc 1 2902 0
 6712 0000 90F88430 		ldrb	r3, [r0, #132]	@ zero_extendqisi2
 6713 0004 012B     		cmp	r3, #1
 6714 0006 0FD0     		beq	.L714
2907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6715              		.loc 1 2907 0 discriminator 2
 6716 0008 0268     		ldr	r2, [r0]
2904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6717              		.loc 1 2904 0 discriminator 2
 6718 000a 2423     		movs	r3, #36
 6719 000c C0F88830 		str	r3, [r0, #136]
2907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6720              		.loc 1 2907 0 discriminator 2
 6721 0010 9369     		ldr	r3, [r2, #24]
 6722 0012 43F00203 		orr	r3, r3, #2
 6723 0016 9361     		str	r3, [r2, #24]
2909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6724              		.loc 1 2909 0 discriminator 2
 6725 0018 2023     		movs	r3, #32
 6726 001a C0F88830 		str	r3, [r0, #136]
2911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6727              		.loc 1 2911 0 discriminator 2
 6728 001e 0023     		movs	r3, #0
 6729 0020 80F88430 		strb	r3, [r0, #132]
2913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6730              		.loc 1 2913 0 discriminator 2
 6731 0024 1846     		mov	r0, r3
 6732              	.LVL718:
 6733 0026 7047     		bx	lr
 6734              	.LVL719:
 6735              	.L714:
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6736              		.loc 1 2902 0
 6737 0028 0220     		movs	r0, #2
 6738              	.LVL720:
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6739              		.loc 1 2914 0
 6740 002a 7047     		bx	lr
 6741              		.cfi_endproc
 6742              	.LFE369:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 236


 6744              		.section	.text.HAL_UART_GetState,"ax",%progbits
 6745              		.align	1
 6746              		.global	HAL_UART_GetState
 6747              		.syntax unified
 6748              		.thumb
 6749              		.thumb_func
 6750              		.fpu fpv4-sp-d16
 6752              	HAL_UART_GetState:
 6753              	.LFB370:
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp1;
 6754              		.loc 1 2943 0
 6755              		.cfi_startproc
 6756              		@ args = 0, pretend = 0, frame = 0
 6757              		@ frame_needed = 0, uses_anonymous_args = 0
 6758              		@ link register save eliminated.
 6759              	.LVL721:
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp2 = huart->RxState;
 6760              		.loc 1 2946 0
 6761 0000 D0F88820 		ldr	r2, [r0, #136]
 6762              	.LVL722:
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6763              		.loc 1 2947 0
 6764 0004 D0F88C00 		ldr	r0, [r0, #140]
 6765              	.LVL723:
2950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6766              		.loc 1 2950 0
 6767 0008 1043     		orrs	r0, r0, r2
 6768              	.LVL724:
 6769 000a 7047     		bx	lr
 6770              		.cfi_endproc
 6771              	.LFE370:
 6773              		.section	.text.HAL_UART_GetError,"ax",%progbits
 6774              		.align	1
 6775              		.global	HAL_UART_GetError
 6776              		.syntax unified
 6777              		.thumb
 6778              		.thumb_func
 6779              		.fpu fpv4-sp-d16
 6781              	HAL_UART_GetError:
 6782              	.LFB371:
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return huart->ErrorCode;
 6783              		.loc 1 2959 0
 6784              		.cfi_startproc
 6785              		@ args = 0, pretend = 0, frame = 0
 6786              		@ frame_needed = 0, uses_anonymous_args = 0
 6787              		@ link register save eliminated.
 6788              	.LVL725:
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6789              		.loc 1 2960 0
 6790 0000 D0F89000 		ldr	r0, [r0, #144]
 6791              	.LVL726:
2961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 6792              		.loc 1 2961 0
 6793 0004 7047     		bx	lr
 6794              		.cfi_endproc
 6795              	.LFE371:
 6797              		.global	__aeabi_uldivmod
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 237


 6798              		.global	__aeabi_ldivmod
 6799              		.section	.text.UART_SetConfig,"ax",%progbits
 6800              		.align	1
 6801              		.global	UART_SetConfig
 6802              		.syntax unified
 6803              		.thumb
 6804              		.thumb_func
 6805              		.fpu fpv4-sp-d16
 6807              	UART_SetConfig:
 6808              	.LFB372:
3005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tmpreg;
 6809              		.loc 1 3005 0
 6810              		.cfi_startproc
 6811              		@ args = 0, pretend = 0, frame = 0
 6812              		@ frame_needed = 0, uses_anonymous_args = 0
 6813              	.LVL727:
 6814 0000 2DE9F048 		push	{r4, r5, r6, r7, fp, lr}
 6815              	.LCFI51:
 6816              		.cfi_def_cfa_offset 24
 6817              		.cfi_offset 4, -24
 6818              		.cfi_offset 5, -20
 6819              		.cfi_offset 6, -16
 6820              		.cfi_offset 7, -12
 6821              		.cfi_offset 11, -8
 6822              		.cfi_offset 14, -4
3005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tmpreg;
 6823              		.loc 1 3005 0
 6824 0004 0446     		mov	r4, r0
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6825              		.loc 1 3017 0
 6826 0006 0368     		ldr	r3, [r0]
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 6827              		.loc 1 3040 0
 6828 0008 2169     		ldr	r1, [r4, #16]
 6829 000a A268     		ldr	r2, [r4, #8]
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6830              		.loc 1 3041 0
 6831 000c 1D68     		ldr	r5, [r3]
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 6832              		.loc 1 3040 0
 6833 000e C069     		ldr	r0, [r0, #28]
 6834              	.LVL728:
 6835 0010 0A43     		orrs	r2, r2, r1
 6836 0012 6169     		ldr	r1, [r4, #20]
 6837 0014 0A43     		orrs	r2, r2, r1
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6838              		.loc 1 3041 0
 6839 0016 9949     		ldr	r1, .L829
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 6840              		.loc 1 3040 0
 6841 0018 0243     		orrs	r2, r2, r0
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6842              		.loc 1 3041 0
 6843 001a 2940     		ands	r1, r1, r5
 6844 001c 0A43     		orrs	r2, r2, r1
 6845 001e 1A60     		str	r2, [r3]
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 238


 6846              		.loc 1 3046 0
 6847 0020 5A68     		ldr	r2, [r3, #4]
 6848 0022 E168     		ldr	r1, [r4, #12]
 6849 0024 22F44052 		bic	r2, r2, #12288
 6850 0028 0A43     		orrs	r2, r2, r1
 6851 002a 5A60     		str	r2, [r3, #4]
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6852              		.loc 1 3056 0
 6853 002c 944A     		ldr	r2, .L829+4
3054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6854              		.loc 1 3054 0
 6855 002e A169     		ldr	r1, [r4, #24]
 6856              	.LVL729:
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6857              		.loc 1 3056 0
 6858 0030 9342     		cmp	r3, r2
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6859              		.loc 1 3058 0
 6860 0032 1CBF     		itt	ne
 6861 0034 226A     		ldrne	r2, [r4, #32]
 6862              	.LVL730:
 6863 0036 1143     		orrne	r1, r1, r2
 6864              	.LVL731:
3060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6865              		.loc 1 3060 0
 6866 0038 9A68     		ldr	r2, [r3, #8]
 6867              	.LVL732:
 6868 003a 22F06E42 		bic	r2, r2, #-301989888
 6869 003e 22F43062 		bic	r2, r2, #2816
 6870 0042 0A43     		orrs	r2, r2, r1
 6871 0044 9A60     		str	r2, [r3, #8]
3065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6872              		.loc 1 3065 0
 6873 0046 DA6A     		ldr	r2, [r3, #44]
 6874 0048 616A     		ldr	r1, [r4, #36]
 6875 004a 22F00F02 		bic	r2, r2, #15
 6876 004e 0A43     		orrs	r2, r2, r1
 6877 0050 DA62     		str	r2, [r3, #44]
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6878              		.loc 1 3068 0
 6879 0052 8C4A     		ldr	r2, .L829+8
 6880 0054 9342     		cmp	r3, r2
 6881              	.LVL733:
 6882 0056 13D1     		bne	.L719
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6883              		.loc 1 3068 0 is_stmt 0 discriminator 1
 6884 0058 8B4B     		ldr	r3, .L829+12
 6885              	.LVL734:
 6886 005a 8C4A     		ldr	r2, .L829+16
 6887 005c D3F88830 		ldr	r3, [r3, #136]
 6888 0060 03F00303 		and	r3, r3, #3
 6889              	.L822:
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6890              		.loc 1 3124 0 is_stmt 1 discriminator 13
 6891 0064 B0F5004F 		cmp	r0, #32768
 6892 0068 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6893              	.LVL735:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 239


 6894 006a 40F09180 		bne	.L739
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 6895              		.loc 1 3126 0
 6896 006e 082B     		cmp	r3, #8
 6897 0070 34D8     		bhi	.L767
 6898 0072 DFE803F0 		tbb	[pc, r3]
 6899              	.L741:
 6900 0076 E2       		.byte	(.L740-.L741)/2
 6901 0077 85       		.byte	(.L742-.L741)/2
 6902 0078 8B       		.byte	(.L766-.L741)/2
 6903 0079 33       		.byte	(.L767-.L741)/2
 6904 007a D7       		.byte	(.L744-.L741)/2
 6905 007b 33       		.byte	(.L767-.L741)/2
 6906 007c 33       		.byte	(.L767-.L741)/2
 6907 007d 33       		.byte	(.L767-.L741)/2
 6908 007e 88       		.byte	(.L760-.L741)/2
 6909              	.LVL736:
 6910 007f 00       		.p2align 1
 6911              	.L719:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6912              		.loc 1 3068 0 discriminator 2
 6913 0080 834A     		ldr	r2, .L829+20
 6914 0082 9342     		cmp	r3, r2
 6915 0084 06D1     		bne	.L721
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6916              		.loc 1 3068 0 is_stmt 0 discriminator 13
 6917 0086 804B     		ldr	r3, .L829+12
 6918              	.LVL737:
 6919 0088 824A     		ldr	r2, .L829+24
 6920 008a D3F88830 		ldr	r3, [r3, #136]
 6921 008e 03F00C03 		and	r3, r3, #12
 6922 0092 E7E7     		b	.L822
 6923              	.LVL738:
 6924              	.L721:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6925              		.loc 1 3068 0 discriminator 14
 6926 0094 804A     		ldr	r2, .L829+28
 6927 0096 9342     		cmp	r3, r2
 6928 0098 22D1     		bne	.L722
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6929              		.loc 1 3068 0 discriminator 25
 6930 009a 02F5E432 		add	r2, r2, #116736
 6931 009e D2F88820 		ldr	r2, [r2, #136]
 6932 00a2 02F03002 		and	r2, r2, #48
 6933 00a6 102A     		cmp	r2, #16
 6934 00a8 00F0B380 		beq	.L724
 6935 00ac 10D8     		bhi	.L725
 6936              	.L821:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6937              		.loc 1 3068 0 discriminator 49
 6938 00ae AAB9     		cbnz	r2, .L767
 6939              	.LVL739:
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6940              		.loc 1 3071 0 is_stmt 1
 6941 00b0 734A     		ldr	r2, .L829+4
 6942              	.LVL740:
 6943 00b2 9342     		cmp	r3, r2
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 240


 6944 00b4 40F0BE80 		bne	.L733
3077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 6945              		.loc 1 3077 0
 6946 00b8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6947              	.LVL741:
 6948              	.L734:
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 6949              		.loc 1 3095 0
 6950 00bc B8BB     		cbnz	r0, .L735
 6951              	.LVL742:
 6952              	.L826:
 6953 00be 0020     		movs	r0, #0
 6954              	.L736:
 6955              	.LVL743:
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6956              		.loc 1 3207 0
 6957 00c0 4FF00113 		mov	r3, #65537
 6958 00c4 A366     		str	r3, [r4, #104]
3210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
 6959              		.loc 1 3210 0
 6960 00c6 0023     		movs	r3, #0
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6961              		.loc 1 3211 0
 6962 00c8 C4E91D33 		strd	r3, r3, [r4, #116]
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6963              		.loc 1 3214 0
 6964 00cc BDE8F088 		pop	{r4, r5, r6, r7, fp, pc}
 6965              	.LVL744:
 6966              	.L725:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6967              		.loc 1 3068 0 discriminator 25
 6968 00d0 202A     		cmp	r2, #32
 6969 00d2 00F09980 		beq	.L727
 6970 00d6 302A     		cmp	r2, #48
 6971              	.L824:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6972              		.loc 1 3068 0 is_stmt 0 discriminator 37
 6973 00d8 00F08D80 		beq	.L728
 6974              	.LVL745:
 6975              	.L767:
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 6976              		.loc 1 3145 0 is_stmt 1
 6977 00dc 0120     		movs	r0, #1
 6978 00de EFE7     		b	.L736
 6979              	.LVL746:
 6980              	.L722:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6981              		.loc 1 3068 0 discriminator 26
 6982 00e0 6E4A     		ldr	r2, .L829+32
 6983 00e2 9342     		cmp	r3, r2
 6984 00e4 0ED1     		bne	.L729
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6985              		.loc 1 3068 0 is_stmt 0 discriminator 37
 6986 00e6 02F5E232 		add	r2, r2, #115712
 6987 00ea D2F88820 		ldr	r2, [r2, #136]
 6988 00ee 02F0C002 		and	r2, r2, #192
 6989 00f2 402A     		cmp	r2, #64
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 241


 6990 00f4 00F08D80 		beq	.L724
 6991 00f8 D9D9     		bls	.L821
 6992 00fa 802A     		cmp	r2, #128
 6993 00fc 00F08480 		beq	.L727
 6994 0100 C02A     		cmp	r2, #192
 6995 0102 E9E7     		b	.L824
 6996              	.L729:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6997              		.loc 1 3068 0 discriminator 38
 6998 0104 5E4A     		ldr	r2, .L829+4
 6999              	.LVL747:
 7000 0106 9342     		cmp	r3, r2
 7001 0108 E8D1     		bne	.L767
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7002              		.loc 1 3068 0 discriminator 49
 7003 010a 02F5C832 		add	r2, r2, #102400
 7004              	.LVL748:
 7005 010e D2F88820 		ldr	r2, [r2, #136]
 7006 0112 02F44062 		and	r2, r2, #3072
 7007 0116 B2F5806F 		cmp	r2, #1024
 7008 011a 7AD0     		beq	.L724
 7009 011c C7D9     		bls	.L821
 7010 011e B2F5006F 		cmp	r2, #2048
 7011 0122 71D0     		beq	.L727
 7012 0124 B2F5406F 		cmp	r2, #3072
 7013 0128 D6E7     		b	.L824
 7014              	.LVL749:
 7015              	.L763:
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7016              		.loc 1 3086 0 is_stmt 1
 7017 012a 4FF40040 		mov	r0, #32768
 7018              	.LVL750:
 7019              	.L735:
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 7020              		.loc 1 3101 0
 7021 012e 6568     		ldr	r5, [r4, #4]
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7022              		.loc 1 3098 0
 7023 0130 5B4B     		ldr	r3, .L829+36
 7024 0132 626A     		ldr	r2, [r4, #36]
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 7025              		.loc 1 3101 0
 7026 0134 05EB4501 		add	r1, r5, r5, lsl #1
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7027              		.loc 1 3098 0
 7028 0138 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 7029 013c B0FBF2F3 		udiv	r3, r0, r2
 7030              	.LVL751:
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 7031              		.loc 1 3101 0
 7032 0140 9942     		cmp	r1, r3
 7033 0142 CBD8     		bhi	.L767
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 7034              		.loc 1 3101 0 is_stmt 0 discriminator 1
 7035 0144 B3EB053F 		cmp	r3, r5, lsl #12
 7036 0148 C8D8     		bhi	.L767
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 242


 7037              		.loc 1 3110 0 is_stmt 1
 7038 014a 0023     		movs	r3, #0
 7039              	.LVL752:
 7040 014c 0021     		movs	r1, #0
 7041 014e FFF7FEFF 		bl	__aeabi_uldivmod
 7042              	.LVL753:
 7043 0152 0F02     		lsls	r7, r1, #8
 7044 0154 47EA1067 		orr	r7, r7, r0, lsr #24
 7045 0158 0602     		lsls	r6, r0, #8
 7046 015a 6808     		lsrs	r0, r5, #1
 7047 015c 16EB000B 		adds	fp, r6, r0
 7048 0160 47F1000C 		adc	ip, r7, #0
 7049 0164 2A46     		mov	r2, r5
 7050 0166 0023     		movs	r3, #0
 7051 0168 5846     		mov	r0, fp
 7052 016a 6146     		mov	r1, ip
 7053 016c FFF7FEFF 		bl	__aeabi_uldivmod
 7054              	.LVL754:
3111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 7055              		.loc 1 3111 0
 7056 0170 4C4B     		ldr	r3, .L829+40
 7057 0172 A0F54072 		sub	r2, r0, #768
 7058              	.L828:
3194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7059              		.loc 1 3194 0
 7060 0176 9A42     		cmp	r2, r3
 7061 0178 B0D8     		bhi	.L767
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 7062              		.loc 1 3196 0
 7063 017a 2368     		ldr	r3, [r4]
 7064 017c D860     		str	r0, [r3, #12]
 7065 017e 9EE7     		b	.L826
 7066              	.LVL755:
 7067              	.L742:
3132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7068              		.loc 1 3132 0
 7069 0180 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 7070              	.LVL756:
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 7071              		.loc 1 3133 0
 7072 0184 5BE0     		b	.L746
 7073              	.LVL757:
 7074              	.L760:
3141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7075              		.loc 1 3141 0
 7076 0186 4FF40040 		mov	r0, #32768
 7077 018a 5BE0     		b	.L745
 7078              	.LVL758:
 7079              	.L766:
3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7080              		.loc 1 3135 0
 7081 018c 4648     		ldr	r0, .L829+44
 7082 018e 59E0     		b	.L745
 7083              	.LVL759:
 7084              	.L739:
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7085              		.loc 1 3167 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 243


 7086 0190 082B     		cmp	r3, #8
 7087 0192 A3D8     		bhi	.L767
 7088 0194 01A2     		adr	r2, .L749
 7089 0196 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7090 019a 00BF     		.p2align 2
 7091              	.L749:
 7092 019c C1010000 		.word	.L748+1
 7093 01a0 EB010000 		.word	.L750+1
 7094 01a4 31020000 		.word	.L762+1
 7095 01a8 DD000000 		.word	.L767+1
 7096 01ac F1010000 		.word	.L752+1
 7097 01b0 DD000000 		.word	.L767+1
 7098 01b4 DD000000 		.word	.L767+1
 7099 01b8 DD000000 		.word	.L767+1
 7100 01bc 03020000 		.word	.L823+1
 7101              	.LVL760:
 7102              		.p2align 1
 7103              	.L748:
3170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7104              		.loc 1 3170 0
 7105 01c0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 7106              	.LVL761:
 7107              	.L754:
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7108              		.loc 1 3190 0
 7109 01c4 0028     		cmp	r0, #0
 7110 01c6 3FF47AAF 		beq	.L826
 7111              	.LVL762:
 7112              	.L751:
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 7113              		.loc 1 3193 0
 7114 01ca 6368     		ldr	r3, [r4, #4]
 7115 01cc 616A     		ldr	r1, [r4, #36]
 7116 01ce 344A     		ldr	r2, .L829+36
 7117 01d0 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 7118 01d4 B0FBF2F0 		udiv	r0, r0, r2
 7119 01d8 00EB5300 		add	r0, r0, r3, lsr #1
 7120 01dc B0FBF3F0 		udiv	r0, r0, r3
 7121              	.LVL763:
3194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7122              		.loc 1 3194 0
 7123 01e0 4FF6EF73 		movw	r3, #65519
 7124 01e4 A0F11002 		sub	r2, r0, #16
 7125 01e8 C5E7     		b	.L828
 7126              	.LVL764:
 7127              	.L750:
3173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7128              		.loc 1 3173 0
 7129 01ea FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 7130              	.LVL765:
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 7131              		.loc 1 3174 0
 7132 01ee E9E7     		b	.L754
 7133              	.LVL766:
 7134              	.L752:
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7135              		.loc 1 3179 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 244


 7136 01f0 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 7137              	.LVL767:
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 7138              		.loc 1 3180 0
 7139 01f4 E6E7     		b	.L754
 7140              	.LVL768:
 7141              	.L728:
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7142              		.loc 1 3071 0
 7143 01f6 224A     		ldr	r2, .L829+4
 7144              	.LVL769:
 7145 01f8 9342     		cmp	r3, r2
 7146 01fa 96D0     		beq	.L763
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7147              		.loc 1 3124 0
 7148 01fc B0F5004F 		cmp	r0, #32768
 7149 0200 20D0     		beq	.L745
 7150              	.LVL770:
 7151              	.L823:
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7152              		.loc 1 3182 0
 7153 0202 4FF40040 		mov	r0, #32768
 7154 0206 E0E7     		b	.L751
 7155              	.LVL771:
 7156              	.L727:
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7157              		.loc 1 3071 0
 7158 0208 1D4A     		ldr	r2, .L829+4
 7159              	.LVL772:
 7160 020a 9342     		cmp	r3, r2
 7161 020c 0DD1     		bne	.L818
3080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7162              		.loc 1 3080 0
 7163 020e 2648     		ldr	r0, .L829+44
 7164 0210 8DE7     		b	.L735
 7165              	.LVL773:
 7166              	.L724:
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7167              		.loc 1 3071 0
 7168 0212 1B4A     		ldr	r2, .L829+4
 7169              	.LVL774:
 7170 0214 9342     		cmp	r3, r2
 7171 0216 02D1     		bne	.L819
3083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7172              		.loc 1 3083 0
 7173 0218 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 7174              	.LVL775:
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 7175              		.loc 1 3084 0
 7176 021c 4EE7     		b	.L734
 7177              	.LVL776:
 7178              	.L819:
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7179              		.loc 1 3124 0
 7180 021e B0F5004F 		cmp	r0, #32768
 7181 0222 E5D1     		bne	.L752
 7182              	.LVL777:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 245


 7183              	.L744:
3138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7184              		.loc 1 3138 0
 7185 0224 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 7186              	.LVL778:
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 7187              		.loc 1 3139 0
 7188 0228 09E0     		b	.L746
 7189              	.LVL779:
 7190              	.L818:
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7191              		.loc 1 3124 0
 7192 022a B0F5004F 		cmp	r0, #32768
 7193 022e ADD0     		beq	.L766
 7194              	.LVL780:
 7195              	.L762:
3176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7196              		.loc 1 3176 0
 7197 0230 1D48     		ldr	r0, .L829+44
 7198 0232 CAE7     		b	.L751
 7199              	.LVL781:
 7200              	.L733:
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7201              		.loc 1 3124 0
 7202 0234 B0F5004F 		cmp	r0, #32768
 7203 0238 C2D1     		bne	.L748
 7204              	.LVL782:
 7205              	.L740:
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7206              		.loc 1 3129 0
 7207 023a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 7208              	.LVL783:
 7209              	.L746:
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7210              		.loc 1 3150 0
 7211 023e 0028     		cmp	r0, #0
 7212 0240 3FF43DAF 		beq	.L826
 7213              	.LVL784:
 7214              	.L745:
3152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 7215              		.loc 1 3152 0
 7216 0244 6268     		ldr	r2, [r4, #4]
 7217 0246 616A     		ldr	r1, [r4, #36]
 7218 0248 154B     		ldr	r3, .L829+36
 7219 024a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 7220 024e B0FBF3F0 		udiv	r0, r0, r3
 7221 0252 5308     		lsrs	r3, r2, #1
 7222 0254 03EB4000 		add	r0, r3, r0, lsl #1
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7223              		.loc 1 3153 0
 7224 0258 4FF6EF73 		movw	r3, #65519
3152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 7225              		.loc 1 3152 0
 7226 025c B0FBF2F0 		udiv	r0, r0, r2
 7227              	.LVL785:
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7228              		.loc 1 3153 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 246


 7229 0260 A0F11002 		sub	r2, r0, #16
 7230 0264 9A42     		cmp	r2, r3
 7231 0266 3FF639AF 		bhi	.L767
3155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 7232              		.loc 1 3155 0
 7233 026a 20F00F03 		bic	r3, r0, #15
 7234 026e 9BB2     		uxth	r3, r3
 7235              	.LVL786:
3157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 7236              		.loc 1 3157 0
 7237 0270 2268     		ldr	r2, [r4]
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 7238              		.loc 1 3156 0
 7239 0272 C0F34200 		ubfx	r0, r0, #1, #3
 7240              	.LVL787:
3157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 7241              		.loc 1 3157 0
 7242 0276 1843     		orrs	r0, r0, r3
 7243 0278 D060     		str	r0, [r2, #12]
 7244 027a 20E7     		b	.L826
 7245              	.L830:
 7246              		.align	2
 7247              	.L829:
 7248 027c F369FFCF 		.word	-805344781
 7249 0280 00800040 		.word	1073774592
 7250 0284 00380140 		.word	1073821696
 7251 0288 00100240 		.word	1073876992
 7252 028c 00000000 		.word	.LANCHOR0
 7253 0290 00440040 		.word	1073759232
 7254 0294 00000000 		.word	.LANCHOR1
 7255 0298 00480040 		.word	1073760256
 7256 029c 004C0040 		.word	1073761280
 7257 02a0 00000000 		.word	.LANCHOR2
 7258 02a4 FFFC0F00 		.word	1047807
 7259 02a8 0024F400 		.word	16000000
 7260              		.cfi_endproc
 7261              	.LFE372:
 7263              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 7264              		.align	1
 7265              		.global	UART_AdvFeatureConfig
 7266              		.syntax unified
 7267              		.thumb
 7268              		.thumb_func
 7269              		.fpu fpv4-sp-d16
 7271              	UART_AdvFeatureConfig:
 7272              	.LFB373:
3222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 7273              		.loc 1 3222 0
 7274              		.cfi_startproc
 7275              		@ args = 0, pretend = 0, frame = 0
 7276              		@ frame_needed = 0, uses_anonymous_args = 0
 7277              	.LVL788:
3227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7278              		.loc 1 3227 0
 7279 0000 836A     		ldr	r3, [r0, #40]
 7280 0002 1A07     		lsls	r2, r3, #28
3222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 247


 7281              		.loc 1 3222 0
 7282 0004 10B5     		push	{r4, lr}
 7283              	.LCFI52:
 7284              		.cfi_def_cfa_offset 8
 7285              		.cfi_offset 4, -8
 7286              		.cfi_offset 14, -4
3227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7287              		.loc 1 3227 0
 7288 0006 06D5     		bpl	.L832
3230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 7289              		.loc 1 3230 0
 7290 0008 0168     		ldr	r1, [r0]
 7291 000a 846B     		ldr	r4, [r0, #56]
 7292 000c 4A68     		ldr	r2, [r1, #4]
 7293 000e 22F40042 		bic	r2, r2, #32768
 7294 0012 2243     		orrs	r2, r2, r4
 7295 0014 4A60     		str	r2, [r1, #4]
 7296              	.L832:
3234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7297              		.loc 1 3234 0
 7298 0016 DC07     		lsls	r4, r3, #31
 7299 0018 06D5     		bpl	.L833
3237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 7300              		.loc 1 3237 0
 7301 001a 0168     		ldr	r1, [r0]
 7302 001c C46A     		ldr	r4, [r0, #44]
 7303 001e 4A68     		ldr	r2, [r1, #4]
 7304 0020 22F40032 		bic	r2, r2, #131072
 7305 0024 2243     		orrs	r2, r2, r4
 7306 0026 4A60     		str	r2, [r1, #4]
 7307              	.L833:
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7308              		.loc 1 3241 0
 7309 0028 9907     		lsls	r1, r3, #30
 7310 002a 06D5     		bpl	.L834
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 7311              		.loc 1 3244 0
 7312 002c 0168     		ldr	r1, [r0]
 7313 002e 046B     		ldr	r4, [r0, #48]
 7314 0030 4A68     		ldr	r2, [r1, #4]
 7315 0032 22F48032 		bic	r2, r2, #65536
 7316 0036 2243     		orrs	r2, r2, r4
 7317 0038 4A60     		str	r2, [r1, #4]
 7318              	.L834:
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7319              		.loc 1 3248 0
 7320 003a 5A07     		lsls	r2, r3, #29
 7321 003c 06D5     		bpl	.L835
3251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 7322              		.loc 1 3251 0
 7323 003e 0168     		ldr	r1, [r0]
 7324 0040 446B     		ldr	r4, [r0, #52]
 7325 0042 4A68     		ldr	r2, [r1, #4]
 7326 0044 22F48022 		bic	r2, r2, #262144
 7327 0048 2243     		orrs	r2, r2, r4
 7328 004a 4A60     		str	r2, [r1, #4]
 7329              	.L835:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 248


3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7330              		.loc 1 3255 0
 7331 004c DC06     		lsls	r4, r3, #27
 7332 004e 06D5     		bpl	.L836
3258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 7333              		.loc 1 3258 0
 7334 0050 0168     		ldr	r1, [r0]
 7335 0052 C46B     		ldr	r4, [r0, #60]
 7336 0054 8A68     		ldr	r2, [r1, #8]
 7337 0056 22F48052 		bic	r2, r2, #4096
 7338 005a 2243     		orrs	r2, r2, r4
 7339 005c 8A60     		str	r2, [r1, #8]
 7340              	.L836:
3262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7341              		.loc 1 3262 0
 7342 005e 9906     		lsls	r1, r3, #26
 7343 0060 06D5     		bpl	.L837
3265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 7344              		.loc 1 3265 0
 7345 0062 0168     		ldr	r1, [r0]
 7346 0064 046C     		ldr	r4, [r0, #64]
 7347 0066 8A68     		ldr	r2, [r1, #8]
 7348 0068 22F40052 		bic	r2, r2, #8192
 7349 006c 2243     		orrs	r2, r2, r4
 7350 006e 8A60     		str	r2, [r1, #8]
 7351              	.L837:
3269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7352              		.loc 1 3269 0
 7353 0070 5A06     		lsls	r2, r3, #25
 7354 0072 0FD5     		bpl	.L839
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 7355              		.loc 1 3273 0
 7356 0074 0168     		ldr	r1, [r0]
 7357 0076 446C     		ldr	r4, [r0, #68]
 7358 0078 4A68     		ldr	r2, [r1, #4]
 7359 007a 22F48012 		bic	r2, r2, #1048576
 7360 007e 2243     		orrs	r2, r2, r4
3275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7361              		.loc 1 3275 0
 7362 0080 B4F5801F 		cmp	r4, #1048576
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 7363              		.loc 1 3273 0
 7364 0084 4A60     		str	r2, [r1, #4]
3275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7365              		.loc 1 3275 0
 7366 0086 05D1     		bne	.L839
3278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 7367              		.loc 1 3278 0
 7368 0088 4A68     		ldr	r2, [r1, #4]
 7369 008a 846C     		ldr	r4, [r0, #72]
 7370 008c 22F4C002 		bic	r2, r2, #6291456
 7371 0090 2243     		orrs	r2, r2, r4
 7372 0092 4A60     		str	r2, [r1, #4]
 7373              	.L839:
3283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7374              		.loc 1 3283 0
 7375 0094 1B06     		lsls	r3, r3, #24
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 249


 7376 0096 06D5     		bpl	.L831
3286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 7377              		.loc 1 3286 0
 7378 0098 0268     		ldr	r2, [r0]
 7379 009a C16C     		ldr	r1, [r0, #76]
 7380 009c 5368     		ldr	r3, [r2, #4]
 7381 009e 23F40023 		bic	r3, r3, #524288
 7382 00a2 0B43     		orrs	r3, r3, r1
 7383 00a4 5360     		str	r3, [r2, #4]
 7384              	.L831:
3288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7385              		.loc 1 3288 0
 7386 00a6 10BD     		pop	{r4, pc}
 7387              		.cfi_endproc
 7388              	.LFE373:
 7390              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 7391              		.align	1
 7392              		.global	UART_WaitOnFlagUntilTimeout
 7393              		.syntax unified
 7394              		.thumb
 7395              		.thumb_func
 7396              		.fpu fpv4-sp-d16
 7398              	UART_WaitOnFlagUntilTimeout:
 7399              	.LFB375:
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Wait until flag is set */
 7400              		.loc 1 3366 0
 7401              		.cfi_startproc
 7402              		@ args = 4, pretend = 0, frame = 0
 7403              		@ frame_needed = 0, uses_anonymous_args = 0
 7404              	.LVL789:
 7405 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 7406              	.LCFI53:
 7407              		.cfi_def_cfa_offset 32
 7408              		.cfi_offset 3, -32
 7409              		.cfi_offset 4, -28
 7410              		.cfi_offset 5, -24
 7411              		.cfi_offset 6, -20
 7412              		.cfi_offset 7, -16
 7413              		.cfi_offset 8, -12
 7414              		.cfi_offset 9, -8
 7415              		.cfi_offset 14, -4
 7416 0004 089F     		ldr	r7, [sp, #32]
 7417 0006 0446     		mov	r4, r0
 7418 0008 0E46     		mov	r6, r1
 7419 000a 9046     		mov	r8, r2
 7420 000c 9946     		mov	r9, r3
 7421              	.LVL790:
 7422              	.L876:
3368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7423              		.loc 1 3368 0
 7424 000e 2168     		ldr	r1, [r4]
 7425              	.L865:
 7426 0010 CA69     		ldr	r2, [r1, #28]
 7427 0012 36EA0203 		bics	r3, r6, r2
 7428 0016 0CBF     		ite	eq
 7429 0018 0122     		moveq	r2, #1
 7430 001a 0022     		movne	r2, #0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 250


 7431 001c 4245     		cmp	r2, r8
 7432 001e 01D0     		beq	.L868
3418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 7433              		.loc 1 3418 0
 7434 0020 0020     		movs	r0, #0
 7435 0022 1FE0     		b	.L866
 7436              	.L868:
3371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7437              		.loc 1 3371 0
 7438 0024 781C     		adds	r0, r7, #1
 7439 0026 F3D0     		beq	.L865
3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7440              		.loc 1 3373 0
 7441 0028 FFF7FEFF 		bl	HAL_GetTick
 7442              	.LVL791:
 7443 002c A0EB0900 		sub	r0, r0, r9
 7444 0030 B842     		cmp	r0, r7
 7445 0032 27D8     		bhi	.L870
3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7446              		.loc 1 3373 0 is_stmt 0 discriminator 1
 7447 0034 37B3     		cbz	r7, .L870
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7448              		.loc 1 3379 0 is_stmt 1
 7449 0036 2068     		ldr	r0, [r4]
 7450 0038 0368     		ldr	r3, [r0]
 7451 003a 5A07     		lsls	r2, r3, #29
 7452 003c E7D5     		bpl	.L876
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7453              		.loc 1 3379 0 is_stmt 0 discriminator 1
 7454 003e 802E     		cmp	r6, #128
 7455 0040 E5D0     		beq	.L876
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7456              		.loc 1 3379 0 discriminator 2
 7457 0042 402E     		cmp	r6, #64
 7458 0044 E3D0     		beq	.L876
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 7459              		.loc 1 3381 0 is_stmt 1
 7460 0046 C569     		ldr	r5, [r0, #28]
 7461 0048 15F00805 		ands	r5, r5, #8
 7462 004c 0CD0     		beq	.L867
3384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7463              		.loc 1 3384 0
 7464 004e 0825     		movs	r5, #8
 7465 0050 0562     		str	r5, [r0, #32]
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7466              		.loc 1 3389 0
 7467 0052 2046     		mov	r0, r4
 7468 0054 FFF7FEFF 		bl	UART_EndRxTransfer
 7469              	.LVL792:
3394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7470              		.loc 1 3394 0
 7471 0058 0023     		movs	r3, #0
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7472              		.loc 1 3391 0
 7473 005a C4F89050 		str	r5, [r4, #144]
3394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7474              		.loc 1 3394 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 251


 7475 005e 84F88430 		strb	r3, [r4, #132]
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 7476              		.loc 1 3396 0
 7477 0062 0120     		movs	r0, #1
 7478              	.L866:
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7479              		.loc 1 3419 0
 7480 0064 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 7481              	.LVL793:
 7482              	.L867:
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 7483              		.loc 1 3398 0
 7484 0068 C369     		ldr	r3, [r0, #28]
 7485 006a 1B05     		lsls	r3, r3, #20
 7486 006c CFD5     		bpl	.L876
3401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7487              		.loc 1 3401 0
 7488 006e 4FF40063 		mov	r3, #2048
 7489 0072 0362     		str	r3, [r0, #32]
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7490              		.loc 1 3406 0
 7491 0074 2046     		mov	r0, r4
 7492 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 7493              	.LVL794:
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7494              		.loc 1 3408 0
 7495 007a 2023     		movs	r3, #32
 7496 007c C4F89030 		str	r3, [r4, #144]
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7497              		.loc 1 3411 0
 7498 0080 84F88450 		strb	r5, [r4, #132]
 7499              	.L870:
3376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 7500              		.loc 1 3376 0
 7501 0084 0320     		movs	r0, #3
 7502 0086 EDE7     		b	.L866
 7503              		.cfi_endproc
 7504              	.LFE375:
 7506              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 7507              		.align	1
 7508              		.global	HAL_UART_Transmit
 7509              		.syntax unified
 7510              		.thumb
 7511              		.thumb_func
 7512              		.fpu fpv4-sp-d16
 7514              	HAL_UART_Transmit:
 7515              	.LFB336:
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
 7516              		.loc 1 1118 0
 7517              		.cfi_startproc
 7518              		@ args = 0, pretend = 0, frame = 0
 7519              		@ frame_needed = 0, uses_anonymous_args = 0
 7520              	.LVL795:
 7521 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 7522              	.LCFI54:
 7523              		.cfi_def_cfa_offset 40
 7524              		.cfi_offset 4, -28
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 252


 7525              		.cfi_offset 5, -24
 7526              		.cfi_offset 6, -20
 7527              		.cfi_offset 7, -16
 7528              		.cfi_offset 8, -12
 7529              		.cfi_offset 9, -8
 7530              		.cfi_offset 14, -4
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
 7531              		.loc 1 1118 0
 7532 0004 9846     		mov	r8, r3
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7533              		.loc 1 1124 0
 7534 0006 D0F88830 		ldr	r3, [r0, #136]
 7535              	.LVL796:
 7536 000a 202B     		cmp	r3, #32
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
 7537              		.loc 1 1118 0
 7538 000c 0446     		mov	r4, r0
 7539 000e 0E46     		mov	r6, r1
 7540 0010 9146     		mov	r9, r2
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7541              		.loc 1 1124 0
 7542 0012 46D1     		bne	.L891
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7543              		.loc 1 1126 0
 7544 0014 0029     		cmp	r1, #0
 7545 0016 46D0     		beq	.L893
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7546              		.loc 1 1126 0 is_stmt 0 discriminator 1
 7547 0018 002A     		cmp	r2, #0
 7548 001a 44D0     		beq	.L893
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7549              		.loc 1 1132 0 is_stmt 1
 7550 001c 2123     		movs	r3, #33
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 7551              		.loc 1 1131 0
 7552 001e 0025     		movs	r5, #0
 7553 0020 C0F89050 		str	r5, [r0, #144]
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7554              		.loc 1 1132 0
 7555 0024 C0F88830 		str	r3, [r0, #136]
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7556              		.loc 1 1135 0
 7557 0028 FFF7FEFF 		bl	HAL_GetTick
 7558              	.LVL797:
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7559              		.loc 1 1141 0
 7560 002c A368     		ldr	r3, [r4, #8]
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 7561              		.loc 1 1137 0
 7562 002e A4F85490 		strh	r9, [r4, #84]	@ movhi
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7563              		.loc 1 1141 0
 7564 0032 B3F5805F 		cmp	r3, #4096
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7565              		.loc 1 1135 0
 7566 0036 0746     		mov	r7, r0
 7567              	.LVL798:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 253


1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7568              		.loc 1 1138 0
 7569 0038 A4F85690 		strh	r9, [r4, #86]	@ movhi
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7570              		.loc 1 1141 0
 7571 003c 03D1     		bne	.L885
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7572              		.loc 1 1141 0 is_stmt 0 discriminator 1
 7573 003e 2369     		ldr	r3, [r4, #16]
 7574 0040 0BB9     		cbnz	r3, .L885
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7575              		.loc 1 1141 0
 7576 0042 3546     		mov	r5, r6
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 7577              		.loc 1 1143 0 is_stmt 1
 7578 0044 1E46     		mov	r6, r3
 7579              	.LVL799:
 7580              	.L885:
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7581              		.loc 1 1152 0
 7582 0046 B4F85620 		ldrh	r2, [r4, #86]
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7583              		.loc 1 1154 0
 7584 004a CDF80080 		str	r8, [sp]
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7585              		.loc 1 1152 0
 7586 004e 92B2     		uxth	r2, r2
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7587              		.loc 1 1154 0
 7588 0050 3B46     		mov	r3, r7
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7589              		.loc 1 1152 0
 7590 0052 52B9     		cbnz	r2, .L889
 7591              	.LVL800:
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7592              		.loc 1 1174 0
 7593 0054 4021     		movs	r1, #64
 7594 0056 2046     		mov	r0, r4
 7595 0058 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7596              	.LVL801:
 7597 005c 2023     		movs	r3, #32
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7598              		.loc 1 1176 0
 7599 005e C4F88830 		str	r3, [r4, #136]
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7600              		.loc 1 1174 0
 7601 0062 58B9     		cbnz	r0, .L897
 7602              	.LVL802:
 7603              	.L883:
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7604              		.loc 1 1190 0
 7605 0064 03B0     		add	sp, sp, #12
 7606              	.LCFI55:
 7607              		.cfi_remember_state
 7608              		.cfi_def_cfa_offset 28
 7609              		@ sp needed
 7610 0066 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 254


 7611              	.LVL803:
 7612              	.L889:
 7613              	.LCFI56:
 7614              		.cfi_restore_state
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7615              		.loc 1 1154 0
 7616 006a 0022     		movs	r2, #0
 7617 006c 8021     		movs	r1, #128
 7618 006e 2046     		mov	r0, r4
 7619 0070 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7620              	.LVL804:
 7621 0074 20B1     		cbz	r0, .L886
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7622              		.loc 1 1157 0
 7623 0076 2023     		movs	r3, #32
 7624 0078 C4F88830 		str	r3, [r4, #136]
 7625              	.L897:
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 7626              		.loc 1 1178 0
 7627 007c 0320     		movs	r0, #3
 7628 007e F1E7     		b	.L883
 7629              	.L886:
 7630 0080 2268     		ldr	r2, [r4]
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7631              		.loc 1 1161 0
 7632 0082 5EB9     		cbnz	r6, .L887
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
 7633              		.loc 1 1163 0
 7634 0084 35F8023B 		ldrh	r3, [r5], #2
 7635              	.LVL805:
 7636 0088 C3F30803 		ubfx	r3, r3, #0, #9
 7637              	.LVL806:
 7638              	.L896:
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
 7639              		.loc 1 1168 0
 7640 008c 9362     		str	r3, [r2, #40]
 7641              	.LVL807:
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 7642              		.loc 1 1171 0
 7643 008e B4F85630 		ldrh	r3, [r4, #86]
 7644 0092 013B     		subs	r3, r3, #1
 7645 0094 9BB2     		uxth	r3, r3
 7646 0096 A4F85630 		strh	r3, [r4, #86]	@ movhi
 7647 009a D4E7     		b	.L885
 7648              	.L887:
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
 7649              		.loc 1 1168 0
 7650 009c 16F8013B 		ldrb	r3, [r6], #1	@ zero_extendqisi2
 7651              	.LVL808:
 7652 00a0 F4E7     		b	.L896
 7653              	.LVL809:
 7654              	.L891:
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 7655              		.loc 1 1188 0
 7656 00a2 0220     		movs	r0, #2
 7657              	.LVL810:
 7658 00a4 DEE7     		b	.L883
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 255


 7659              	.LVL811:
 7660              	.L893:
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 7661              		.loc 1 1128 0
 7662 00a6 0120     		movs	r0, #1
 7663              	.LVL812:
 7664 00a8 DCE7     		b	.L883
 7665              		.cfi_endproc
 7666              	.LFE336:
 7668              		.section	.text.HAL_UART_Receive,"ax",%progbits
 7669              		.align	1
 7670              		.global	HAL_UART_Receive
 7671              		.syntax unified
 7672              		.thumb
 7673              		.thumb_func
 7674              		.fpu fpv4-sp-d16
 7676              	HAL_UART_Receive:
 7677              	.LFB337:
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 7678              		.loc 1 1208 0
 7679              		.cfi_startproc
 7680              		@ args = 0, pretend = 0, frame = 0
 7681              		@ frame_needed = 0, uses_anonymous_args = 0
 7682              	.LVL813:
 7683 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 7684              	.LCFI57:
 7685              		.cfi_def_cfa_offset 40
 7686              		.cfi_offset 4, -28
 7687              		.cfi_offset 5, -24
 7688              		.cfi_offset 6, -20
 7689              		.cfi_offset 7, -16
 7690              		.cfi_offset 8, -12
 7691              		.cfi_offset 9, -8
 7692              		.cfi_offset 14, -4
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 7693              		.loc 1 1208 0
 7694 0004 9946     		mov	r9, r3
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7695              		.loc 1 1215 0
 7696 0006 D0F88C30 		ldr	r3, [r0, #140]
 7697              	.LVL814:
 7698 000a 202B     		cmp	r3, #32
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 7699              		.loc 1 1208 0
 7700 000c 0446     		mov	r4, r0
 7701 000e 0D46     		mov	r5, r1
 7702 0010 1746     		mov	r7, r2
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7703              		.loc 1 1215 0
 7704 0012 61D1     		bne	.L912
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7705              		.loc 1 1217 0
 7706 0014 0029     		cmp	r1, #0
 7707 0016 61D0     		beq	.L914
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7708              		.loc 1 1217 0 is_stmt 0 discriminator 1
 7709 0018 002A     		cmp	r2, #0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 256


 7710 001a 5FD0     		beq	.L914
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 7711              		.loc 1 1223 0 is_stmt 1
 7712 001c 2223     		movs	r3, #34
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 7713              		.loc 1 1222 0
 7714 001e 0026     		movs	r6, #0
 7715 0020 C0F89060 		str	r6, [r0, #144]
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 7716              		.loc 1 1223 0
 7717 0024 C0F88C30 		str	r3, [r0, #140]
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7718              		.loc 1 1224 0
 7719 0028 C666     		str	r6, [r0, #108]
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7720              		.loc 1 1227 0
 7721 002a FFF7FEFF 		bl	HAL_GetTick
 7722              	.LVL815:
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7723              		.loc 1 1233 0
 7724 002e A368     		ldr	r3, [r4, #8]
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
 7725              		.loc 1 1229 0
 7726 0030 A4F85C70 		strh	r7, [r4, #92]	@ movhi
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7727              		.loc 1 1233 0
 7728 0034 B3F5805F 		cmp	r3, #4096
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7729              		.loc 1 1227 0
 7730 0038 8046     		mov	r8, r0
 7731              	.LVL816:
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7732              		.loc 1 1230 0
 7733 003a A4F85E70 		strh	r7, [r4, #94]	@ movhi
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7734              		.loc 1 1233 0
 7735 003e 18D1     		bne	.L900
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7736              		.loc 1 1233 0 is_stmt 0 discriminator 1
 7737 0040 2269     		ldr	r2, [r4, #16]
 7738 0042 A2B9     		cbnz	r2, .L901
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7739              		.loc 1 1233 0 discriminator 3
 7740 0044 40F2FF12 		movw	r2, #511
 7741              	.L923:
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7742              		.loc 1 1233 0 discriminator 4
 7743 0048 A4F86020 		strh	r2, [r4, #96]	@ movhi
 7744              	.L902:
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7745              		.loc 1 1237 0 is_stmt 1
 7746 004c B3F5805F 		cmp	r3, #4096
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7747              		.loc 1 1234 0
 7748 0050 B4F86070 		ldrh	r7, [r4, #96]
 7749              	.LVL817:
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 257


 7750              		.loc 1 1237 0
 7751 0054 1ED1     		bne	.L916
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7752              		.loc 1 1237 0 is_stmt 0 discriminator 1
 7753 0056 2369     		ldr	r3, [r4, #16]
 7754 0058 E3B9     		cbnz	r3, .L916
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7755              		.loc 1 1237 0
 7756 005a 2E46     		mov	r6, r5
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 7757              		.loc 1 1239 0 is_stmt 1
 7758 005c 1D46     		mov	r5, r3
 7759              	.LVL818:
 7760              	.L907:
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7761              		.loc 1 1249 0
 7762 005e B4F85E00 		ldrh	r0, [r4, #94]
 7763 0062 80B2     		uxth	r0, r0
 7764 0064 C0B9     		cbnz	r0, .L911
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7765              		.loc 1 1271 0
 7766 0066 2023     		movs	r3, #32
 7767 0068 C4F88C30 		str	r3, [r4, #140]
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 7768              		.loc 1 1273 0
 7769 006c 21E0     		b	.L899
 7770              	.LVL819:
 7771              	.L901:
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7772              		.loc 1 1233 0 discriminator 4
 7773 006e FF22     		movs	r2, #255
 7774 0070 EAE7     		b	.L923
 7775              	.L900:
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7776              		.loc 1 1233 0 is_stmt 0 discriminator 2
 7777 0072 23B9     		cbnz	r3, .L903
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7778              		.loc 1 1233 0 discriminator 5
 7779 0074 2269     		ldr	r2, [r4, #16]
 7780 0076 002A     		cmp	r2, #0
 7781 0078 F9D0     		beq	.L901
 7782              	.L905:
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7783              		.loc 1 1233 0 discriminator 8
 7784 007a 7F22     		movs	r2, #127
 7785 007c E4E7     		b	.L923
 7786              	.L903:
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7787              		.loc 1 1233 0 discriminator 6
 7788 007e B3F1805F 		cmp	r3, #268435456
 7789 0082 04D1     		bne	.L904
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7790              		.loc 1 1233 0 discriminator 9
 7791 0084 2269     		ldr	r2, [r4, #16]
 7792 0086 002A     		cmp	r2, #0
 7793 0088 F7D0     		beq	.L905
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 258


 7794              		.loc 1 1233 0 discriminator 12
 7795 008a 3F22     		movs	r2, #63
 7796 008c DCE7     		b	.L923
 7797              	.L904:
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 7798              		.loc 1 1233 0 discriminator 10
 7799 008e A4F86060 		strh	r6, [r4, #96]	@ movhi
 7800 0092 DBE7     		b	.L902
 7801              	.LVL820:
 7802              	.L916:
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 7803              		.loc 1 1245 0 is_stmt 1
 7804 0094 0026     		movs	r6, #0
 7805 0096 E2E7     		b	.L907
 7806              	.LVL821:
 7807              	.L911:
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7808              		.loc 1 1251 0
 7809 0098 CDF80090 		str	r9, [sp]
 7810 009c 4346     		mov	r3, r8
 7811 009e 0022     		movs	r2, #0
 7812 00a0 2021     		movs	r1, #32
 7813 00a2 2046     		mov	r0, r4
 7814 00a4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7815              	.LVL822:
 7816 00a8 30B1     		cbz	r0, .L908
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7817              		.loc 1 1253 0
 7818 00aa 2023     		movs	r3, #32
 7819 00ac C4F88C30 		str	r3, [r4, #140]
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 7820              		.loc 1 1255 0
 7821 00b0 0320     		movs	r0, #3
 7822              	.LVL823:
 7823              	.L899:
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7824              		.loc 1 1279 0
 7825 00b2 03B0     		add	sp, sp, #12
 7826              	.LCFI58:
 7827              		.cfi_remember_state
 7828              		.cfi_def_cfa_offset 28
 7829              		@ sp needed
 7830 00b4 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 7831              	.LVL824:
 7832              	.L908:
 7833              	.LCFI59:
 7834              		.cfi_restore_state
 7835 00b8 2368     		ldr	r3, [r4]
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
 7836              		.loc 1 1259 0
 7837 00ba 5B6A     		ldr	r3, [r3, #36]
 7838 00bc 3B40     		ands	r3, r3, r7
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 7839              		.loc 1 1257 0
 7840 00be 45B9     		cbnz	r5, .L909
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
 7841              		.loc 1 1259 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 259


 7842 00c0 26F8023B 		strh	r3, [r6], #2	@ movhi
 7843              	.LVL825:
 7844              	.L910:
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 7845              		.loc 1 1267 0
 7846 00c4 B4F85E30 		ldrh	r3, [r4, #94]
 7847 00c8 013B     		subs	r3, r3, #1
 7848 00ca 9BB2     		uxth	r3, r3
 7849 00cc A4F85E30 		strh	r3, [r4, #94]	@ movhi
 7850 00d0 C5E7     		b	.L907
 7851              	.L909:
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
 7852              		.loc 1 1264 0
 7853 00d2 05F8013B 		strb	r3, [r5], #1
 7854              	.LVL826:
 7855 00d6 F5E7     		b	.L910
 7856              	.LVL827:
 7857              	.L912:
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 7858              		.loc 1 1277 0
 7859 00d8 0220     		movs	r0, #2
 7860              	.LVL828:
 7861 00da EAE7     		b	.L899
 7862              	.LVL829:
 7863              	.L914:
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 7864              		.loc 1 1219 0
 7865 00dc 0120     		movs	r0, #1
 7866              	.LVL830:
 7867 00de E8E7     		b	.L899
 7868              		.cfi_endproc
 7869              	.LFE337:
 7871              		.section	.text.UART_CheckIdleState,"ax",%progbits
 7872              		.align	1
 7873              		.global	UART_CheckIdleState
 7874              		.syntax unified
 7875              		.thumb
 7876              		.thumb_func
 7877              		.fpu fpv4-sp-d16
 7879              	UART_CheckIdleState:
 7880              	.LFB374:
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
 7881              		.loc 1 3296 0
 7882              		.cfi_startproc
 7883              		@ args = 0, pretend = 0, frame = 0
 7884              		@ frame_needed = 0, uses_anonymous_args = 0
 7885              	.LVL831:
 7886 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 7887              	.LCFI60:
 7888              		.cfi_def_cfa_offset 24
 7889              		.cfi_offset 4, -16
 7890              		.cfi_offset 5, -12
 7891              		.cfi_offset 6, -8
 7892              		.cfi_offset 14, -4
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
 7893              		.loc 1 3296 0
 7894 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 260


3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7895              		.loc 1 3300 0
 7896 0004 0026     		movs	r6, #0
 7897 0006 C0F89060 		str	r6, [r0, #144]
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7898              		.loc 1 3303 0
 7899 000a FFF7FEFF 		bl	HAL_GetTick
 7900              	.LVL832:
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7901              		.loc 1 3306 0
 7902 000e 2368     		ldr	r3, [r4]
 7903 0010 1B68     		ldr	r3, [r3]
 7904 0012 1A07     		lsls	r2, r3, #28
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7905              		.loc 1 3303 0
 7906 0014 0546     		mov	r5, r0
 7907              	.LVL833:
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7908              		.loc 1 3306 0
 7909 0016 1BD5     		bpl	.L925
3309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7910              		.loc 1 3309 0
 7911 0018 6FF07E43 		mvn	r3, #-33554432
 7912 001c 0093     		str	r3, [sp]
 7913 001e 3246     		mov	r2, r6
 7914 0020 0346     		mov	r3, r0
 7915 0022 4FF40011 		mov	r1, #2097152
 7916 0026 2046     		mov	r0, r4
 7917              	.LVL834:
 7918 0028 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7919              	.LVL835:
 7920 002c 80B1     		cbz	r0, .L925
 7921              	.L926:
 7922              	.LBB1079:
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7923              		.loc 1 3312 0 discriminator 1
 7924 002e 2168     		ldr	r1, [r4]
 7925              	.LVL836:
 7926              	.LBB1080:
 7927              	.LBB1081:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7928              		.loc 2 1155 0 discriminator 1
 7929              		.syntax unified
 7930              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7931 0030 51E8003F 		ldrex r3, [r1]
 7932              	@ 0 "" 2
 7933              	.LVL837:
 7934              		.thumb
 7935              		.syntax unified
 7936              	.LBE1081:
 7937              	.LBE1080:
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7938              		.loc 1 3312 0 discriminator 1
 7939 0034 23F08003 		bic	r3, r3, #128
 7940              	.LVL838:
 7941              	.LBB1082:
 7942              	.LBB1083:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 261


 7943              		.loc 2 1206 0 discriminator 1
 7944              		.syntax unified
 7945              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7946 0038 41E80032 		strex r2, r3, [r1]
 7947              	@ 0 "" 2
 7948              	.LVL839:
 7949              		.thumb
 7950              		.syntax unified
 7951              	.LBE1083:
 7952              	.LBE1082:
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7953              		.loc 1 3312 0 discriminator 1
 7954 003c 002A     		cmp	r2, #0
 7955 003e F6D1     		bne	.L926
 7956              	.LBE1079:
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7957              		.loc 1 3314 0
 7958 0040 2023     		movs	r3, #32
 7959              	.LVL840:
 7960 0042 C4F88830 		str	r3, [r4, #136]
 7961              	.L946:
3336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7962              		.loc 1 3336 0
 7963 0046 84F88420 		strb	r2, [r4, #132]
3339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 7964              		.loc 1 3339 0
 7965 004a 0320     		movs	r0, #3
 7966              	.L927:
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 7967              		.loc 1 3352 0
 7968 004c 02B0     		add	sp, sp, #8
 7969              	.LCFI61:
 7970              		.cfi_remember_state
 7971              		.cfi_def_cfa_offset 16
 7972              		@ sp needed
 7973 004e 70BD     		pop	{r4, r5, r6, pc}
 7974              	.LVL841:
 7975              	.L925:
 7976              	.LCFI62:
 7977              		.cfi_restore_state
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 7978              		.loc 1 3324 0
 7979 0050 2368     		ldr	r3, [r4]
 7980 0052 1B68     		ldr	r3, [r3]
 7981 0054 5B07     		lsls	r3, r3, #29
 7982 0056 24D5     		bpl	.L928
3327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 7983              		.loc 1 3327 0
 7984 0058 6FF07E43 		mvn	r3, #-33554432
 7985 005c 0093     		str	r3, [sp]
 7986 005e 0022     		movs	r2, #0
 7987 0060 2B46     		mov	r3, r5
 7988 0062 4FF48001 		mov	r1, #4194304
 7989 0066 2046     		mov	r0, r4
 7990 0068 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7991              	.LVL842:
 7992 006c C8B1     		cbz	r0, .L928
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 262


 7993              	.L929:
 7994              	.LBB1084:
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7995              		.loc 1 3331 0 discriminator 1
 7996 006e 2268     		ldr	r2, [r4]
 7997              	.LVL843:
 7998              	.LBB1085:
 7999              	.LBB1086:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8000              		.loc 2 1155 0 discriminator 1
 8001              		.syntax unified
 8002              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8003 0070 52E8003F 		ldrex r3, [r2]
 8004              	@ 0 "" 2
 8005              	.LVL844:
 8006              		.thumb
 8007              		.syntax unified
 8008              	.LBE1086:
 8009              	.LBE1085:
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8010              		.loc 1 3331 0 discriminator 1
 8011 0074 23F49073 		bic	r3, r3, #288
 8012              	.LVL845:
 8013              	.LBB1087:
 8014              	.LBB1088:
 8015              		.loc 2 1206 0 discriminator 1
 8016              		.syntax unified
 8017              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8018 0078 42E80030 		strex r0, r3, [r2]
 8019              	@ 0 "" 2
 8020              	.LVL846:
 8021              		.thumb
 8022              		.syntax unified
 8023 007c 2168     		ldr	r1, [r4]
 8024              	.LBE1088:
 8025              	.LBE1087:
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8026              		.loc 1 3331 0 discriminator 1
 8027 007e 0028     		cmp	r0, #0
 8028 0080 F5D1     		bne	.L929
 8029              	.LVL847:
 8030              	.L930:
 8031              	.LBE1084:
 8032              	.LBB1089:
 8033              	.LBB1090:
 8034              	.LBB1091:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8035              		.loc 2 1155 0 discriminator 1
 8036 0082 01F10803 		add	r3, r1, #8
 8037              	.LVL848:
 8038              		.syntax unified
 8039              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8040 0086 53E8003F 		ldrex r3, [r3]
 8041              	@ 0 "" 2
 8042              	.LVL849:
 8043              		.thumb
 8044              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 263


 8045              	.LBE1091:
 8046              	.LBE1090:
3332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8047              		.loc 1 3332 0 discriminator 1
 8048 008a 23F00103 		bic	r3, r3, #1
 8049              	.LVL850:
 8050              	.LBB1092:
 8051              	.LBB1093:
 8052              		.loc 2 1206 0 discriminator 1
 8053 008e 01F10800 		add	r0, r1, #8
 8054              	.LVL851:
 8055              		.syntax unified
 8056              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8057 0092 40E80032 		strex r2, r3, [r0]
 8058              	@ 0 "" 2
 8059              	.LVL852:
 8060              		.thumb
 8061              		.syntax unified
 8062              	.LBE1093:
 8063              	.LBE1092:
3332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8064              		.loc 1 3332 0 discriminator 1
 8065 0096 002A     		cmp	r2, #0
 8066 0098 F3D1     		bne	.L930
 8067              	.LBE1089:
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8068              		.loc 1 3334 0
 8069 009a 2023     		movs	r3, #32
 8070              	.LVL853:
 8071 009c C4F88C30 		str	r3, [r4, #140]
 8072 00a0 D1E7     		b	.L946
 8073              	.L928:
3346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 8074              		.loc 1 3346 0
 8075 00a2 0020     		movs	r0, #0
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8076              		.loc 1 3344 0
 8077 00a4 2023     		movs	r3, #32
 8078 00a6 C4F88830 		str	r3, [r4, #136]
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8079              		.loc 1 3349 0
 8080 00aa 84F88400 		strb	r0, [r4, #132]
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8081              		.loc 1 3345 0
 8082 00ae C4F88C30 		str	r3, [r4, #140]
3346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 8083              		.loc 1 3346 0
 8084 00b2 E066     		str	r0, [r4, #108]
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8085              		.loc 1 3347 0
 8086 00b4 2067     		str	r0, [r4, #112]
3351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8087              		.loc 1 3351 0
 8088 00b6 C9E7     		b	.L927
 8089              		.cfi_endproc
 8090              	.LFE374:
 8092              		.section	.text.HAL_UART_Init,"ax",%progbits
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 264


 8093              		.align	1
 8094              		.global	HAL_UART_Init
 8095              		.syntax unified
 8096              		.thumb
 8097              		.thumb_func
 8098              		.fpu fpv4-sp-d16
 8100              	HAL_UART_Init:
 8101              	.LFB329:
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 8102              		.loc 1 308 0
 8103              		.cfi_startproc
 8104              		@ args = 0, pretend = 0, frame = 0
 8105              		@ frame_needed = 0, uses_anonymous_args = 0
 8106              	.LVL854:
 8107 0000 10B5     		push	{r4, lr}
 8108              	.LCFI63:
 8109              		.cfi_def_cfa_offset 8
 8110              		.cfi_offset 4, -8
 8111              		.cfi_offset 14, -4
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8112              		.loc 1 310 0
 8113 0002 0446     		mov	r4, r0
 8114 0004 50B3     		cbz	r0, .L949
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8115              		.loc 1 326 0
 8116 0006 D0F88830 		ldr	r3, [r0, #136]
 8117 000a 1BB9     		cbnz	r3, .L950
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8118              		.loc 1 329 0
 8119 000c 80F88430 		strb	r3, [r0, #132]
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 8120              		.loc 1 343 0
 8121 0010 FFF7FEFF 		bl	HAL_UART_MspInit
 8122              	.LVL855:
 8123              	.L950:
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8124              		.loc 1 347 0
 8125 0014 2423     		movs	r3, #36
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8126              		.loc 1 349 0
 8127 0016 2268     		ldr	r2, [r4]
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8128              		.loc 1 347 0
 8129 0018 C4F88830 		str	r3, [r4, #136]
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8130              		.loc 1 349 0
 8131 001c 1368     		ldr	r3, [r2]
 8132 001e 23F00103 		bic	r3, r3, #1
 8133 0022 1360     		str	r3, [r2]
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8134              		.loc 1 353 0
 8135 0024 A36A     		ldr	r3, [r4, #40]
 8136 0026 13B1     		cbz	r3, .L951
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 8137              		.loc 1 355 0
 8138 0028 2046     		mov	r0, r4
 8139 002a FFF7FEFF 		bl	UART_AdvFeatureConfig
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 265


 8140              	.LVL856:
 8141              	.L951:
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8142              		.loc 1 359 0
 8143 002e 2046     		mov	r0, r4
 8144 0030 FFF7FEFF 		bl	UART_SetConfig
 8145              	.LVL857:
 8146 0034 0128     		cmp	r0, #1
 8147 0036 11D0     		beq	.L949
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8148              		.loc 1 367 0
 8149 0038 2368     		ldr	r3, [r4]
 8150 003a 5A68     		ldr	r2, [r3, #4]
 8151 003c 22F49042 		bic	r2, r2, #18432
 8152 0040 5A60     		str	r2, [r3, #4]
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8153              		.loc 1 368 0
 8154 0042 9A68     		ldr	r2, [r3, #8]
 8155 0044 22F02A02 		bic	r2, r2, #42
 8156 0048 9A60     		str	r2, [r3, #8]
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8157              		.loc 1 370 0
 8158 004a 1A68     		ldr	r2, [r3]
 8159 004c 42F00102 		orr	r2, r2, #1
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8160              		.loc 1 373 0
 8161 0050 2046     		mov	r0, r4
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8162              		.loc 1 370 0
 8163 0052 1A60     		str	r2, [r3]
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8164              		.loc 1 374 0
 8165 0054 BDE81040 		pop	{r4, lr}
 8166              	.LCFI64:
 8167              		.cfi_remember_state
 8168              		.cfi_restore 14
 8169              		.cfi_restore 4
 8170              		.cfi_def_cfa_offset 0
 8171              	.LVL858:
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8172              		.loc 1 373 0
 8173 0058 FFF7FEBF 		b	UART_CheckIdleState
 8174              	.LVL859:
 8175              	.L949:
 8176              	.LCFI65:
 8177              		.cfi_restore_state
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8178              		.loc 1 374 0
 8179 005c 0120     		movs	r0, #1
 8180 005e 10BD     		pop	{r4, pc}
 8181              		.cfi_endproc
 8182              	.LFE329:
 8184              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 8185              		.align	1
 8186              		.global	HAL_HalfDuplex_Init
 8187              		.syntax unified
 8188              		.thumb
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 266


 8189              		.thumb_func
 8190              		.fpu fpv4-sp-d16
 8192              	HAL_HalfDuplex_Init:
 8193              	.LFB330:
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 8194              		.loc 1 383 0
 8195              		.cfi_startproc
 8196              		@ args = 0, pretend = 0, frame = 0
 8197              		@ frame_needed = 0, uses_anonymous_args = 0
 8198              	.LVL860:
 8199 0000 10B5     		push	{r4, lr}
 8200              	.LCFI66:
 8201              		.cfi_def_cfa_offset 8
 8202              		.cfi_offset 4, -8
 8203              		.cfi_offset 14, -4
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8204              		.loc 1 385 0
 8205 0002 0446     		mov	r4, r0
 8206 0004 70B3     		cbz	r0, .L961
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8207              		.loc 1 393 0
 8208 0006 D0F88830 		ldr	r3, [r0, #136]
 8209 000a 1BB9     		cbnz	r3, .L962
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8210              		.loc 1 396 0
 8211 000c 80F88430 		strb	r3, [r0, #132]
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 8212              		.loc 1 410 0
 8213 0010 FFF7FEFF 		bl	HAL_UART_MspInit
 8214              	.LVL861:
 8215              	.L962:
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8216              		.loc 1 414 0
 8217 0014 2423     		movs	r3, #36
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8218              		.loc 1 416 0
 8219 0016 2268     		ldr	r2, [r4]
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8220              		.loc 1 414 0
 8221 0018 C4F88830 		str	r3, [r4, #136]
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8222              		.loc 1 416 0
 8223 001c 1368     		ldr	r3, [r2]
 8224 001e 23F00103 		bic	r3, r3, #1
 8225 0022 1360     		str	r3, [r2]
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8226              		.loc 1 420 0
 8227 0024 A36A     		ldr	r3, [r4, #40]
 8228 0026 13B1     		cbz	r3, .L963
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 8229              		.loc 1 422 0
 8230 0028 2046     		mov	r0, r4
 8231 002a FFF7FEFF 		bl	UART_AdvFeatureConfig
 8232              	.LVL862:
 8233              	.L963:
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8234              		.loc 1 426 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 267


 8235 002e 2046     		mov	r0, r4
 8236 0030 FFF7FEFF 		bl	UART_SetConfig
 8237              	.LVL863:
 8238 0034 0128     		cmp	r0, #1
 8239 0036 15D0     		beq	.L961
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 8240              		.loc 1 434 0
 8241 0038 2368     		ldr	r3, [r4]
 8242 003a 5A68     		ldr	r2, [r3, #4]
 8243 003c 22F49042 		bic	r2, r2, #18432
 8244 0040 5A60     		str	r2, [r3, #4]
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8245              		.loc 1 435 0
 8246 0042 9A68     		ldr	r2, [r3, #8]
 8247 0044 22F02202 		bic	r2, r2, #34
 8248 0048 9A60     		str	r2, [r3, #8]
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8249              		.loc 1 438 0
 8250 004a 9A68     		ldr	r2, [r3, #8]
 8251 004c 42F00802 		orr	r2, r2, #8
 8252 0050 9A60     		str	r2, [r3, #8]
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8253              		.loc 1 440 0
 8254 0052 1A68     		ldr	r2, [r3]
 8255 0054 42F00102 		orr	r2, r2, #1
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8256              		.loc 1 443 0
 8257 0058 2046     		mov	r0, r4
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8258              		.loc 1 440 0
 8259 005a 1A60     		str	r2, [r3]
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8260              		.loc 1 444 0
 8261 005c BDE81040 		pop	{r4, lr}
 8262              	.LCFI67:
 8263              		.cfi_remember_state
 8264              		.cfi_restore 14
 8265              		.cfi_restore 4
 8266              		.cfi_def_cfa_offset 0
 8267              	.LVL864:
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8268              		.loc 1 443 0
 8269 0060 FFF7FEBF 		b	UART_CheckIdleState
 8270              	.LVL865:
 8271              	.L961:
 8272              	.LCFI68:
 8273              		.cfi_restore_state
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8274              		.loc 1 444 0
 8275 0064 0120     		movs	r0, #1
 8276 0066 10BD     		pop	{r4, pc}
 8277              		.cfi_endproc
 8278              	.LFE330:
 8280              		.section	.text.HAL_LIN_Init,"ax",%progbits
 8281              		.align	1
 8282              		.global	HAL_LIN_Init
 8283              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 268


 8284              		.thumb
 8285              		.thumb_func
 8286              		.fpu fpv4-sp-d16
 8288              	HAL_LIN_Init:
 8289              	.LFB331:
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 8290              		.loc 1 458 0
 8291              		.cfi_startproc
 8292              		@ args = 0, pretend = 0, frame = 0
 8293              		@ frame_needed = 0, uses_anonymous_args = 0
 8294              	.LVL866:
 8295 0000 38B5     		push	{r3, r4, r5, lr}
 8296              	.LCFI69:
 8297              		.cfi_def_cfa_offset 16
 8298              		.cfi_offset 3, -16
 8299              		.cfi_offset 4, -12
 8300              		.cfi_offset 5, -8
 8301              		.cfi_offset 14, -4
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 8302              		.loc 1 458 0
 8303 0002 0D46     		mov	r5, r1
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8304              		.loc 1 460 0
 8305 0004 0446     		mov	r4, r0
 8306 0006 0028     		cmp	r0, #0
 8307 0008 3AD0     		beq	.L973
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8308              		.loc 1 471 0
 8309 000a C369     		ldr	r3, [r0, #28]
 8310 000c B3F5004F 		cmp	r3, #32768
 8311 0010 36D0     		beq	.L973
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8312              		.loc 1 476 0
 8313 0012 8368     		ldr	r3, [r0, #8]
 8314 0014 002B     		cmp	r3, #0
 8315 0016 33D1     		bne	.L973
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8316              		.loc 1 481 0
 8317 0018 D0F88830 		ldr	r3, [r0, #136]
 8318 001c 1BB9     		cbnz	r3, .L975
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8319              		.loc 1 484 0
 8320 001e 80F88430 		strb	r3, [r0, #132]
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 8321              		.loc 1 498 0
 8322 0022 FFF7FEFF 		bl	HAL_UART_MspInit
 8323              	.LVL867:
 8324              	.L975:
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8325              		.loc 1 502 0
 8326 0026 2423     		movs	r3, #36
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8327              		.loc 1 504 0
 8328 0028 2268     		ldr	r2, [r4]
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8329              		.loc 1 502 0
 8330 002a C4F88830 		str	r3, [r4, #136]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 269


 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8331              		.loc 1 504 0
 8332 002e 1368     		ldr	r3, [r2]
 8333 0030 23F00103 		bic	r3, r3, #1
 8334 0034 1360     		str	r3, [r2]
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8335              		.loc 1 508 0
 8336 0036 A36A     		ldr	r3, [r4, #40]
 8337 0038 13B1     		cbz	r3, .L976
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 8338              		.loc 1 510 0
 8339 003a 2046     		mov	r0, r4
 8340 003c FFF7FEFF 		bl	UART_AdvFeatureConfig
 8341              	.LVL868:
 8342              	.L976:
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8343              		.loc 1 514 0
 8344 0040 2046     		mov	r0, r4
 8345 0042 FFF7FEFF 		bl	UART_SetConfig
 8346              	.LVL869:
 8347 0046 0128     		cmp	r0, #1
 8348 0048 1AD0     		beq	.L973
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 8349              		.loc 1 522 0
 8350 004a 2368     		ldr	r3, [r4]
 8351 004c 5A68     		ldr	r2, [r3, #4]
 8352 004e 22F40062 		bic	r2, r2, #2048
 8353 0052 5A60     		str	r2, [r3, #4]
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8354              		.loc 1 523 0
 8355 0054 9A68     		ldr	r2, [r3, #8]
 8356 0056 22F02A02 		bic	r2, r2, #42
 8357 005a 9A60     		str	r2, [r3, #8]
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8358              		.loc 1 526 0
 8359 005c 5A68     		ldr	r2, [r3, #4]
 8360 005e 42F48042 		orr	r2, r2, #16384
 8361 0062 5A60     		str	r2, [r3, #4]
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8362              		.loc 1 529 0
 8363 0064 5968     		ldr	r1, [r3, #4]
 8364 0066 21F02001 		bic	r1, r1, #32
 8365 006a 2943     		orrs	r1, r1, r5
 8366 006c 5960     		str	r1, [r3, #4]
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8367              		.loc 1 531 0
 8368 006e 1A68     		ldr	r2, [r3]
 8369 0070 42F00102 		orr	r2, r2, #1
 8370 0074 1A60     		str	r2, [r3]
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8371              		.loc 1 534 0
 8372 0076 2046     		mov	r0, r4
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8373              		.loc 1 535 0
 8374 0078 BDE83840 		pop	{r3, r4, r5, lr}
 8375              	.LCFI70:
 8376              		.cfi_remember_state
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 270


 8377              		.cfi_restore 14
 8378              		.cfi_restore 5
 8379              		.cfi_restore 4
 8380              		.cfi_restore 3
 8381              		.cfi_def_cfa_offset 0
 8382              	.LVL870:
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8383              		.loc 1 534 0
 8384 007c FFF7FEBF 		b	UART_CheckIdleState
 8385              	.LVL871:
 8386              	.L973:
 8387              	.LCFI71:
 8388              		.cfi_restore_state
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8389              		.loc 1 535 0
 8390 0080 0120     		movs	r0, #1
 8391 0082 38BD     		pop	{r3, r4, r5, pc}
 8392              		.cfi_endproc
 8393              	.LFE331:
 8395              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 8396              		.align	1
 8397              		.global	HAL_MultiProcessor_Init
 8398              		.syntax unified
 8399              		.thumb
 8400              		.thumb_func
 8401              		.fpu fpv4-sp-d16
 8403              	HAL_MultiProcessor_Init:
 8404              	.LFB332:
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 8405              		.loc 1 557 0
 8406              		.cfi_startproc
 8407              		@ args = 0, pretend = 0, frame = 0
 8408              		@ frame_needed = 0, uses_anonymous_args = 0
 8409              	.LVL872:
 8410 0000 70B5     		push	{r4, r5, r6, lr}
 8411              	.LCFI72:
 8412              		.cfi_def_cfa_offset 16
 8413              		.cfi_offset 4, -16
 8414              		.cfi_offset 5, -12
 8415              		.cfi_offset 6, -8
 8416              		.cfi_offset 14, -4
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 8417              		.loc 1 557 0
 8418 0002 0E46     		mov	r6, r1
 8419 0004 1546     		mov	r5, r2
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8420              		.loc 1 559 0
 8421 0006 0446     		mov	r4, r0
 8422 0008 0028     		cmp	r0, #0
 8423 000a 38D0     		beq	.L988
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8424              		.loc 1 567 0
 8425 000c D0F88830 		ldr	r3, [r0, #136]
 8426 0010 1BB9     		cbnz	r3, .L989
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8427              		.loc 1 570 0
 8428 0012 80F88430 		strb	r3, [r0, #132]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 271


 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 8429              		.loc 1 584 0
 8430 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 8431              	.LVL873:
 8432              	.L989:
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8433              		.loc 1 588 0
 8434 001a 2423     		movs	r3, #36
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8435              		.loc 1 590 0
 8436 001c 2268     		ldr	r2, [r4]
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8437              		.loc 1 588 0
 8438 001e C4F88830 		str	r3, [r4, #136]
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8439              		.loc 1 590 0
 8440 0022 1368     		ldr	r3, [r2]
 8441 0024 23F00103 		bic	r3, r3, #1
 8442 0028 1360     		str	r3, [r2]
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8443              		.loc 1 594 0
 8444 002a A36A     		ldr	r3, [r4, #40]
 8445 002c 13B1     		cbz	r3, .L990
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 8446              		.loc 1 596 0
 8447 002e 2046     		mov	r0, r4
 8448 0030 FFF7FEFF 		bl	UART_AdvFeatureConfig
 8449              	.LVL874:
 8450              	.L990:
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8451              		.loc 1 600 0
 8452 0034 2046     		mov	r0, r4
 8453 0036 FFF7FEFF 		bl	UART_SetConfig
 8454              	.LVL875:
 8455 003a 0128     		cmp	r0, #1
 8456 003c 1FD0     		beq	.L988
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8457              		.loc 1 608 0
 8458 003e 2368     		ldr	r3, [r4]
 8459 0040 5A68     		ldr	r2, [r3, #4]
 8460 0042 22F49042 		bic	r2, r2, #18432
 8461 0046 5A60     		str	r2, [r3, #4]
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8462              		.loc 1 609 0
 8463 0048 9A68     		ldr	r2, [r3, #8]
 8464 004a 22F02A02 		bic	r2, r2, #42
 8465 004e 9A60     		str	r2, [r3, #8]
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8466              		.loc 1 611 0
 8467 0050 B5F5006F 		cmp	r5, #2048
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 8468              		.loc 1 614 0
 8469 0054 01BF     		itttt	eq
 8470 0056 5968     		ldreq	r1, [r3, #4]
 8471 0058 21F07F41 		biceq	r1, r1, #-16777216
 8472 005c 41EA0661 		orreq	r1, r1, r6, lsl #24
 8473 0060 5960     		streq	r1, [r3, #4]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 272


 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8474              		.loc 1 618 0
 8475 0062 1A68     		ldr	r2, [r3]
 8476 0064 22F40062 		bic	r2, r2, #2048
 8477 0068 2A43     		orrs	r2, r2, r5
 8478 006a 1A60     		str	r2, [r3]
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8479              		.loc 1 620 0
 8480 006c 1A68     		ldr	r2, [r3]
 8481 006e 42F00102 		orr	r2, r2, #1
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8482              		.loc 1 623 0
 8483 0072 2046     		mov	r0, r4
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8484              		.loc 1 620 0
 8485 0074 1A60     		str	r2, [r3]
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8486              		.loc 1 624 0
 8487 0076 BDE87040 		pop	{r4, r5, r6, lr}
 8488              	.LCFI73:
 8489              		.cfi_remember_state
 8490              		.cfi_restore 14
 8491              		.cfi_restore 6
 8492              		.cfi_restore 5
 8493              		.cfi_restore 4
 8494              		.cfi_def_cfa_offset 0
 8495              	.LVL876:
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8496              		.loc 1 623 0
 8497 007a FFF7FEBF 		b	UART_CheckIdleState
 8498              	.LVL877:
 8499              	.L988:
 8500              	.LCFI74:
 8501              		.cfi_restore_state
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8502              		.loc 1 624 0
 8503 007e 0120     		movs	r0, #1
 8504 0080 70BD     		pop	{r4, r5, r6, pc}
 8505              		.cfi_endproc
 8506              	.LFE332:
 8508              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 8509              		.align	1
 8510              		.global	HAL_MultiProcessor_EnableMuteMode
 8511              		.syntax unified
 8512              		.thumb
 8513              		.thumb_func
 8514              		.fpu fpv4-sp-d16
 8516              	HAL_MultiProcessor_EnableMuteMode:
 8517              	.LFB364:
2801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 8518              		.loc 1 2801 0
 8519              		.cfi_startproc
 8520              		@ args = 0, pretend = 0, frame = 0
 8521              		@ frame_needed = 0, uses_anonymous_args = 0
 8522              		@ link register save eliminated.
 8523              	.LVL878:
2802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 273


 8524              		.loc 1 2802 0
 8525 0000 90F88430 		ldrb	r3, [r0, #132]	@ zero_extendqisi2
 8526 0004 012B     		cmp	r3, #1
 8527 0006 13D0     		beq	.L1000
2802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8528              		.loc 1 2802 0 is_stmt 0 discriminator 2
 8529 0008 0123     		movs	r3, #1
 8530 000a 80F88430 		strb	r3, [r0, #132]
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8531              		.loc 1 2804 0 is_stmt 1 discriminator 2
 8532 000e 2423     		movs	r3, #36
 8533 0010 C0F88830 		str	r3, [r0, #136]
 8534              	.L1001:
 8535              	.LBB1094:
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8536              		.loc 1 2807 0 discriminator 1
 8537 0014 0268     		ldr	r2, [r0]
 8538              	.LVL879:
 8539              	.LBB1095:
 8540              	.LBB1096:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8541              		.loc 2 1155 0 discriminator 1
 8542              		.syntax unified
 8543              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8544 0016 52E8003F 		ldrex r3, [r2]
 8545              	@ 0 "" 2
 8546              	.LVL880:
 8547              		.thumb
 8548              		.syntax unified
 8549              	.LBE1096:
 8550              	.LBE1095:
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8551              		.loc 1 2807 0 discriminator 1
 8552 001a 43F40053 		orr	r3, r3, #8192
 8553              	.LVL881:
 8554              	.LBB1097:
 8555              	.LBB1098:
 8556              		.loc 2 1206 0 discriminator 1
 8557              		.syntax unified
 8558              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8559 001e 42E80031 		strex r1, r3, [r2]
 8560              	@ 0 "" 2
 8561              	.LVL882:
 8562              		.thumb
 8563              		.syntax unified
 8564              	.LBE1098:
 8565              	.LBE1097:
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8566              		.loc 1 2807 0 discriminator 1
 8567 0022 0029     		cmp	r1, #0
 8568 0024 F6D1     		bne	.L1001
 8569              	.LBE1094:
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8570              		.loc 1 2809 0
 8571 0026 2023     		movs	r3, #32
 8572              	.LVL883:
 8573 0028 C0F88830 		str	r3, [r0, #136]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 274


2811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8574              		.loc 1 2811 0
 8575 002c FFF7FEBF 		b	UART_CheckIdleState
 8576              	.LVL884:
 8577              	.L1000:
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8578              		.loc 1 2812 0
 8579 0030 0220     		movs	r0, #2
 8580              	.LVL885:
 8581 0032 7047     		bx	lr
 8582              		.cfi_endproc
 8583              	.LFE364:
 8585              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 8586              		.align	1
 8587              		.global	HAL_MultiProcessor_DisableMuteMode
 8588              		.syntax unified
 8589              		.thumb
 8590              		.thumb_func
 8591              		.fpu fpv4-sp-d16
 8593              	HAL_MultiProcessor_DisableMuteMode:
 8594              	.LFB365:
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 8595              		.loc 1 2821 0
 8596              		.cfi_startproc
 8597              		@ args = 0, pretend = 0, frame = 0
 8598              		@ frame_needed = 0, uses_anonymous_args = 0
 8599              		@ link register save eliminated.
 8600              	.LVL886:
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8601              		.loc 1 2822 0
 8602 0000 90F88430 		ldrb	r3, [r0, #132]	@ zero_extendqisi2
 8603 0004 012B     		cmp	r3, #1
 8604 0006 13D0     		beq	.L1004
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8605              		.loc 1 2822 0 is_stmt 0 discriminator 2
 8606 0008 0123     		movs	r3, #1
 8607 000a 80F88430 		strb	r3, [r0, #132]
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8608              		.loc 1 2824 0 is_stmt 1 discriminator 2
 8609 000e 2423     		movs	r3, #36
 8610 0010 C0F88830 		str	r3, [r0, #136]
 8611              	.L1005:
 8612              	.LBB1099:
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8613              		.loc 1 2827 0 discriminator 1
 8614 0014 0268     		ldr	r2, [r0]
 8615              	.LVL887:
 8616              	.LBB1100:
 8617              	.LBB1101:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8618              		.loc 2 1155 0 discriminator 1
 8619              		.syntax unified
 8620              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8621 0016 52E8003F 		ldrex r3, [r2]
 8622              	@ 0 "" 2
 8623              	.LVL888:
 8624              		.thumb
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 275


 8625              		.syntax unified
 8626              	.LBE1101:
 8627              	.LBE1100:
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8628              		.loc 1 2827 0 discriminator 1
 8629 001a 23F40053 		bic	r3, r3, #8192
 8630              	.LVL889:
 8631              	.LBB1102:
 8632              	.LBB1103:
 8633              		.loc 2 1206 0 discriminator 1
 8634              		.syntax unified
 8635              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8636 001e 42E80031 		strex r1, r3, [r2]
 8637              	@ 0 "" 2
 8638              	.LVL890:
 8639              		.thumb
 8640              		.syntax unified
 8641              	.LBE1103:
 8642              	.LBE1102:
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8643              		.loc 1 2827 0 discriminator 1
 8644 0022 0029     		cmp	r1, #0
 8645 0024 F6D1     		bne	.L1005
 8646              	.LBE1099:
2829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8647              		.loc 1 2829 0
 8648 0026 2023     		movs	r3, #32
 8649              	.LVL891:
 8650 0028 C0F88830 		str	r3, [r0, #136]
2831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8651              		.loc 1 2831 0
 8652 002c FFF7FEBF 		b	UART_CheckIdleState
 8653              	.LVL892:
 8654              	.L1004:
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8655              		.loc 1 2832 0
 8656 0030 0220     		movs	r0, #2
 8657              	.LVL893:
 8658 0032 7047     		bx	lr
 8659              		.cfi_endproc
 8660              	.LFE365:
 8662              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 8663              		.align	1
 8664              		.global	UART_Start_Receive_IT
 8665              		.syntax unified
 8666              		.thumb
 8667              		.thumb_func
 8668              		.fpu fpv4-sp-d16
 8670              	UART_Start_Receive_IT:
 8671              	.LFB376:
3433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 8672              		.loc 1 3433 0
 8673              		.cfi_startproc
 8674              		@ args = 0, pretend = 0, frame = 0
 8675              		@ frame_needed = 0, uses_anonymous_args = 0
 8676              	.LVL894:
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 276


 8677              		.loc 1 3440 0
 8678 0000 8368     		ldr	r3, [r0, #8]
3433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 8679              		.loc 1 3433 0
 8680 0002 30B5     		push	{r4, r5, lr}
 8681              	.LCFI75:
 8682              		.cfi_def_cfa_offset 12
 8683              		.cfi_offset 4, -12
 8684              		.cfi_offset 5, -8
 8685              		.cfi_offset 14, -4
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8686              		.loc 1 3440 0
 8687 0004 B3F5805F 		cmp	r3, #4096
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferSize  = Size;
 8688              		.loc 1 3434 0
 8689 0008 8165     		str	r1, [r0, #88]
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8690              		.loc 1 3437 0
 8691 000a 4FF00001 		mov	r1, #0
 8692              	.LVL895:
3435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = Size;
 8693              		.loc 1 3435 0
 8694 000e A0F85C20 		strh	r2, [r0, #92]	@ movhi
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxISR       = NULL;
 8695              		.loc 1 3436 0
 8696 0012 A0F85E20 		strh	r2, [r0, #94]	@ movhi
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8697              		.loc 1 3437 0
 8698 0016 4167     		str	r1, [r0, #116]
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8699              		.loc 1 3440 0
 8700 0018 38D1     		bne	.L1008
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8701              		.loc 1 3440 0 is_stmt 0 discriminator 1
 8702 001a 0369     		ldr	r3, [r0, #16]
 8703 001c A3BB     		cbnz	r3, .L1009
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8704              		.loc 1 3440 0 discriminator 3
 8705 001e 40F2FF13 		movw	r3, #511
 8706              	.L1042:
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8707              		.loc 1 3440 0 discriminator 4
 8708 0022 A0F86030 		strh	r3, [r0, #96]	@ movhi
 8709              	.L1010:
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8710              		.loc 1 3442 0 is_stmt 1
 8711 0026 0023     		movs	r3, #0
 8712 0028 C0F89030 		str	r3, [r0, #144]
3443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8713              		.loc 1 3443 0
 8714 002c 2223     		movs	r3, #34
 8715 002e C0F88C30 		str	r3, [r0, #140]
 8716              	.L1014:
 8717              	.LBB1104:
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8718              		.loc 1 3446 0 discriminator 1
 8719 0032 0168     		ldr	r1, [r0]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 277


 8720              	.LVL896:
 8721              	.LBB1105:
 8722              	.LBB1106:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8723              		.loc 2 1155 0 discriminator 1
 8724 0034 01F10803 		add	r3, r1, #8
 8725              	.LVL897:
 8726              		.syntax unified
 8727              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8728 0038 53E8003F 		ldrex r3, [r3]
 8729              	@ 0 "" 2
 8730              	.LVL898:
 8731              		.thumb
 8732              		.syntax unified
 8733              	.LBE1106:
 8734              	.LBE1105:
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8735              		.loc 1 3446 0 discriminator 1
 8736 003c 43F00103 		orr	r3, r3, #1
 8737              	.LVL899:
 8738              	.LBB1107:
 8739              	.LBB1108:
 8740              		.loc 2 1206 0 discriminator 1
 8741 0040 0831     		adds	r1, r1, #8
 8742              	.LVL900:
 8743              		.syntax unified
 8744              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8745 0042 41E80034 		strex r4, r3, [r1]
 8746              	@ 0 "" 2
 8747              	.LVL901:
 8748              		.thumb
 8749              		.syntax unified
 8750 0046 0368     		ldr	r3, [r0]
 8751              	.LVL902:
 8752              	.LBE1108:
 8753              	.LBE1107:
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8754              		.loc 1 3446 0 discriminator 1
 8755 0048 002C     		cmp	r4, #0
 8756 004a F2D1     		bne	.L1014
 8757              	.LBE1104:
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8758              		.loc 1 3449 0
 8759 004c 456E     		ldr	r5, [r0, #100]
 8760 004e 8468     		ldr	r4, [r0, #8]
 8761 0050 0169     		ldr	r1, [r0, #16]
 8762 0052 B5F1005F 		cmp	r5, #536870912
 8763 0056 35D1     		bne	.L1015
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8764              		.loc 1 3449 0 is_stmt 0 discriminator 1
 8765 0058 B0F86850 		ldrh	r5, [r0, #104]
 8766 005c 9542     		cmp	r5, r2
 8767 005e 31D8     		bhi	.L1015
3452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 8768              		.loc 1 3452 0 is_stmt 1
 8769 0060 B4F5805F 		cmp	r4, #4096
 8770 0064 23D1     		bne	.L1016
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 278


3452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 8771              		.loc 1 3452 0 is_stmt 0 discriminator 1
 8772 0066 11BB     		cbnz	r1, .L1016
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 8773              		.loc 1 3454 0 is_stmt 1
 8774 0068 244A     		ldr	r2, .L1044
 8775              	.LVL903:
 8776 006a 4267     		str	r2, [r0, #116]
 8777              	.LVL904:
 8778              	.L1019:
 8779              	.LBB1109:
 8780              	.LBB1110:
 8781              	.LBB1111:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8782              		.loc 2 1155 0 discriminator 1
 8783 006c 03F10802 		add	r2, r3, #8
 8784              	.LVL905:
 8785              		.syntax unified
 8786              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8787 0070 52E8002F 		ldrex r2, [r2]
 8788              	@ 0 "" 2
 8789              	.LVL906:
 8790              		.thumb
 8791              		.syntax unified
 8792              	.LBE1111:
 8793              	.LBE1110:
3466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 8794              		.loc 1 3466 0 discriminator 1
 8795 0074 42F08052 		orr	r2, r2, #268435456
 8796              	.LVL907:
 8797              	.LBB1112:
 8798              	.LBB1113:
 8799              		.loc 2 1206 0 discriminator 1
 8800 0078 03F10800 		add	r0, r3, #8
 8801              	.LVL908:
 8802              		.syntax unified
 8803              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8804 007c 40E80021 		strex r1, r2, [r0]
 8805              	@ 0 "" 2
 8806              	.LVL909:
 8807              		.thumb
 8808              		.syntax unified
 8809              	.LBE1113:
 8810              	.LBE1112:
3466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 8811              		.loc 1 3466 0 discriminator 1
 8812 0080 0029     		cmp	r1, #0
 8813 0082 F3D1     		bne	.L1019
 8814              	.LVL910:
 8815              	.L1020:
 8816              	.LBE1109:
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8817              		.loc 1 3491 0
 8818 0084 0020     		movs	r0, #0
 8819 0086 30BD     		pop	{r4, r5, pc}
 8820              	.LVL911:
 8821              	.L1009:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 279


3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8822              		.loc 1 3440 0 discriminator 4
 8823 0088 FF23     		movs	r3, #255
 8824 008a CAE7     		b	.L1042
 8825              	.L1008:
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8826              		.loc 1 3440 0 is_stmt 0 discriminator 2
 8827 008c 23B9     		cbnz	r3, .L1011
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8828              		.loc 1 3440 0 discriminator 5
 8829 008e 0369     		ldr	r3, [r0, #16]
 8830 0090 002B     		cmp	r3, #0
 8831 0092 F9D0     		beq	.L1009
 8832              	.L1013:
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8833              		.loc 1 3440 0 discriminator 8
 8834 0094 7F23     		movs	r3, #127
 8835 0096 C4E7     		b	.L1042
 8836              	.L1011:
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8837              		.loc 1 3440 0 discriminator 6
 8838 0098 B3F1805F 		cmp	r3, #268435456
 8839 009c 04D1     		bne	.L1012
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8840              		.loc 1 3440 0 discriminator 9
 8841 009e 0369     		ldr	r3, [r0, #16]
 8842 00a0 002B     		cmp	r3, #0
 8843 00a2 F7D0     		beq	.L1013
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8844              		.loc 1 3440 0 discriminator 12
 8845 00a4 3F23     		movs	r3, #63
 8846 00a6 BCE7     		b	.L1042
 8847              	.L1012:
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 8848              		.loc 1 3440 0 discriminator 10
 8849 00a8 A0F86010 		strh	r1, [r0, #96]	@ movhi
 8850 00ac BBE7     		b	.L1010
 8851              	.L1016:
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 8852              		.loc 1 3458 0 is_stmt 1
 8853 00ae 144A     		ldr	r2, .L1044+4
 8854              	.LVL912:
 8855 00b0 4267     		str	r2, [r0, #116]
 8856              	.L1043:
3462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 8857              		.loc 1 3462 0
 8858 00b2 0029     		cmp	r1, #0
 8859 00b4 DAD0     		beq	.L1019
 8860              	.LVL913:
 8861              	.LBB1114:
 8862              	.LBB1115:
 8863              	.LBB1116:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8864              		.loc 2 1155 0 discriminator 1
 8865              		.syntax unified
 8866              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8867 00b6 53E8002F 		ldrex r2, [r3]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 280


 8868              	@ 0 "" 2
 8869              	.LVL914:
 8870              		.thumb
 8871              		.syntax unified
 8872              	.LBE1116:
 8873              	.LBE1115:
3464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 8874              		.loc 1 3464 0 discriminator 1
 8875 00ba 42F48072 		orr	r2, r2, #256
 8876              	.LVL915:
 8877              	.LBB1117:
 8878              	.LBB1118:
 8879              		.loc 2 1206 0 discriminator 1
 8880              		.syntax unified
 8881              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8882 00be 43E80021 		strex r1, r2, [r3]
 8883              	@ 0 "" 2
 8884              	.LVL916:
 8885              		.thumb
 8886              		.syntax unified
 8887 00c2 F6E7     		b	.L1043
 8888              	.LVL917:
 8889              	.L1015:
 8890              	.LBE1118:
 8891              	.LBE1117:
 8892              	.LBE1114:
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 8893              		.loc 1 3471 0
 8894 00c4 B4F5805F 		cmp	r4, #4096
 8895 00c8 0BD1     		bne	.L1021
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 8896              		.loc 1 3471 0 is_stmt 0 discriminator 1
 8897 00ca 51B9     		cbnz	r1, .L1021
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 8898              		.loc 1 3473 0 is_stmt 1
 8899 00cc 0D4A     		ldr	r2, .L1044+8
 8900              	.LVL918:
 8901 00ce 4267     		str	r2, [r0, #116]
 8902              	.L1024:
 8903              	.LVL919:
 8904              	.LBB1119:
 8905              	.LBB1120:
 8906              	.LBB1121:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8907              		.loc 2 1155 0 discriminator 1
 8908              		.syntax unified
 8909              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8910 00d0 53E8002F 		ldrex r2, [r3]
 8911              	@ 0 "" 2
 8912              	.LVL920:
 8913              		.thumb
 8914              		.syntax unified
 8915              	.LBE1121:
 8916              	.LBE1120:
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 8917              		.loc 1 3487 0 discriminator 1
 8918 00d4 42F02002 		orr	r2, r2, #32
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 281


 8919              	.LVL921:
 8920              	.LBB1122:
 8921              	.LBB1123:
 8922              		.loc 2 1206 0 discriminator 1
 8923              		.syntax unified
 8924              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8925 00d8 43E80021 		strex r1, r2, [r3]
 8926              	@ 0 "" 2
 8927              	.LVL922:
 8928              		.thumb
 8929              		.syntax unified
 8930              	.LBE1123:
 8931              	.LBE1122:
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 8932              		.loc 1 3487 0 discriminator 1
 8933 00dc 0029     		cmp	r1, #0
 8934 00de F7D1     		bne	.L1024
 8935 00e0 D0E7     		b	.L1020
 8936              	.LVL923:
 8937              	.L1021:
 8938              	.LBE1119:
3477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 8939              		.loc 1 3477 0
 8940 00e2 094A     		ldr	r2, .L1044+12
 8941              	.LVL924:
 8942 00e4 4267     		str	r2, [r0, #116]
3481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 8943              		.loc 1 3481 0
 8944 00e6 0029     		cmp	r1, #0
 8945 00e8 F2D0     		beq	.L1024
 8946              	.L1023:
 8947              	.LVL925:
 8948              	.LBB1124:
 8949              	.LBB1125:
 8950              	.LBB1126:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8951              		.loc 2 1155 0 discriminator 1
 8952              		.syntax unified
 8953              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8954 00ea 53E8002F 		ldrex r2, [r3]
 8955              	@ 0 "" 2
 8956              	.LVL926:
 8957              		.thumb
 8958              		.syntax unified
 8959              	.LBE1126:
 8960              	.LBE1125:
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 8961              		.loc 1 3483 0 discriminator 1
 8962 00ee 42F49072 		orr	r2, r2, #288
 8963              	.LVL927:
 8964              	.LBB1127:
 8965              	.LBB1128:
 8966              		.loc 2 1206 0 discriminator 1
 8967              		.syntax unified
 8968              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8969 00f2 43E80021 		strex r1, r2, [r3]
 8970              	@ 0 "" 2
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 282


 8971              	.LVL928:
 8972              		.thumb
 8973              		.syntax unified
 8974              	.LBE1128:
 8975              	.LBE1127:
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 8976              		.loc 1 3483 0 discriminator 1
 8977 00f6 0029     		cmp	r1, #0
 8978 00f8 F7D1     		bne	.L1023
 8979 00fa C3E7     		b	.L1020
 8980              	.L1045:
 8981              		.align	2
 8982              	.L1044:
 8983 00fc 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 8984 0100 00000000 		.word	UART_RxISR_8BIT_FIFOEN
 8985 0104 00000000 		.word	UART_RxISR_16BIT
 8986 0108 00000000 		.word	UART_RxISR_8BIT
 8987              	.LBE1124:
 8988              		.cfi_endproc
 8989              	.LFE376:
 8991              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 8992              		.align	1
 8993              		.global	HAL_UART_Receive_IT
 8994              		.syntax unified
 8995              		.thumb
 8996              		.thumb_func
 8997              		.fpu fpv4-sp-d16
 8999              	HAL_UART_Receive_IT:
 9000              	.LFB339:
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 9001              		.loc 1 1360 0
 9002              		.cfi_startproc
 9003              		@ args = 0, pretend = 0, frame = 0
 9004              		@ frame_needed = 0, uses_anonymous_args = 0
 9005              		@ link register save eliminated.
 9006              	.LVL929:
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 9007              		.loc 1 1362 0
 9008 0000 D0F88C30 		ldr	r3, [r0, #140]
 9009 0004 202B     		cmp	r3, #32
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 9010              		.loc 1 1360 0
 9011 0006 30B4     		push	{r4, r5}
 9012              	.LCFI76:
 9013              		.cfi_def_cfa_offset 8
 9014              		.cfi_offset 4, -8
 9015              		.cfi_offset 5, -4
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 9016              		.loc 1 1362 0
 9017 0008 15D1     		bne	.L1050
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9018              		.loc 1 1364 0
 9019 000a B9B1     		cbz	r1, .L1052
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9020              		.loc 1 1364 0 is_stmt 0 discriminator 1
 9021 000c B2B1     		cbz	r2, .L1052
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 283


 9022              		.loc 1 1370 0 is_stmt 1
 9023 000e 0023     		movs	r3, #0
 9024 0010 C366     		str	r3, [r0, #108]
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9025              		.loc 1 1372 0
 9026 0012 0468     		ldr	r4, [r0]
 9027 0014 0A4B     		ldr	r3, .L1057
 9028 0016 9C42     		cmp	r4, r3
 9029 0018 0AD0     		beq	.L1048
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 9030              		.loc 1 1375 0
 9031 001a 6368     		ldr	r3, [r4, #4]
 9032 001c 1B02     		lsls	r3, r3, #8
 9033 001e 07D5     		bpl	.L1048
 9034              	.L1049:
 9035              	.LVL930:
 9036              	.LBB1129:
 9037              	.LBB1130:
 9038              	.LBB1131:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9039              		.loc 2 1155 0 discriminator 1
 9040              		.syntax unified
 9041              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9042 0020 54E8003F 		ldrex r3, [r4]
 9043              	@ 0 "" 2
 9044              	.LVL931:
 9045              		.thumb
 9046              		.syntax unified
 9047              	.LBE1131:
 9048              	.LBE1130:
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 9049              		.loc 1 1378 0 discriminator 1
 9050 0024 43F08063 		orr	r3, r3, #67108864
 9051              	.LVL932:
 9052              	.LBB1132:
 9053              	.LBB1133:
 9054              		.loc 2 1206 0 discriminator 1
 9055              		.syntax unified
 9056              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9057 0028 44E80035 		strex r5, r3, [r4]
 9058              	@ 0 "" 2
 9059              	.LVL933:
 9060              		.thumb
 9061              		.syntax unified
 9062              	.LBE1133:
 9063              	.LBE1132:
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 9064              		.loc 1 1378 0 discriminator 1
 9065 002c 002D     		cmp	r5, #0
 9066 002e F7D1     		bne	.L1049
 9067              	.LVL934:
 9068              	.L1048:
 9069              	.LBE1129:
1388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9070              		.loc 1 1388 0
 9071 0030 30BC     		pop	{r4, r5}
 9072              	.LCFI77:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 284


 9073              		.cfi_remember_state
 9074              		.cfi_restore 5
 9075              		.cfi_restore 4
 9076              		.cfi_def_cfa_offset 0
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 9077              		.loc 1 1382 0
 9078 0032 FFF7FEBF 		b	UART_Start_Receive_IT
 9079              	.LVL935:
 9080              	.L1050:
 9081              	.LCFI78:
 9082              		.cfi_restore_state
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 9083              		.loc 1 1386 0
 9084 0036 0220     		movs	r0, #2
 9085              	.LVL936:
 9086              	.L1047:
1388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9087              		.loc 1 1388 0
 9088 0038 30BC     		pop	{r4, r5}
 9089              	.LCFI79:
 9090              		.cfi_remember_state
 9091              		.cfi_restore 5
 9092              		.cfi_restore 4
 9093              		.cfi_def_cfa_offset 0
 9094 003a 7047     		bx	lr
 9095              	.LVL937:
 9096              	.L1052:
 9097              	.LCFI80:
 9098              		.cfi_restore_state
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 9099              		.loc 1 1366 0
 9100 003c 0120     		movs	r0, #1
 9101              	.LVL938:
 9102 003e FBE7     		b	.L1047
 9103              	.L1058:
 9104              		.align	2
 9105              	.L1057:
 9106 0040 00800040 		.word	1073774592
 9107              		.cfi_endproc
 9108              	.LFE339:
 9110              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 9111              		.align	1
 9112              		.global	UART_Start_Receive_DMA
 9113              		.syntax unified
 9114              		.thumb
 9115              		.thumb_func
 9116              		.fpu fpv4-sp-d16
 9118              	UART_Start_Receive_DMA:
 9119              	.LFB377:
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 9120              		.loc 1 3505 0
 9121              		.cfi_startproc
 9122              		@ args = 0, pretend = 0, frame = 0
 9123              		@ frame_needed = 0, uses_anonymous_args = 0
 9124              	.LVL939:
 9125 0000 70B5     		push	{r4, r5, r6, lr}
 9126              	.LCFI81:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 285


 9127              		.cfi_def_cfa_offset 16
 9128              		.cfi_offset 4, -16
 9129              		.cfi_offset 5, -12
 9130              		.cfi_offset 6, -8
 9131              		.cfi_offset 14, -4
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 9132              		.loc 1 3505 0
 9133 0002 0446     		mov	r4, r0
3506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferSize = Size;
 9134              		.loc 1 3506 0
 9135 0004 8165     		str	r1, [r0, #88]
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 9136              		.loc 1 3505 0
 9137 0006 1346     		mov	r3, r2
3507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9138              		.loc 1 3507 0
 9139 0008 A4F85C20 		strh	r2, [r4, #92]	@ movhi
3509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 9140              		.loc 1 3509 0
 9141 000c 0022     		movs	r2, #0
 9142              	.LVL940:
 9143 000e C0F89020 		str	r2, [r0, #144]
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9144              		.loc 1 3510 0
 9145 0012 2220     		movs	r0, #34
 9146              	.LVL941:
 9147 0014 C4F88C00 		str	r0, [r4, #140]
3512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 9148              		.loc 1 3512 0
 9149 0018 D4F88000 		ldr	r0, [r4, #128]
 9150 001c A8B1     		cbz	r0, .L1060
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9151              		.loc 1 3515 0
 9152 001e 1D4E     		ldr	r6, .L1078
 9153 0020 2568     		ldr	r5, [r4]
 9154 0022 C662     		str	r6, [r0, #44]
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9155              		.loc 1 3518 0
 9156 0024 1C4E     		ldr	r6, .L1078+4
 9157 0026 0663     		str	r6, [r0, #48]
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9158              		.loc 1 3521 0
 9159 0028 1C4E     		ldr	r6, .L1078+8
3524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9160              		.loc 1 3524 0
 9161 002a C0E90D62 		strd	r6, r2, [r0, #52]
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9162              		.loc 1 3527 0
 9163 002e 0A46     		mov	r2, r1
 9164 0030 05F12401 		add	r1, r5, #36
 9165              	.LVL942:
 9166 0034 FFF7FEFF 		bl	HAL_DMA_Start_IT
 9167              	.LVL943:
 9168 0038 38B1     		cbz	r0, .L1060
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9169              		.loc 1 3530 0
 9170 003a 1023     		movs	r3, #16
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 286


 9171 003c C4F89030 		str	r3, [r4, #144]
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9172              		.loc 1 3533 0
 9173 0040 2023     		movs	r3, #32
 9174 0042 C4F88C30 		str	r3, [r4, #140]
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 9175              		.loc 1 3535 0
 9176 0046 0120     		movs	r0, #1
 9177              	.L1061:
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9178              		.loc 1 3553 0
 9179 0048 70BD     		pop	{r4, r5, r6, pc}
 9180              	.LVL944:
 9181              	.L1060:
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 9182              		.loc 1 3540 0
 9183 004a 2269     		ldr	r2, [r4, #16]
 9184 004c 2368     		ldr	r3, [r4]
 9185 004e 3AB1     		cbz	r2, .L1064
 9186              	.L1063:
 9187              	.LVL945:
 9188              	.LBB1156:
 9189              	.LBB1157:
 9190              	.LBB1158:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9191              		.loc 2 1155 0 discriminator 1
 9192              		.syntax unified
 9193              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9194 0050 53E8002F 		ldrex r2, [r3]
 9195              	@ 0 "" 2
 9196              	.LVL946:
 9197              		.thumb
 9198              		.syntax unified
 9199              	.LBE1158:
 9200              	.LBE1157:
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 9201              		.loc 1 3542 0 discriminator 1
 9202 0054 42F48072 		orr	r2, r2, #256
 9203              	.LVL947:
 9204              	.LBB1159:
 9205              	.LBB1160:
 9206              		.loc 2 1206 0 discriminator 1
 9207              		.syntax unified
 9208              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9209 0058 43E80021 		strex r1, r2, [r3]
 9210              	@ 0 "" 2
 9211              	.LVL948:
 9212              		.thumb
 9213              		.syntax unified
 9214              	.LBE1160:
 9215              	.LBE1159:
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 9216              		.loc 1 3542 0 discriminator 1
 9217 005c 0029     		cmp	r1, #0
 9218 005e F7D1     		bne	.L1063
 9219              	.LVL949:
 9220              	.L1064:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 287


 9221              	.LBE1156:
 9222              	.LBB1161:
 9223              	.LBB1162:
 9224              	.LBB1163:
 9225              	.LBB1164:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9226              		.loc 2 1155 0
 9227 0060 03F10802 		add	r2, r3, #8
 9228              	.LVL950:
 9229              		.syntax unified
 9230              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9231 0064 52E8002F 		ldrex r2, [r2]
 9232              	@ 0 "" 2
 9233              	.LVL951:
 9234              		.thumb
 9235              		.syntax unified
 9236              	.LBE1164:
 9237              	.LBE1163:
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9238              		.loc 1 3546 0
 9239 0068 42F00102 		orr	r2, r2, #1
 9240              	.LVL952:
 9241              	.LBB1165:
 9242              	.LBB1166:
 9243              		.loc 2 1206 0
 9244 006c 03F10800 		add	r0, r3, #8
 9245              	.LVL953:
 9246              		.syntax unified
 9247              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9248 0070 40E80021 		strex r1, r2, [r0]
 9249              	@ 0 "" 2
 9250              	.LVL954:
 9251              		.thumb
 9252              		.syntax unified
 9253              	.LBE1166:
 9254              	.LBE1165:
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9255              		.loc 1 3546 0
 9256 0074 0029     		cmp	r1, #0
 9257 0076 F3D1     		bne	.L1064
 9258              	.LVL955:
 9259              	.L1065:
 9260              	.LBE1162:
 9261              	.LBB1167:
 9262              	.LBB1168:
 9263              	.LBB1169:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9264              		.loc 2 1155 0
 9265 0078 03F10802 		add	r2, r3, #8
 9266              	.LVL956:
 9267              		.syntax unified
 9268              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9269 007c 52E8002F 		ldrex r2, [r2]
 9270              	@ 0 "" 2
 9271              	.LVL957:
 9272              		.thumb
 9273              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 288


 9274              	.LBE1169:
 9275              	.LBE1168:
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9276              		.loc 1 3550 0
 9277 0080 42F04002 		orr	r2, r2, #64
 9278              	.LVL958:
 9279              	.LBB1170:
 9280              	.LBB1171:
 9281              		.loc 2 1206 0
 9282 0084 03F10801 		add	r1, r3, #8
 9283              	.LVL959:
 9284              		.syntax unified
 9285              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9286 0088 41E80020 		strex r0, r2, [r1]
 9287              	@ 0 "" 2
 9288              	.LVL960:
 9289              		.thumb
 9290              		.syntax unified
 9291              	.LBE1171:
 9292              	.LBE1170:
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9293              		.loc 1 3550 0
 9294 008c 0028     		cmp	r0, #0
 9295 008e F3D1     		bne	.L1065
 9296 0090 DAE7     		b	.L1061
 9297              	.L1079:
 9298 0092 00BF     		.align	2
 9299              	.L1078:
 9300 0094 00000000 		.word	UART_DMAReceiveCplt
 9301 0098 00000000 		.word	UART_DMARxHalfCplt
 9302 009c 00000000 		.word	UART_DMAError
 9303              	.LBE1167:
 9304              	.LBE1161:
 9305              		.cfi_endproc
 9306              	.LFE377:
 9308              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 9309              		.align	1
 9310              		.global	HAL_UART_Receive_DMA
 9311              		.syntax unified
 9312              		.thumb
 9313              		.thumb_func
 9314              		.fpu fpv4-sp-d16
 9316              	HAL_UART_Receive_DMA:
 9317              	.LFB341:
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 9318              		.loc 1 1471 0
 9319              		.cfi_startproc
 9320              		@ args = 0, pretend = 0, frame = 0
 9321              		@ frame_needed = 0, uses_anonymous_args = 0
 9322              		@ link register save eliminated.
 9323              	.LVL961:
1473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 9324              		.loc 1 1473 0
 9325 0000 D0F88C30 		ldr	r3, [r0, #140]
 9326 0004 202B     		cmp	r3, #32
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 9327              		.loc 1 1471 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 289


 9328 0006 30B4     		push	{r4, r5}
 9329              	.LCFI82:
 9330              		.cfi_def_cfa_offset 8
 9331              		.cfi_offset 4, -8
 9332              		.cfi_offset 5, -4
1473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 9333              		.loc 1 1473 0
 9334 0008 15D1     		bne	.L1084
1475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9335              		.loc 1 1475 0
 9336 000a B9B1     		cbz	r1, .L1086
1475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9337              		.loc 1 1475 0 is_stmt 0 discriminator 1
 9338 000c B2B1     		cbz	r2, .L1086
1481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9339              		.loc 1 1481 0 is_stmt 1
 9340 000e 0023     		movs	r3, #0
 9341 0010 C366     		str	r3, [r0, #108]
1483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9342              		.loc 1 1483 0
 9343 0012 0468     		ldr	r4, [r0]
 9344 0014 0A4B     		ldr	r3, .L1091
 9345 0016 9C42     		cmp	r4, r3
 9346 0018 0AD0     		beq	.L1082
1486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 9347              		.loc 1 1486 0
 9348 001a 6368     		ldr	r3, [r4, #4]
 9349 001c 1B02     		lsls	r3, r3, #8
 9350 001e 07D5     		bpl	.L1082
 9351              	.L1083:
 9352              	.LVL962:
 9353              	.LBB1172:
 9354              	.LBB1173:
 9355              	.LBB1174:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9356              		.loc 2 1155 0 discriminator 1
 9357              		.syntax unified
 9358              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9359 0020 54E8003F 		ldrex r3, [r4]
 9360              	@ 0 "" 2
 9361              	.LVL963:
 9362              		.thumb
 9363              		.syntax unified
 9364              	.LBE1174:
 9365              	.LBE1173:
1489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 9366              		.loc 1 1489 0 discriminator 1
 9367 0024 43F08063 		orr	r3, r3, #67108864
 9368              	.LVL964:
 9369              	.LBB1175:
 9370              	.LBB1176:
 9371              		.loc 2 1206 0 discriminator 1
 9372              		.syntax unified
 9373              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9374 0028 44E80035 		strex r5, r3, [r4]
 9375              	@ 0 "" 2
 9376              	.LVL965:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 290


 9377              		.thumb
 9378              		.syntax unified
 9379              	.LBE1176:
 9380              	.LBE1175:
1489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 9381              		.loc 1 1489 0 discriminator 1
 9382 002c 002D     		cmp	r5, #0
 9383 002e F7D1     		bne	.L1083
 9384              	.LVL966:
 9385              	.L1082:
 9386              	.LBE1172:
1499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9387              		.loc 1 1499 0
 9388 0030 30BC     		pop	{r4, r5}
 9389              	.LCFI83:
 9390              		.cfi_remember_state
 9391              		.cfi_restore 5
 9392              		.cfi_restore 4
 9393              		.cfi_def_cfa_offset 0
1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 9394              		.loc 1 1493 0
 9395 0032 FFF7FEBF 		b	UART_Start_Receive_DMA
 9396              	.LVL967:
 9397              	.L1084:
 9398              	.LCFI84:
 9399              		.cfi_restore_state
1497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 9400              		.loc 1 1497 0
 9401 0036 0220     		movs	r0, #2
 9402              	.LVL968:
 9403              	.L1081:
1499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 9404              		.loc 1 1499 0
 9405 0038 30BC     		pop	{r4, r5}
 9406              	.LCFI85:
 9407              		.cfi_remember_state
 9408              		.cfi_restore 5
 9409              		.cfi_restore 4
 9410              		.cfi_def_cfa_offset 0
 9411 003a 7047     		bx	lr
 9412              	.LVL969:
 9413              	.L1086:
 9414              	.LCFI86:
 9415              		.cfi_restore_state
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 9416              		.loc 1 1477 0
 9417 003c 0120     		movs	r0, #1
 9418              	.LVL970:
 9419 003e FBE7     		b	.L1081
 9420              	.L1092:
 9421              		.align	2
 9422              	.L1091:
 9423 0040 00800040 		.word	1073774592
 9424              		.cfi_endproc
 9425              	.LFE341:
 9427              		.global	UARTPrescTable
 9428              		.section	.rodata.CSWTCH.60,"a",%progbits
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 291


 9429              		.set	.LANCHOR0,. + 0
 9432              	CSWTCH.60:
 9433 0000 01       		.byte	1
 9434 0001 04       		.byte	4
 9435 0002 02       		.byte	2
 9436 0003 08       		.byte	8
 9437              		.section	.rodata.CSWTCH.61,"a",%progbits
 9438              		.set	.LANCHOR1,. + 0
 9441              	CSWTCH.61:
 9442 0000 00       		.byte	0
 9443 0001 10       		.byte	16
 9444 0002 10       		.byte	16
 9445 0003 10       		.byte	16
 9446 0004 04       		.byte	4
 9447 0005 10       		.byte	16
 9448 0006 10       		.byte	16
 9449 0007 10       		.byte	16
 9450 0008 02       		.byte	2
 9451 0009 10       		.byte	16
 9452 000a 10       		.byte	16
 9453 000b 10       		.byte	16
 9454 000c 08       		.byte	8
 9455              		.section	.rodata.UARTPrescTable,"a",%progbits
 9456              		.align	1
 9457              		.set	.LANCHOR2,. + 0
 9460              	UARTPrescTable:
 9461 0000 0100     		.short	1
 9462 0002 0200     		.short	2
 9463 0004 0400     		.short	4
 9464 0006 0600     		.short	6
 9465 0008 0800     		.short	8
 9466 000a 0A00     		.short	10
 9467 000c 0C00     		.short	12
 9468 000e 1000     		.short	16
 9469 0010 2000     		.short	32
 9470 0012 4000     		.short	64
 9471 0014 8000     		.short	128
 9472 0016 0001     		.short	256
 9473              		.text
 9474              	.Letext0:
 9475              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 9476              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 9477              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 9478              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 9479              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 9480              		.file 8 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 9481              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 9482              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 9483              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 9484              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 9485              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 9486              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 9487              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart_ex.h"
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 292


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g4xx_hal_uart.c
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:18     .text.UART_EndTxTransfer:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:24     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:119    .text.UART_EndRxTransfer:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:125    .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:268    .text.UART_EndRxTransfer:00000054 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:273    .text.UART_TxISR_8BIT.part.0:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:279    .text.UART_TxISR_8BIT.part.0:00000000 UART_TxISR_8BIT.part.0
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:279    .text.UART_TxISR_8BIT.part.0:00000000 UART_TxISR_16BIT.part.1
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:365    .text.UART_TxISR_8BIT:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:371    .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:413    .text.UART_TxISR_16BIT:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:419    .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:463    .text.UART_TxISR_8BIT_FIFOEN.part.2:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:469    .text.UART_TxISR_8BIT_FIFOEN.part.2:00000000 UART_TxISR_8BIT_FIFOEN.part.2
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:469    .text.UART_TxISR_8BIT_FIFOEN.part.2:00000000 UART_TxISR_16BIT_FIFOEN.part.3
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:559    .text.UART_TxISR_8BIT_FIFOEN:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:565    .text.UART_TxISR_8BIT_FIFOEN:00000000 UART_TxISR_8BIT_FIFOEN
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:644    .text.UART_TxISR_16BIT_FIFOEN:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:650    .text.UART_TxISR_16BIT_FIFOEN:00000000 UART_TxISR_16BIT_FIFOEN
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:734    .text.HAL_UART_MspInit:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:741    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:755    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:762    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:773    .text.HAL_UART_DeInit:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:780    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:845    .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:852    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1022   .text.HAL_UART_Transmit_IT:00000090 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1030   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1037   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1168   .text.HAL_UART_Transmit_DMA:00000078 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2497   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2639   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2723   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1175   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1182   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1372   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1379   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1564   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1571   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1744   .text.HAL_UART_Abort:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:1751   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2047   .text.HAL_UART_Abort:000000fc $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2052   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2059   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2238   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2245   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2468   .text.HAL_UART_AbortReceive:000000a8 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2473   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2480   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2491   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2615   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2622   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2633   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2663   .text.HAL_UART_RxCpltCallback:00000000 $t
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 293


C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2670   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2681   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2688   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2699   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2706   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2717   .text.UART_DMAError:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2796   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2802   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2831   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2838   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2849   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:2856   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3184   .text.HAL_UART_Abort_IT:00000120 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3264   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3197   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3191   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3258   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3328   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3335   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3346   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3353   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3538   .text.HAL_UART_AbortTransmit_IT:00000094 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3549   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3543   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3589   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3596   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3607   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3614   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3852   .text.HAL_UART_AbortReceive_IT:000000b8 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3864   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3858   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3908   .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3915   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3929   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:3936   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:4711   .text.HAL_UART_IRQHandler:000002cc $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:4719   .text.UART_RxISR_8BIT.part.4:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:4725   .text.UART_RxISR_8BIT.part.4:00000000 UART_RxISR_8BIT.part.4
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:4934   .text.UART_RxISR_8BIT.part.4:00000088 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:4725   .text.UART_RxISR_8BIT.part.4:00000000 UART_RxISR_16BIT.part.5
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:4940   .text.UART_RxISR_16BIT:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:4946   .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:4997   .text.UART_RxISR_8BIT:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:5003   .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:5072   .text.UART_RxISR_8BIT_FIFOEN:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:5078   .text.UART_RxISR_8BIT_FIFOEN:00000000 UART_RxISR_8BIT_FIFOEN
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:5525   .text.UART_RxISR_8BIT_FIFOEN:00000190 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:5532   .text.UART_RxISR_16BIT_FIFOEN:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:5538   .text.UART_RxISR_16BIT_FIFOEN:00000000 UART_RxISR_16BIT_FIFOEN
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:5985   .text.UART_RxISR_16BIT_FIFOEN:0000018c $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:5992   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:5998   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6040   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6046   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6254   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6261   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6285   .text.HAL_UART_ReceiverTimeout_Config:00000014 $d
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 294


C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6290   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6297   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6351   .text.HAL_UART_EnableReceiverTimeout:0000003c $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6356   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6363   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6417   .text.HAL_UART_DisableReceiverTimeout:0000003c $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6422   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6429   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6448   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6455   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6572   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6579   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6696   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6703   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6745   .text.HAL_UART_GetState:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6752   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6774   .text.HAL_UART_GetError:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6781   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6800   .text.UART_SetConfig:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6807   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6900   .text.UART_SetConfig:00000076 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7092   .text.UART_SetConfig:0000019c $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7102   .text.UART_SetConfig:000001c0 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7248   .text.UART_SetConfig:0000027c $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7264   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7271   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7391   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7398   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7507   .text.HAL_UART_Transmit:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7514   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7669   .text.HAL_UART_Receive:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7676   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7872   .text.UART_CheckIdleState:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:7879   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8093   .text.HAL_UART_Init:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8100   .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8185   .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8192   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8281   .text.HAL_LIN_Init:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8288   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8396   .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8403   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8509   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8516   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8586   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8593   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8663   .text.UART_Start_Receive_IT:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8670   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8983   .text.UART_Start_Receive_IT:000000fc $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8992   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:8999   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9106   .text.HAL_UART_Receive_IT:00000040 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9111   .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9118   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9300   .text.UART_Start_Receive_DMA:00000094 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9309   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9316   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccSdxufH.s 			page 295


C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9423   .text.HAL_UART_Receive_DMA:00000040 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9460   .rodata.UARTPrescTable:00000000 UARTPrescTable
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9432   .rodata.CSWTCH.60:00000000 CSWTCH.60
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9441   .rodata.CSWTCH.61:00000000 CSWTCH.61
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:9456   .rodata.UARTPrescTable:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6910   .text.UART_SetConfig:0000007f $d
C:\Users\82057\AppData\Local\Temp\ccSdxufH.s:6910   .text.UART_SetConfig:00000080 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_TxFifoEmptyCallback
HAL_UARTEx_RxFifoFullCallback
__aeabi_uldivmod
__aeabi_ldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
