ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"spi_MEncoder.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_SPI_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_SPI_MspInit:
  26              	.LFB333:
  27              		.file 1 "Src/spi_MEncoder.c"
   1:Src/spi_MEncoder.c **** #include "global.h"
   2:Src/spi_MEncoder.c **** #include "spi_MEncoder.h"
   3:Src/spi_MEncoder.c **** #include "icmu.h"
   4:Src/spi_MEncoder.c **** 
   5:Src/spi_MEncoder.c **** u16 EncoderAB_PulseWidth_Array[16] = {0};//�������������
   6:Src/spi_MEncoder.c **** s32 g_MEncode = 0;
   7:Src/spi_MEncoder.c **** volatile s32 g_Encode_AbsPos = 0;
   8:Src/spi_MEncoder.c **** volatile s32 g_Encode_AbsPos_Last = 0;
   9:Src/spi_MEncoder.c **** volatile s32 g_Encode_Inc = 0;
  10:Src/spi_MEncoder.c **** volatile s32 Num_Turns = 0;
  11:Src/spi_MEncoder.c **** volatile s32 g_Encode_offset = 0;
  12:Src/spi_MEncoder.c **** volatile s32 g_Encode_offset_EN = 0;
  13:Src/spi_MEncoder.c **** volatile s32 tim3_cnt = 0;
  14:Src/spi_MEncoder.c **** volatile s32 tim4_cnt = 0;
  15:Src/spi_MEncoder.c **** 
  16:Src/spi_MEncoder.c **** TIM_HandleTypeDef htim2;
  17:Src/spi_MEncoder.c **** 
  18:Src/spi_MEncoder.c **** 
  19:Src/spi_MEncoder.c **** 
  20:Src/spi_MEncoder.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  21:Src/spi_MEncoder.c **** 
  22:Src/spi_MEncoder.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  23:Src/spi_MEncoder.c **** 
  24:Src/spi_MEncoder.c **** 
  25:Src/spi_MEncoder.c **** /**
  26:Src/spi_MEncoder.c ****   * @brief SPI3 Initialization Function
  27:Src/spi_MEncoder.c ****   * @param None
  28:Src/spi_MEncoder.c ****   * @retval None
  29:Src/spi_MEncoder.c ****   */
  30:Src/spi_MEncoder.c **** SPI_HandleTypeDef hspi3;
  31:Src/spi_MEncoder.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 2


  32:Src/spi_MEncoder.c **** 
  33:Src/spi_MEncoder.c **** /**
  34:Src/spi_MEncoder.c **** * @brief SPI MSP Initialization
  35:Src/spi_MEncoder.c **** * This function configures the hardware resources used in this example
  36:Src/spi_MEncoder.c **** * @param hspi: SPI handle pointer
  37:Src/spi_MEncoder.c **** * @retval None
  38:Src/spi_MEncoder.c **** */
  39:Src/spi_MEncoder.c **** void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
  40:Src/spi_MEncoder.c **** {
  28              		.loc 1 40 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 28
  36              		.cfi_offset 4, -28
  37              		.cfi_offset 5, -24
  38              		.cfi_offset 6, -20
  39              		.cfi_offset 7, -16
  40              		.cfi_offset 8, -12
  41              		.cfi_offset 9, -8
  42              		.cfi_offset 14, -4
  43 0004 8DB0     		sub	sp, sp, #52
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 80
  41:Src/spi_MEncoder.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 41 0
  47 0006 0023     		movs	r3, #0
  48 0008 0793     		str	r3, [sp, #28]
  49 000a 0893     		str	r3, [sp, #32]
  50 000c 0993     		str	r3, [sp, #36]
  51 000e 0A93     		str	r3, [sp, #40]
  52 0010 0B93     		str	r3, [sp, #44]
  42:Src/spi_MEncoder.c ****   if(hspi->Instance==SPI3)
  53              		.loc 1 42 0
  54 0012 0368     		ldr	r3, [r0]
  55 0014 5A4A     		ldr	r2, .L11
  56 0016 9342     		cmp	r3, r2
  57 0018 06D0     		beq	.L7
  58 001a 0446     		mov	r4, r0
  43:Src/spi_MEncoder.c ****   {
  44:Src/spi_MEncoder.c ****   /* USER CODE BEGIN SPI3_MspInit 0 */
  45:Src/spi_MEncoder.c **** 
  46:Src/spi_MEncoder.c ****   /* USER CODE END SPI3_MspInit 0 */
  47:Src/spi_MEncoder.c ****     /* Peripheral clock enable */
  48:Src/spi_MEncoder.c ****     __HAL_RCC_SPI3_CLK_ENABLE();
  49:Src/spi_MEncoder.c **** 
  50:Src/spi_MEncoder.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  51:Src/spi_MEncoder.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
  52:Src/spi_MEncoder.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  53:Src/spi_MEncoder.c ****     /**SPI3 GPIO Configuration
  54:Src/spi_MEncoder.c ****     PA15     ------> SPI3_NSS
  55:Src/spi_MEncoder.c ****     PC10     ------> SPI3_SCK
  56:Src/spi_MEncoder.c ****     PC11     ------> SPI3_MISO
  57:Src/spi_MEncoder.c ****     PB5     ------> SPI3_MOSI
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 3


  58:Src/spi_MEncoder.c ****     */
  59:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pin = GPIO_PIN_15;
  60:Src/spi_MEncoder.c ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  61:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
  62:Src/spi_MEncoder.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  63:Src/spi_MEncoder.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
  64:Src/spi_MEncoder.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  65:Src/spi_MEncoder.c **** 
  66:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
  67:Src/spi_MEncoder.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  68:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  69:Src/spi_MEncoder.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  70:Src/spi_MEncoder.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
  71:Src/spi_MEncoder.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  72:Src/spi_MEncoder.c **** 
  73:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
  74:Src/spi_MEncoder.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  75:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
  76:Src/spi_MEncoder.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  77:Src/spi_MEncoder.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
  78:Src/spi_MEncoder.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  79:Src/spi_MEncoder.c **** 
  80:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pin = GPIO_PIN_5;
  81:Src/spi_MEncoder.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  82:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  83:Src/spi_MEncoder.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  84:Src/spi_MEncoder.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
  85:Src/spi_MEncoder.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  86:Src/spi_MEncoder.c **** 
  87:Src/spi_MEncoder.c ****   /* USER CODE BEGIN SPI3_MspInit 1 */
  88:Src/spi_MEncoder.c **** 
  89:Src/spi_MEncoder.c ****   /* USER CODE END SPI3_MspInit 1 */
  90:Src/spi_MEncoder.c ****   }
  91:Src/spi_MEncoder.c **** 	
  92:Src/spi_MEncoder.c **** 	else  if(hspi->Instance==SPI1)
  59              		.loc 1 92 0
  60 001c 594A     		ldr	r2, .L11+4
  61 001e 9342     		cmp	r3, r2
  62 0020 5ED0     		beq	.L8
  63              	.LVL1:
  64              	.L1:
  93:Src/spi_MEncoder.c ****   {
  94:Src/spi_MEncoder.c ****   /* USER CODE BEGIN SPI1_MspInit 0 */
  95:Src/spi_MEncoder.c **** 
  96:Src/spi_MEncoder.c ****   /* USER CODE END SPI1_MspInit 0 */
  97:Src/spi_MEncoder.c ****     /* Peripheral clock enable */
  98:Src/spi_MEncoder.c ****     __HAL_RCC_SPI1_CLK_ENABLE();
  99:Src/spi_MEncoder.c **** 
 100:Src/spi_MEncoder.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 101:Src/spi_MEncoder.c ****     /**SPI1 GPIO Configuration
 102:Src/spi_MEncoder.c ****     PA4     ------> SPI1_NSS
 103:Src/spi_MEncoder.c ****     PA5     ------> SPI1_SCK
 104:Src/spi_MEncoder.c ****     PA6     ------> SPI1_MISO
 105:Src/spi_MEncoder.c ****     PA7     ------> SPI1_MOSI
 106:Src/spi_MEncoder.c ****     */
 107:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 108:Src/spi_MEncoder.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 4


 109:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 110:Src/spi_MEncoder.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 111:Src/spi_MEncoder.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 112:Src/spi_MEncoder.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 113:Src/spi_MEncoder.c **** 
 114:Src/spi_MEncoder.c ****     /* SPI1 DMA Init */
 115:Src/spi_MEncoder.c ****     /* SPI1_RX Init */
 116:Src/spi_MEncoder.c ****     hdma_spi1_rx.Instance = DMA1_Channel4;
 117:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.Request = DMA_REQUEST_SPI1_RX;
 118:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 119:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 120:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.MemInc = DMA_MINC_ENABLE;
 121:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 122:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 123:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.Mode = DMA_CIRCULAR;
 124:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.Priority = DMA_PRIORITY_LOW;
 125:Src/spi_MEncoder.c ****     if (HAL_DMA_Init(&hdma_spi1_rx) != HAL_OK)
 126:Src/spi_MEncoder.c ****     {
 127:Src/spi_MEncoder.c ****       Error_Handler();
 128:Src/spi_MEncoder.c ****     }
 129:Src/spi_MEncoder.c **** 
 130:Src/spi_MEncoder.c ****     __HAL_LINKDMA(hspi,hdmarx,hdma_spi1_rx);
 131:Src/spi_MEncoder.c **** 
 132:Src/spi_MEncoder.c ****     /* SPI1_TX Init */
 133:Src/spi_MEncoder.c ****     hdma_spi1_tx.Instance = DMA1_Channel3;
 134:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.Request = DMA_REQUEST_SPI1_TX;
 135:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 136:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 137:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 138:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 139:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 140:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.Mode = DMA_NORMAL;
 141:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.Priority = DMA_PRIORITY_LOW;
 142:Src/spi_MEncoder.c ****     if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 143:Src/spi_MEncoder.c ****     {
 144:Src/spi_MEncoder.c ****       Error_Handler();
 145:Src/spi_MEncoder.c ****     }
 146:Src/spi_MEncoder.c **** 
 147:Src/spi_MEncoder.c ****     __HAL_LINKDMA(hspi,hdmatx,hdma_spi1_tx);
 148:Src/spi_MEncoder.c **** 
 149:Src/spi_MEncoder.c ****   /* USER CODE BEGIN SPI1_MspInit 1 */
 150:Src/spi_MEncoder.c **** //		__HAL_DMA_ENABLE(&hdma_spi1_rx);
 151:Src/spi_MEncoder.c **** //		__HAL_DMA_ENABLE(&hdma_spi1_tx);
 152:Src/spi_MEncoder.c **** //		
 153:Src/spi_MEncoder.c **** //		__HAL_DMA_ENABLE_IT(&hdma_spi1_rx, DMA_IT_TC );
 154:Src/spi_MEncoder.c **** //		__HAL_DMA_ENABLE_IT(&hdma_spi1_tx, DMA_IT_TC );
 155:Src/spi_MEncoder.c **** //		
 156:Src/spi_MEncoder.c **** 		
 157:Src/spi_MEncoder.c **** //		HAL_DMA_Start_IT(&hdma_spi1_rx,(uint32_t)(&(SPI1->DR)), (uint32_t)(&spi1_reg_buf[0]) ,4);
 158:Src/spi_MEncoder.c **** 
 159:Src/spi_MEncoder.c **** 		
 160:Src/spi_MEncoder.c ****   /* USER CODE END SPI1_MspInit 1 */
 161:Src/spi_MEncoder.c ****   }
 162:Src/spi_MEncoder.c **** 
 163:Src/spi_MEncoder.c **** }
  65              		.loc 1 163 0
  66 0022 0DB0     		add	sp, sp, #52
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 5


  67              	.LCFI2:
  68              		.cfi_remember_state
  69              		.cfi_def_cfa_offset 28
  70              		@ sp needed
  71 0024 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
  72              	.LVL2:
  73              	.L7:
  74              	.LCFI3:
  75              		.cfi_restore_state
  76              	.LBB2:
  48:Src/spi_MEncoder.c **** 
  77              		.loc 1 48 0
  78 0028 574B     		ldr	r3, .L11+8
  79 002a 9A6D     		ldr	r2, [r3, #88]
  80 002c 42F40042 		orr	r2, r2, #32768
  81 0030 9A65     		str	r2, [r3, #88]
  82 0032 9A6D     		ldr	r2, [r3, #88]
  83 0034 02F40042 		and	r2, r2, #32768
  84 0038 0192     		str	r2, [sp, #4]
  85 003a 019A     		ldr	r2, [sp, #4]
  86              	.LBE2:
  87              	.LBB3:
  50:Src/spi_MEncoder.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
  88              		.loc 1 50 0
  89 003c DA6C     		ldr	r2, [r3, #76]
  90 003e 42F00102 		orr	r2, r2, #1
  91 0042 DA64     		str	r2, [r3, #76]
  92 0044 DA6C     		ldr	r2, [r3, #76]
  93 0046 02F00102 		and	r2, r2, #1
  94 004a 0292     		str	r2, [sp, #8]
  95 004c 029A     		ldr	r2, [sp, #8]
  96              	.LBE3:
  97              	.LBB4:
  51:Src/spi_MEncoder.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 51 0
  99 004e DA6C     		ldr	r2, [r3, #76]
 100 0050 42F00402 		orr	r2, r2, #4
 101 0054 DA64     		str	r2, [r3, #76]
 102 0056 DA6C     		ldr	r2, [r3, #76]
 103 0058 02F00402 		and	r2, r2, #4
 104 005c 0392     		str	r2, [sp, #12]
 105 005e 039A     		ldr	r2, [sp, #12]
 106              	.LBE4:
 107              	.LBB5:
  52:Src/spi_MEncoder.c ****     /**SPI3 GPIO Configuration
 108              		.loc 1 52 0
 109 0060 DA6C     		ldr	r2, [r3, #76]
 110 0062 42F00202 		orr	r2, r2, #2
 111 0066 DA64     		str	r2, [r3, #76]
 112 0068 DB6C     		ldr	r3, [r3, #76]
 113 006a 03F00203 		and	r3, r3, #2
 114 006e 0493     		str	r3, [sp, #16]
 115 0070 049B     		ldr	r3, [sp, #16]
 116              	.LBE5:
  59:Src/spi_MEncoder.c ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 59 0
 118 0072 4FF40043 		mov	r3, #32768
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 6


 119 0076 0793     		str	r3, [sp, #28]
  60:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 120              		.loc 1 60 0
 121 0078 0127     		movs	r7, #1
 122 007a 0897     		str	r7, [sp, #32]
  61:Src/spi_MEncoder.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 123              		.loc 1 61 0
 124 007c 0997     		str	r7, [sp, #36]
  62:Src/spi_MEncoder.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 125              		.loc 1 62 0
 126 007e 0325     		movs	r5, #3
 127 0080 0A95     		str	r5, [sp, #40]
  63:Src/spi_MEncoder.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 128              		.loc 1 63 0
 129 0082 0624     		movs	r4, #6
 130 0084 0B94     		str	r4, [sp, #44]
  64:Src/spi_MEncoder.c **** 
 131              		.loc 1 64 0
 132 0086 07A9     		add	r1, sp, #28
 133 0088 4FF09040 		mov	r0, #1207959552
 134              	.LVL3:
 135 008c FFF7FEFF 		bl	HAL_GPIO_Init
 136              	.LVL4:
  66:Src/spi_MEncoder.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 137              		.loc 1 66 0
 138 0090 4FF48063 		mov	r3, #1024
 139 0094 0793     		str	r3, [sp, #28]
  67:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 140              		.loc 1 67 0
 141 0096 0226     		movs	r6, #2
 142 0098 0896     		str	r6, [sp, #32]
  68:Src/spi_MEncoder.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 143              		.loc 1 68 0
 144 009a 4FF00008 		mov	r8, #0
 145 009e CDF82480 		str	r8, [sp, #36]
  69:Src/spi_MEncoder.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 146              		.loc 1 69 0
 147 00a2 0A95     		str	r5, [sp, #40]
  70:Src/spi_MEncoder.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 148              		.loc 1 70 0
 149 00a4 0B94     		str	r4, [sp, #44]
  71:Src/spi_MEncoder.c **** 
 150              		.loc 1 71 0
 151 00a6 DFF8F890 		ldr	r9, .L11+32
 152 00aa 07A9     		add	r1, sp, #28
 153 00ac 4846     		mov	r0, r9
 154 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL5:
  73:Src/spi_MEncoder.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 156              		.loc 1 73 0
 157 00b2 4FF40063 		mov	r3, #2048
 158 00b6 0793     		str	r3, [sp, #28]
  74:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 159              		.loc 1 74 0
 160 00b8 0896     		str	r6, [sp, #32]
  75:Src/spi_MEncoder.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 161              		.loc 1 75 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 7


 162 00ba 0997     		str	r7, [sp, #36]
  76:Src/spi_MEncoder.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 163              		.loc 1 76 0
 164 00bc 0A95     		str	r5, [sp, #40]
  77:Src/spi_MEncoder.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 165              		.loc 1 77 0
 166 00be 0B94     		str	r4, [sp, #44]
  78:Src/spi_MEncoder.c **** 
 167              		.loc 1 78 0
 168 00c0 07A9     		add	r1, sp, #28
 169 00c2 4846     		mov	r0, r9
 170 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 171              	.LVL6:
  80:Src/spi_MEncoder.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 172              		.loc 1 80 0
 173 00c8 2023     		movs	r3, #32
 174 00ca 0793     		str	r3, [sp, #28]
  81:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 175              		.loc 1 81 0
 176 00cc 0896     		str	r6, [sp, #32]
  82:Src/spi_MEncoder.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 177              		.loc 1 82 0
 178 00ce CDF82480 		str	r8, [sp, #36]
  83:Src/spi_MEncoder.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 179              		.loc 1 83 0
 180 00d2 0A95     		str	r5, [sp, #40]
  84:Src/spi_MEncoder.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 181              		.loc 1 84 0
 182 00d4 0B94     		str	r4, [sp, #44]
  85:Src/spi_MEncoder.c **** 
 183              		.loc 1 85 0
 184 00d6 07A9     		add	r1, sp, #28
 185 00d8 2C48     		ldr	r0, .L11+12
 186 00da FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL7:
 188 00de A0E7     		b	.L1
 189              	.LVL8:
 190              	.L8:
 191              	.LBB6:
  98:Src/spi_MEncoder.c **** 
 192              		.loc 1 98 0
 193 00e0 294B     		ldr	r3, .L11+8
 194 00e2 1A6E     		ldr	r2, [r3, #96]
 195 00e4 42F48052 		orr	r2, r2, #4096
 196 00e8 1A66     		str	r2, [r3, #96]
 197 00ea 1A6E     		ldr	r2, [r3, #96]
 198 00ec 02F48052 		and	r2, r2, #4096
 199 00f0 0592     		str	r2, [sp, #20]
 200 00f2 059A     		ldr	r2, [sp, #20]
 201              	.LBE6:
 202              	.LBB7:
 100:Src/spi_MEncoder.c ****     /**SPI1 GPIO Configuration
 203              		.loc 1 100 0
 204 00f4 DA6C     		ldr	r2, [r3, #76]
 205 00f6 42F00102 		orr	r2, r2, #1
 206 00fa DA64     		str	r2, [r3, #76]
 207 00fc DB6C     		ldr	r3, [r3, #76]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 8


 208 00fe 03F00103 		and	r3, r3, #1
 209 0102 0693     		str	r3, [sp, #24]
 210 0104 069B     		ldr	r3, [sp, #24]
 211              	.LBE7:
 107:Src/spi_MEncoder.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 212              		.loc 1 107 0
 213 0106 E023     		movs	r3, #224
 214 0108 0793     		str	r3, [sp, #28]
 108:Src/spi_MEncoder.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 215              		.loc 1 108 0
 216 010a 0223     		movs	r3, #2
 217 010c 0893     		str	r3, [sp, #32]
 111:Src/spi_MEncoder.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 218              		.loc 1 111 0
 219 010e 0523     		movs	r3, #5
 220 0110 0B93     		str	r3, [sp, #44]
 112:Src/spi_MEncoder.c **** 
 221              		.loc 1 112 0
 222 0112 07A9     		add	r1, sp, #28
 223 0114 4FF09040 		mov	r0, #1207959552
 224              	.LVL9:
 225 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 226              	.LVL10:
 116:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.Request = DMA_REQUEST_SPI1_RX;
 227              		.loc 1 116 0
 228 011c 1C48     		ldr	r0, .L11+16
 229 011e 1D4B     		ldr	r3, .L11+20
 230 0120 0360     		str	r3, [r0]
 117:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 231              		.loc 1 117 0
 232 0122 0A23     		movs	r3, #10
 233 0124 4360     		str	r3, [r0, #4]
 118:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 234              		.loc 1 118 0
 235 0126 0023     		movs	r3, #0
 236 0128 8360     		str	r3, [r0, #8]
 119:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.MemInc = DMA_MINC_ENABLE;
 237              		.loc 1 119 0
 238 012a C360     		str	r3, [r0, #12]
 120:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 239              		.loc 1 120 0
 240 012c 8022     		movs	r2, #128
 241 012e 0261     		str	r2, [r0, #16]
 121:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 242              		.loc 1 121 0
 243 0130 4361     		str	r3, [r0, #20]
 122:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.Mode = DMA_CIRCULAR;
 244              		.loc 1 122 0
 245 0132 8361     		str	r3, [r0, #24]
 123:Src/spi_MEncoder.c ****     hdma_spi1_rx.Init.Priority = DMA_PRIORITY_LOW;
 246              		.loc 1 123 0
 247 0134 2022     		movs	r2, #32
 248 0136 C261     		str	r2, [r0, #28]
 124:Src/spi_MEncoder.c ****     if (HAL_DMA_Init(&hdma_spi1_rx) != HAL_OK)
 249              		.loc 1 124 0
 250 0138 0362     		str	r3, [r0, #32]
 125:Src/spi_MEncoder.c ****     {
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 9


 251              		.loc 1 125 0
 252 013a FFF7FEFF 		bl	HAL_DMA_Init
 253              	.LVL11:
 254 013e C0B9     		cbnz	r0, .L9
 255              	.L4:
 130:Src/spi_MEncoder.c **** 
 256              		.loc 1 130 0
 257 0140 134B     		ldr	r3, .L11+16
 258 0142 A365     		str	r3, [r4, #88]
 259 0144 9C62     		str	r4, [r3, #40]
 133:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.Request = DMA_REQUEST_SPI1_TX;
 260              		.loc 1 133 0
 261 0146 1448     		ldr	r0, .L11+24
 262 0148 144B     		ldr	r3, .L11+28
 263 014a 0360     		str	r3, [r0]
 134:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 264              		.loc 1 134 0
 265 014c 0B23     		movs	r3, #11
 266 014e 4360     		str	r3, [r0, #4]
 135:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 267              		.loc 1 135 0
 268 0150 1023     		movs	r3, #16
 269 0152 8360     		str	r3, [r0, #8]
 136:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 270              		.loc 1 136 0
 271 0154 0023     		movs	r3, #0
 272 0156 C360     		str	r3, [r0, #12]
 137:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 273              		.loc 1 137 0
 274 0158 8022     		movs	r2, #128
 275 015a 0261     		str	r2, [r0, #16]
 138:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 276              		.loc 1 138 0
 277 015c 4361     		str	r3, [r0, #20]
 139:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.Mode = DMA_NORMAL;
 278              		.loc 1 139 0
 279 015e 8361     		str	r3, [r0, #24]
 140:Src/spi_MEncoder.c ****     hdma_spi1_tx.Init.Priority = DMA_PRIORITY_LOW;
 280              		.loc 1 140 0
 281 0160 C361     		str	r3, [r0, #28]
 141:Src/spi_MEncoder.c ****     if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 282              		.loc 1 141 0
 283 0162 0362     		str	r3, [r0, #32]
 142:Src/spi_MEncoder.c ****     {
 284              		.loc 1 142 0
 285 0164 FFF7FEFF 		bl	HAL_DMA_Init
 286              	.LVL12:
 287 0168 30B9     		cbnz	r0, .L10
 288              	.L5:
 147:Src/spi_MEncoder.c **** 
 289              		.loc 1 147 0
 290 016a 0B4B     		ldr	r3, .L11+24
 291 016c 6365     		str	r3, [r4, #84]
 292 016e 9C62     		str	r4, [r3, #40]
 293              		.loc 1 163 0
 294 0170 57E7     		b	.L1
 295              	.L9:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 10


 296              	.LBB8:
 127:Src/spi_MEncoder.c ****     }
 297              		.loc 1 127 0
 298 0172 FFF7FEFF 		bl	Error_Handler
 299              	.LVL13:
 300 0176 E3E7     		b	.L4
 301              	.L10:
 302              	.LBE8:
 303              	.LBB9:
 144:Src/spi_MEncoder.c ****     }
 304              		.loc 1 144 0
 305 0178 FFF7FEFF 		bl	Error_Handler
 306              	.LVL14:
 307 017c F5E7     		b	.L5
 308              	.L12:
 309 017e 00BF     		.align	2
 310              	.L11:
 311 0180 003C0040 		.word	1073757184
 312 0184 00300140 		.word	1073819648
 313 0188 00100240 		.word	1073876992
 314 018c 00040048 		.word	1207960576
 315 0190 00000000 		.word	hdma_spi1_rx
 316 0194 44000240 		.word	1073872964
 317 0198 00000000 		.word	hdma_spi1_tx
 318 019c 30000240 		.word	1073872944
 319 01a0 00080048 		.word	1207961600
 320              	.LBE9:
 321              		.cfi_endproc
 322              	.LFE333:
 324              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 325              		.align	1
 326              		.global	HAL_SPI_MspDeInit
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv4-sp-d16
 332              	HAL_SPI_MspDeInit:
 333              	.LFB334:
 164:Src/spi_MEncoder.c **** 
 165:Src/spi_MEncoder.c **** /**
 166:Src/spi_MEncoder.c **** * @brief SPI MSP De-Initialization
 167:Src/spi_MEncoder.c **** * This function freeze the hardware resources used in this example
 168:Src/spi_MEncoder.c **** * @param hspi: SPI handle pointer
 169:Src/spi_MEncoder.c **** * @retval None
 170:Src/spi_MEncoder.c **** */
 171:Src/spi_MEncoder.c **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
 172:Src/spi_MEncoder.c **** {
 334              		.loc 1 172 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              	.LVL15:
 339 0000 08B5     		push	{r3, lr}
 340              	.LCFI4:
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 3, -8
 343              		.cfi_offset 14, -4
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 11


 173:Src/spi_MEncoder.c ****   if(hspi->Instance==SPI3)
 344              		.loc 1 173 0
 345 0002 0268     		ldr	r2, [r0]
 346 0004 0C4B     		ldr	r3, .L17
 347 0006 9A42     		cmp	r2, r3
 348 0008 00D0     		beq	.L16
 349              	.LVL16:
 350              	.L13:
 174:Src/spi_MEncoder.c ****   {
 175:Src/spi_MEncoder.c ****   /* USER CODE BEGIN SPI3_MspDeInit 0 */
 176:Src/spi_MEncoder.c **** 
 177:Src/spi_MEncoder.c ****   /* USER CODE END SPI3_MspDeInit 0 */
 178:Src/spi_MEncoder.c ****     /* Peripheral clock disable */
 179:Src/spi_MEncoder.c ****     __HAL_RCC_SPI3_CLK_DISABLE();
 180:Src/spi_MEncoder.c **** 
 181:Src/spi_MEncoder.c ****     /**SPI3 GPIO Configuration
 182:Src/spi_MEncoder.c ****     PA15     ------> SPI3_NSS
 183:Src/spi_MEncoder.c ****     PC10     ------> SPI3_SCK
 184:Src/spi_MEncoder.c ****     PC11     ------> SPI3_MISO
 185:Src/spi_MEncoder.c ****     PB5     ------> SPI3_MOSI
 186:Src/spi_MEncoder.c ****     */
 187:Src/spi_MEncoder.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_15);
 188:Src/spi_MEncoder.c **** 
 189:Src/spi_MEncoder.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_10|GPIO_PIN_11);
 190:Src/spi_MEncoder.c **** 
 191:Src/spi_MEncoder.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_5);
 192:Src/spi_MEncoder.c **** 
 193:Src/spi_MEncoder.c ****   /* USER CODE BEGIN SPI3_MspDeInit 1 */
 194:Src/spi_MEncoder.c **** 
 195:Src/spi_MEncoder.c ****   /* USER CODE END SPI3_MspDeInit 1 */
 196:Src/spi_MEncoder.c ****   }
 197:Src/spi_MEncoder.c **** 
 198:Src/spi_MEncoder.c **** }
 351              		.loc 1 198 0
 352 000a 08BD     		pop	{r3, pc}
 353              	.LVL17:
 354              	.L16:
 179:Src/spi_MEncoder.c **** 
 355              		.loc 1 179 0
 356 000c 0B4A     		ldr	r2, .L17+4
 357 000e 936D     		ldr	r3, [r2, #88]
 358 0010 23F40043 		bic	r3, r3, #32768
 359 0014 9365     		str	r3, [r2, #88]
 187:Src/spi_MEncoder.c **** 
 360              		.loc 1 187 0
 361 0016 4FF40041 		mov	r1, #32768
 362 001a 4FF09040 		mov	r0, #1207959552
 363              	.LVL18:
 364 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 365              	.LVL19:
 189:Src/spi_MEncoder.c **** 
 366              		.loc 1 189 0
 367 0022 4FF44061 		mov	r1, #3072
 368 0026 0648     		ldr	r0, .L17+8
 369 0028 FFF7FEFF 		bl	HAL_GPIO_DeInit
 370              	.LVL20:
 191:Src/spi_MEncoder.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 12


 371              		.loc 1 191 0
 372 002c 2021     		movs	r1, #32
 373 002e 0548     		ldr	r0, .L17+12
 374 0030 FFF7FEFF 		bl	HAL_GPIO_DeInit
 375              	.LVL21:
 376              		.loc 1 198 0
 377 0034 E9E7     		b	.L13
 378              	.L18:
 379 0036 00BF     		.align	2
 380              	.L17:
 381 0038 003C0040 		.word	1073757184
 382 003c 00100240 		.word	1073876992
 383 0040 00080048 		.word	1207961600
 384 0044 00040048 		.word	1207960576
 385              		.cfi_endproc
 386              	.LFE334:
 388              		.section	.text.MX_SPI3_Init,"ax",%progbits
 389              		.align	1
 390              		.global	MX_SPI3_Init
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	MX_SPI3_Init:
 397              	.LFB335:
 199:Src/spi_MEncoder.c **** 
 200:Src/spi_MEncoder.c **** 
 201:Src/spi_MEncoder.c **** 
 202:Src/spi_MEncoder.c **** void MX_SPI3_Init(void)
 203:Src/spi_MEncoder.c **** {
 398              		.loc 1 203 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402 0000 08B5     		push	{r3, lr}
 403              	.LCFI5:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 3, -8
 406              		.cfi_offset 14, -4
 204:Src/spi_MEncoder.c **** 
 205:Src/spi_MEncoder.c ****   /* USER CODE BEGIN SPI3_Init 0 */
 206:Src/spi_MEncoder.c **** 
 207:Src/spi_MEncoder.c ****   /* USER CODE END SPI3_Init 0 */
 208:Src/spi_MEncoder.c **** 
 209:Src/spi_MEncoder.c ****   /* USER CODE BEGIN SPI3_Init 1 */
 210:Src/spi_MEncoder.c **** 
 211:Src/spi_MEncoder.c ****   /* USER CODE END SPI3_Init 1 */
 212:Src/spi_MEncoder.c ****   /* SPI3 parameter configuration*/
 213:Src/spi_MEncoder.c ****   hspi3.Instance = SPI3;
 407              		.loc 1 213 0
 408 0002 1448     		ldr	r0, .L23
 409 0004 144B     		ldr	r3, .L23+4
 410 0006 0360     		str	r3, [r0]
 214:Src/spi_MEncoder.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 411              		.loc 1 214 0
 412 0008 4FF48273 		mov	r3, #260
 413 000c 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 13


 215:Src/spi_MEncoder.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 414              		.loc 1 215 0
 415 000e 0023     		movs	r3, #0
 416 0010 8360     		str	r3, [r0, #8]
 216:Src/spi_MEncoder.c ****   hspi3.Init.DataSize = SPI_DATASIZE_16BIT;
 417              		.loc 1 216 0
 418 0012 4FF47062 		mov	r2, #3840
 419 0016 C260     		str	r2, [r0, #12]
 217:Src/spi_MEncoder.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_HIGH;
 420              		.loc 1 217 0
 421 0018 0222     		movs	r2, #2
 422 001a 0261     		str	r2, [r0, #16]
 218:Src/spi_MEncoder.c ****   hspi3.Init.CLKPhase = SPI_PHASE_2EDGE;
 423              		.loc 1 218 0
 424 001c 0122     		movs	r2, #1
 425 001e 4261     		str	r2, [r0, #20]
 219:Src/spi_MEncoder.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 426              		.loc 1 219 0
 427 0020 4FF40072 		mov	r2, #512
 428 0024 8261     		str	r2, [r0, #24]
 220:Src/spi_MEncoder.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_64;
 429              		.loc 1 220 0
 430 0026 2822     		movs	r2, #40
 431 0028 C261     		str	r2, [r0, #28]
 221:Src/spi_MEncoder.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 432              		.loc 1 221 0
 433 002a 0362     		str	r3, [r0, #32]
 222:Src/spi_MEncoder.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 434              		.loc 1 222 0
 435 002c 4362     		str	r3, [r0, #36]
 223:Src/spi_MEncoder.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 436              		.loc 1 223 0
 437 002e 8362     		str	r3, [r0, #40]
 224:Src/spi_MEncoder.c ****   hspi3.Init.CRCPolynomial = 7;
 438              		.loc 1 224 0
 439 0030 0722     		movs	r2, #7
 440 0032 C262     		str	r2, [r0, #44]
 225:Src/spi_MEncoder.c ****   hspi3.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 441              		.loc 1 225 0
 442 0034 0363     		str	r3, [r0, #48]
 226:Src/spi_MEncoder.c ****   hspi3.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 443              		.loc 1 226 0
 444 0036 4363     		str	r3, [r0, #52]
 227:Src/spi_MEncoder.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 445              		.loc 1 227 0
 446 0038 FFF7FEFF 		bl	HAL_SPI_Init
 447              	.LVL22:
 448 003c 30B9     		cbnz	r0, .L22
 449              	.L20:
 228:Src/spi_MEncoder.c ****   {
 229:Src/spi_MEncoder.c ****     Error_Handler();
 230:Src/spi_MEncoder.c ****   }
 231:Src/spi_MEncoder.c ****   /* USER CODE BEGIN SPI3_Init 2 */
 232:Src/spi_MEncoder.c **** 
 233:Src/spi_MEncoder.c ****   /* USER CODE END SPI3_Init 2 */
 234:Src/spi_MEncoder.c **** 
 235:Src/spi_MEncoder.c **** 	__HAL_SPI_ENABLE(&hspi3);
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 14


 450              		.loc 1 235 0
 451 003e 054B     		ldr	r3, .L23
 452 0040 1A68     		ldr	r2, [r3]
 453 0042 1368     		ldr	r3, [r2]
 454 0044 43F04003 		orr	r3, r3, #64
 455 0048 1360     		str	r3, [r2]
 236:Src/spi_MEncoder.c **** }
 456              		.loc 1 236 0
 457 004a 08BD     		pop	{r3, pc}
 458              	.L22:
 459              	.LBB10:
 229:Src/spi_MEncoder.c ****   }
 460              		.loc 1 229 0
 461 004c FFF7FEFF 		bl	Error_Handler
 462              	.LVL23:
 463 0050 F5E7     		b	.L20
 464              	.L24:
 465 0052 00BF     		.align	2
 466              	.L23:
 467 0054 00000000 		.word	hspi3
 468 0058 003C0040 		.word	1073757184
 469              	.LBE10:
 470              		.cfi_endproc
 471              	.LFE335:
 473              		.section	.text.MX_TIM2_Init,"ax",%progbits
 474              		.align	1
 475              		.global	MX_TIM2_Init
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu fpv4-sp-d16
 481              	MX_TIM2_Init:
 482              	.LFB336:
 237:Src/spi_MEncoder.c **** 
 238:Src/spi_MEncoder.c **** 
 239:Src/spi_MEncoder.c **** 
 240:Src/spi_MEncoder.c **** 
 241:Src/spi_MEncoder.c **** 
 242:Src/spi_MEncoder.c **** 
 243:Src/spi_MEncoder.c **** /**
 244:Src/spi_MEncoder.c ****   * @brief TIM2 Initialization Function
 245:Src/spi_MEncoder.c ****   * @param None
 246:Src/spi_MEncoder.c ****   * @retval None
 247:Src/spi_MEncoder.c ****   */
 248:Src/spi_MEncoder.c **** void MX_TIM2_Init(void)
 249:Src/spi_MEncoder.c **** {
 483              		.loc 1 249 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 48
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487 0000 30B5     		push	{r4, r5, lr}
 488              	.LCFI6:
 489              		.cfi_def_cfa_offset 12
 490              		.cfi_offset 4, -12
 491              		.cfi_offset 5, -8
 492              		.cfi_offset 14, -4
 493 0002 8DB0     		sub	sp, sp, #52
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 15


 494              	.LCFI7:
 495              		.cfi_def_cfa_offset 64
 250:Src/spi_MEncoder.c **** 
 251:Src/spi_MEncoder.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 252:Src/spi_MEncoder.c **** 
 253:Src/spi_MEncoder.c ****   /* USER CODE END TIM2_Init 0 */
 254:Src/spi_MEncoder.c **** 
 255:Src/spi_MEncoder.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 496              		.loc 1 255 0
 497 0004 0023     		movs	r3, #0
 498 0006 0893     		str	r3, [sp, #32]
 499 0008 0993     		str	r3, [sp, #36]
 500 000a 0A93     		str	r3, [sp, #40]
 501 000c 0B93     		str	r3, [sp, #44]
 256:Src/spi_MEncoder.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 502              		.loc 1 256 0
 503 000e 0593     		str	r3, [sp, #20]
 504 0010 0693     		str	r3, [sp, #24]
 505 0012 0793     		str	r3, [sp, #28]
 257:Src/spi_MEncoder.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 506              		.loc 1 257 0
 507 0014 0193     		str	r3, [sp, #4]
 508 0016 0293     		str	r3, [sp, #8]
 509 0018 0393     		str	r3, [sp, #12]
 510 001a 0493     		str	r3, [sp, #16]
 258:Src/spi_MEncoder.c **** 
 259:Src/spi_MEncoder.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 260:Src/spi_MEncoder.c **** 
 261:Src/spi_MEncoder.c ****   /* USER CODE END TIM2_Init 1 */
 262:Src/spi_MEncoder.c ****   htim2.Instance = TIM2;
 511              		.loc 1 262 0
 512 001c 3748     		ldr	r0, .L43
 513 001e 4FF08042 		mov	r2, #1073741824
 514 0022 0260     		str	r2, [r0]
 263:Src/spi_MEncoder.c ****   htim2.Init.Prescaler = 167;
 515              		.loc 1 263 0
 516 0024 A722     		movs	r2, #167
 517 0026 4260     		str	r2, [r0, #4]
 264:Src/spi_MEncoder.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 518              		.loc 1 264 0
 519 0028 8360     		str	r3, [r0, #8]
 265:Src/spi_MEncoder.c ****   htim2.Init.Period =0xffff;
 520              		.loc 1 265 0
 521 002a 4FF6FF72 		movw	r2, #65535
 522 002e C260     		str	r2, [r0, #12]
 266:Src/spi_MEncoder.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 523              		.loc 1 266 0
 524 0030 0361     		str	r3, [r0, #16]
 267:Src/spi_MEncoder.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 525              		.loc 1 267 0
 526 0032 8361     		str	r3, [r0, #24]
 268:Src/spi_MEncoder.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 527              		.loc 1 268 0
 528 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 529              	.LVL24:
 530 0038 0028     		cmp	r0, #0
 531 003a 47D1     		bne	.L35
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 16


 532              	.L26:
 269:Src/spi_MEncoder.c ****   {
 270:Src/spi_MEncoder.c ****     Error_Handler();
 271:Src/spi_MEncoder.c ****   }
 272:Src/spi_MEncoder.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 533              		.loc 1 272 0
 534 003c 0CA9     		add	r1, sp, #48
 535 003e 4FF48053 		mov	r3, #4096
 536 0042 41F8103D 		str	r3, [r1, #-16]!
 273:Src/spi_MEncoder.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 537              		.loc 1 273 0
 538 0046 2D48     		ldr	r0, .L43
 539 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 540              	.LVL25:
 541 004c 0028     		cmp	r0, #0
 542 004e 40D1     		bne	.L36
 543              	.L27:
 274:Src/spi_MEncoder.c ****   {
 275:Src/spi_MEncoder.c ****     Error_Handler();
 276:Src/spi_MEncoder.c ****   }
 277:Src/spi_MEncoder.c ****   if (HAL_TIM_IC_Init(&htim2) != HAL_OK)
 544              		.loc 1 277 0
 545 0050 2A48     		ldr	r0, .L43
 546 0052 FFF7FEFF 		bl	HAL_TIM_IC_Init
 547              	.LVL26:
 548 0056 0028     		cmp	r0, #0
 549 0058 3ED1     		bne	.L37
 550              	.L28:
 278:Src/spi_MEncoder.c ****   {
 279:Src/spi_MEncoder.c ****     Error_Handler();
 280:Src/spi_MEncoder.c ****   }
 281:Src/spi_MEncoder.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 551              		.loc 1 281 0
 552 005a 0023     		movs	r3, #0
 553 005c 0593     		str	r3, [sp, #20]
 282:Src/spi_MEncoder.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 554              		.loc 1 282 0
 555 005e 0793     		str	r3, [sp, #28]
 283:Src/spi_MEncoder.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 556              		.loc 1 283 0
 557 0060 05A9     		add	r1, sp, #20
 558 0062 2648     		ldr	r0, .L43
 559 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 560              	.LVL27:
 561 0068 0028     		cmp	r0, #0
 562 006a 38D1     		bne	.L38
 563              	.L29:
 284:Src/spi_MEncoder.c ****   {
 285:Src/spi_MEncoder.c ****     Error_Handler();
 286:Src/spi_MEncoder.c ****   }
 287:Src/spi_MEncoder.c ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 564              		.loc 1 287 0
 565 006c 0A21     		movs	r1, #10
 566 006e 0191     		str	r1, [sp, #4]
 288:Src/spi_MEncoder.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_TRC;
 567              		.loc 1 288 0
 568 0070 0322     		movs	r2, #3
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 17


 569 0072 0292     		str	r2, [sp, #8]
 289:Src/spi_MEncoder.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 570              		.loc 1 289 0
 571 0074 0025     		movs	r5, #0
 572 0076 0395     		str	r5, [sp, #12]
 290:Src/spi_MEncoder.c ****   sConfigIC.ICFilter = 15;
 573              		.loc 1 290 0
 574 0078 0F23     		movs	r3, #15
 575 007a 0493     		str	r3, [sp, #16]
 291:Src/spi_MEncoder.c **** 	
 292:Src/spi_MEncoder.c **** 	TIM_TI1_SetConfig(htim2.Instance, sConfigIC.ICPolarity, TIM_ICSELECTION_TRC, sConfigIC.ICFilter);
 576              		.loc 1 292 0
 577 007c 1F4C     		ldr	r4, .L43
 578 007e 2068     		ldr	r0, [r4]
 579 0080 FFF7FEFF 		bl	TIM_TI1_SetConfig
 580              	.LVL28:
 293:Src/spi_MEncoder.c ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 581              		.loc 1 293 0
 582 0084 2A46     		mov	r2, r5
 583 0086 01A9     		add	r1, sp, #4
 584 0088 2046     		mov	r0, r4
 585 008a FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 586              	.LVL29:
 587 008e 48BB     		cbnz	r0, .L39
 588              	.L30:
 294:Src/spi_MEncoder.c ****   {
 295:Src/spi_MEncoder.c ****     Error_Handler();
 296:Src/spi_MEncoder.c ****   }
 297:Src/spi_MEncoder.c ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 589              		.loc 1 297 0
 590 0090 0422     		movs	r2, #4
 591 0092 0DEB0201 		add	r1, sp, r2
 592 0096 1948     		ldr	r0, .L43
 593 0098 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 594              	.LVL30:
 595 009c 28BB     		cbnz	r0, .L40
 596              	.L31:
 298:Src/spi_MEncoder.c ****   {
 299:Src/spi_MEncoder.c ****     Error_Handler();
 300:Src/spi_MEncoder.c ****   }
 301:Src/spi_MEncoder.c ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 597              		.loc 1 301 0
 598 009e 0822     		movs	r2, #8
 599 00a0 01A9     		add	r1, sp, #4
 600 00a2 1648     		ldr	r0, .L43
 601 00a4 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 602              	.LVL31:
 603 00a8 10BB     		cbnz	r0, .L41
 604              	.L32:
 302:Src/spi_MEncoder.c ****   {
 303:Src/spi_MEncoder.c ****     Error_Handler();
 304:Src/spi_MEncoder.c ****   }
 305:Src/spi_MEncoder.c **** 	
 306:Src/spi_MEncoder.c ****   if (HAL_TIM_ConfigTI1Input(&htim2, TIM_TI1SELECTION_XORCOMBINATION) != HAL_OK)
 605              		.loc 1 306 0
 606 00aa 8021     		movs	r1, #128
 607 00ac 1348     		ldr	r0, .L43
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 18


 608 00ae FFF7FEFF 		bl	HAL_TIM_ConfigTI1Input
 609              	.LVL32:
 610 00b2 00BB     		cbnz	r0, .L42
 611              	.L33:
 307:Src/spi_MEncoder.c ****   {
 308:Src/spi_MEncoder.c ****     Error_Handler();
 309:Src/spi_MEncoder.c ****   }
 310:Src/spi_MEncoder.c **** 	
 311:Src/spi_MEncoder.c **** 	htim2.Instance->SMCR |= TIM_TS_TI1F_ED; // select "ti1f_ed" input trigger 
 612              		.loc 1 311 0
 613 00b4 114B     		ldr	r3, .L43
 614 00b6 1868     		ldr	r0, [r3]
 615 00b8 8368     		ldr	r3, [r0, #8]
 616 00ba 43F04003 		orr	r3, r3, #64
 617 00be 8360     		str	r3, [r0, #8]
 312:Src/spi_MEncoder.c **** 	TIM_CCxChannelCmd(htim2.Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 618              		.loc 1 312 0
 619 00c0 0122     		movs	r2, #1
 620 00c2 0021     		movs	r1, #0
 621 00c4 FFF7FEFF 		bl	TIM_CCxChannelCmd
 622              	.LVL33:
 313:Src/spi_MEncoder.c ****   
 314:Src/spi_MEncoder.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 315:Src/spi_MEncoder.c **** 
 316:Src/spi_MEncoder.c ****   /* USER CODE END TIM2_Init 2 */
 317:Src/spi_MEncoder.c **** 
 318:Src/spi_MEncoder.c **** }
 623              		.loc 1 318 0
 624 00c8 0DB0     		add	sp, sp, #52
 625              	.LCFI8:
 626              		.cfi_remember_state
 627              		.cfi_def_cfa_offset 12
 628              		@ sp needed
 629 00ca 30BD     		pop	{r4, r5, pc}
 630              	.L35:
 631              	.LCFI9:
 632              		.cfi_restore_state
 633              	.LBB11:
 270:Src/spi_MEncoder.c ****   }
 634              		.loc 1 270 0
 635 00cc FFF7FEFF 		bl	Error_Handler
 636              	.LVL34:
 637 00d0 B4E7     		b	.L26
 638              	.L36:
 639              	.LBE11:
 640              	.LBB12:
 275:Src/spi_MEncoder.c ****   }
 641              		.loc 1 275 0
 642 00d2 FFF7FEFF 		bl	Error_Handler
 643              	.LVL35:
 644 00d6 BBE7     		b	.L27
 645              	.L37:
 646              	.LBE12:
 647              	.LBB13:
 279:Src/spi_MEncoder.c ****   }
 648              		.loc 1 279 0
 649 00d8 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 19


 650              	.LVL36:
 651 00dc BDE7     		b	.L28
 652              	.L38:
 653              	.LBE13:
 654              	.LBB14:
 285:Src/spi_MEncoder.c ****   }
 655              		.loc 1 285 0
 656 00de FFF7FEFF 		bl	Error_Handler
 657              	.LVL37:
 658 00e2 C3E7     		b	.L29
 659              	.L39:
 660              	.LBE14:
 661              	.LBB15:
 295:Src/spi_MEncoder.c ****   }
 662              		.loc 1 295 0
 663 00e4 FFF7FEFF 		bl	Error_Handler
 664              	.LVL38:
 665 00e8 D2E7     		b	.L30
 666              	.L40:
 667              	.LBE15:
 668              	.LBB16:
 299:Src/spi_MEncoder.c ****   }
 669              		.loc 1 299 0
 670 00ea FFF7FEFF 		bl	Error_Handler
 671              	.LVL39:
 672 00ee D6E7     		b	.L31
 673              	.L41:
 674              	.LBE16:
 675              	.LBB17:
 303:Src/spi_MEncoder.c ****   }
 676              		.loc 1 303 0
 677 00f0 FFF7FEFF 		bl	Error_Handler
 678              	.LVL40:
 679 00f4 D9E7     		b	.L32
 680              	.L42:
 681              	.LBE17:
 682              	.LBB18:
 308:Src/spi_MEncoder.c ****   }
 683              		.loc 1 308 0
 684 00f6 FFF7FEFF 		bl	Error_Handler
 685              	.LVL41:
 686 00fa DBE7     		b	.L33
 687              	.L44:
 688              		.align	2
 689              	.L43:
 690 00fc 00000000 		.word	htim2
 691              	.LBE18:
 692              		.cfi_endproc
 693              	.LFE336:
 695              		.section	.text.hall_Configuration,"ax",%progbits
 696              		.align	1
 697              		.global	hall_Configuration
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu fpv4-sp-d16
 703              	hall_Configuration:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 20


 704              	.LFB337:
 319:Src/spi_MEncoder.c **** 
 320:Src/spi_MEncoder.c **** 
 321:Src/spi_MEncoder.c **** void hall_Configuration(void)
 322:Src/spi_MEncoder.c **** {
 705              		.loc 1 322 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709 0000 08B5     		push	{r3, lr}
 710              	.LCFI10:
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 3, -8
 713              		.cfi_offset 14, -4
 323:Src/spi_MEncoder.c **** 	
 324:Src/spi_MEncoder.c **** 	MX_TIM2_Init();
 714              		.loc 1 324 0
 715 0002 FFF7FEFF 		bl	MX_TIM2_Init
 716              	.LVL42:
 325:Src/spi_MEncoder.c **** 	TIM2->CR1 |= TIM_AUTORELOAD_PRELOAD_ENABLE;
 717              		.loc 1 325 0
 718 0006 4FF08042 		mov	r2, #1073741824
 719 000a 1368     		ldr	r3, [r2]
 720 000c 43F08003 		orr	r3, r3, #128
 721 0010 1360     		str	r3, [r2]
 326:Src/spi_MEncoder.c **** 
 327:Src/spi_MEncoder.c **** 	 __HAL_TIM_ENABLE(&htim2);
 722              		.loc 1 327 0
 723 0012 034B     		ldr	r3, .L47
 724 0014 1A68     		ldr	r2, [r3]
 725 0016 1368     		ldr	r3, [r2]
 726 0018 43F00103 		orr	r3, r3, #1
 727 001c 1360     		str	r3, [r2]
 328:Src/spi_MEncoder.c **** }
 728              		.loc 1 328 0
 729 001e 08BD     		pop	{r3, pc}
 730              	.L48:
 731              		.align	2
 732              	.L47:
 733 0020 00000000 		.word	htim2
 734              		.cfi_endproc
 735              	.LFE337:
 737              		.section	.text.MTPro,"ax",%progbits
 738              		.align	1
 739              		.global	MTPro
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv4-sp-d16
 745              	MTPro:
 746              	.LFB338:
 329:Src/spi_MEncoder.c **** 
 330:Src/spi_MEncoder.c **** 
 331:Src/spi_MEncoder.c **** 
 332:Src/spi_MEncoder.c **** volatile s32 Encoder_Current = 0;							// ��ǰ����������ֵ
 333:Src/spi_MEncoder.c **** volatile s32 Encoder_Last = 0;   							// ��ǰ����������ֵ
 334:Src/spi_MEncoder.c **** volatile s32 Encoder_Inc = 0;   							// ����������ֵ�仯��
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 21


 335:Src/spi_MEncoder.c **** volatile s32 s_SpeedTimeAdd1 = 0;   					// ����������ֵ�仯��
 336:Src/spi_MEncoder.c **** volatile s32 s_ForecastTimeAdd1 = 0;   				// ����������ֵ�仯��
 337:Src/spi_MEncoder.c **** volatile s32 speed_def[2] = {64,0};
 338:Src/spi_MEncoder.c **** volatile s32 speed_TCal = 0;									//T����õ��ٶ�
 339:Src/spi_MEncoder.c **** volatile s32 speed_MCal = 0;									//M������ٶ�
 340:Src/spi_MEncoder.c **** volatile s32 s_IntNum1 = 0; 									// 	��ֵ(����)����
 341:Src/spi_MEncoder.c **** volatile s32 s_ForecastCnt1 = 1;							//	Ԥ�����
 342:Src/spi_MEncoder.c **** volatile s32 g_CurrentSpeed = 0;
 343:Src/spi_MEncoder.c **** 
 344:Src/spi_MEncoder.c **** volatile s32 start_speed_sample = 0;
 345:Src/spi_MEncoder.c **** 
 346:Src/spi_MEncoder.c **** extern  volatile int speed1,speed2,speed3;
 347:Src/spi_MEncoder.c **** extern  volatile  int pid_hall_ture_value1;
 348:Src/spi_MEncoder.c **** extern  volatile  int pid_last_hall_ture_value1;
 349:Src/spi_MEncoder.c **** 
 350:Src/spi_MEncoder.c **** extern volatile int hall_speed_sample_timeout_cnt; //���㵽30ms
 351:Src/spi_MEncoder.c **** extern volatile int  hall_speed_sample_cnt;
 352:Src/spi_MEncoder.c **** extern volatile int hall_speed_sample_timeout;
 353:Src/spi_MEncoder.c **** extern volatile int hall_cnt;
 354:Src/spi_MEncoder.c **** 
 355:Src/spi_MEncoder.c **** extern volatile int hall_now_time;
 356:Src/spi_MEncoder.c **** extern volatile int hall_previous_1_time;
 357:Src/spi_MEncoder.c **** extern volatile int hall_previous_2_time;
 358:Src/spi_MEncoder.c **** extern volatile int hall_previous_3_time ;
 359:Src/spi_MEncoder.c **** extern volatile int64_t Vel_PPS_raw1 ;
 360:Src/spi_MEncoder.c **** void MTPro(void) //10KHz ִ��
 361:Src/spi_MEncoder.c **** {
 747              		.loc 1 361 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              		@ link register save eliminated.
 752              	.LVL43:
 362:Src/spi_MEncoder.c **** 	
 363:Src/spi_MEncoder.c **** 	int64_t s_SpeedTimeAdd11=0;
 364:Src/spi_MEncoder.c **** 
 365:Src/spi_MEncoder.c **** 	
 366:Src/spi_MEncoder.c **** 	int speed;
 367:Src/spi_MEncoder.c **** 
 368:Src/spi_MEncoder.c **** 		#if 0 
 369:Src/spi_MEncoder.c **** 		
 370:Src/spi_MEncoder.c **** 		//	g_CmdMap[CMD_SPDREG_REF_PU] = (s16)((((int64_t)Vel_PPS_raw1)<<22)/((int64_t)*g_pVel_ref_base_P
 371:Src/spi_MEncoder.c **** 		speed = (s16)((((int64_t)Vel_PPS_raw1)<<22)/((int64_t)*g_pVel_ref_base_PPS));
 372:Src/spi_MEncoder.c **** 
 373:Src/spi_MEncoder.c **** 
 374:Src/spi_MEncoder.c **** 		g_CmdMap[CMD_SPD_ACT_PU] =speed; 
 375:Src/spi_MEncoder.c **** 		
 376:Src/spi_MEncoder.c **** 		#endif
 377:Src/spi_MEncoder.c **** 
 378:Src/spi_MEncoder.c **** 			
 379:Src/spi_MEncoder.c **** }
 753              		.loc 1 379 0
 754 0000 7047     		bx	lr
 755              		.cfi_endproc
 756              	.LFE338:
 758              		.section	.text.Pll_phase,"ax",%progbits
 759              		.align	1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 22


 760              		.global	Pll_phase
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu fpv4-sp-d16
 766              	Pll_phase:
 767              	.LFB339:
 380:Src/spi_MEncoder.c **** 
 381:Src/spi_MEncoder.c **** float pll_estimated_phase = 0;
 382:Src/spi_MEncoder.c **** float  pll_estimated_spd = 0;
 383:Src/spi_MEncoder.c **** 
 384:Src/spi_MEncoder.c **** float  pll_pid_integ = 0;
 385:Src/spi_MEncoder.c **** float pll_pid_out = 0;
 386:Src/spi_MEncoder.c **** 
 387:Src/spi_MEncoder.c **** volatile int estimated_SPD_filterd = 0;
 388:Src/spi_MEncoder.c **** int g_measured_phase = 0;
 389:Src/spi_MEncoder.c **** #define  FILTER_SIZE   24
 390:Src/spi_MEncoder.c **** int temp_spd_index  = 0;
 391:Src/spi_MEncoder.c **** int temp_spd[FILTER_SIZE] ={0};
 392:Src/spi_MEncoder.c **** int temp_spd_filed[FILTER_SIZE] ={0};
 393:Src/spi_MEncoder.c **** 
 394:Src/spi_MEncoder.c **** int pll_pid_integ_int = 0;
 395:Src/spi_MEncoder.c **** int estimated_phase_integ_int = 0;
 396:Src/spi_MEncoder.c **** float estimated_phase_integ_int_1 = 0;
 397:Src/spi_MEncoder.c **** 
 398:Src/spi_MEncoder.c **** void Pll_phase(s16 measured_phase, float *estimated_phase, float *estimated_spd )
 399:Src/spi_MEncoder.c **** {
 768              		.loc 1 399 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 773              	.LVL44:
 774 0000 10B4     		push	{r4}
 775              	.LCFI11:
 776              		.cfi_def_cfa_offset 4
 777              		.cfi_offset 4, -4
 778              	.LVL45:
 400:Src/spi_MEncoder.c **** 	float phase_erro;
 401:Src/spi_MEncoder.c **** 	int estimated_spd_1 = 0;
 402:Src/spi_MEncoder.c **** 	
 403:Src/spi_MEncoder.c **** 	
 404:Src/spi_MEncoder.c **** 	static int cnt  =0;
 405:Src/spi_MEncoder.c **** 	cnt++;
 779              		.loc 1 405 0
 780 0002 764C     		ldr	r4, .L70
 781 0004 2368     		ldr	r3, [r4]
 782 0006 0133     		adds	r3, r3, #1
 783 0008 2360     		str	r3, [r4]
 406:Src/spi_MEncoder.c **** 	if(cnt ==4)
 784              		.loc 1 406 0
 785 000a 042B     		cmp	r3, #4
 786 000c 02D0     		beq	.L68
 787              	.LVL46:
 788              	.L50:
 407:Src/spi_MEncoder.c **** 	{
 408:Src/spi_MEncoder.c **** 		cnt = 0;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 23


 409:Src/spi_MEncoder.c **** 		
 410:Src/spi_MEncoder.c **** 	if( measured_phase > 16384 )
 411:Src/spi_MEncoder.c **** 	{
 412:Src/spi_MEncoder.c **** 		measured_phase = measured_phase - 32768;
 413:Src/spi_MEncoder.c **** 	}
 414:Src/spi_MEncoder.c **** 		if( measured_phase < -16384 )
 415:Src/spi_MEncoder.c **** 	{
 416:Src/spi_MEncoder.c **** 		measured_phase = measured_phase + 32768;
 417:Src/spi_MEncoder.c **** 	}
 418:Src/spi_MEncoder.c **** 
 419:Src/spi_MEncoder.c **** 	
 420:Src/spi_MEncoder.c **** 
 421:Src/spi_MEncoder.c **** 	
 422:Src/spi_MEncoder.c **** 	phase_erro = measured_phase - *estimated_phase;
 423:Src/spi_MEncoder.c **** 	
 424:Src/spi_MEncoder.c **** 	if( phase_erro > 16384 )
 425:Src/spi_MEncoder.c **** 	{
 426:Src/spi_MEncoder.c **** 		phase_erro = phase_erro - 32768;
 427:Src/spi_MEncoder.c **** 	}	
 428:Src/spi_MEncoder.c **** 	if( phase_erro < -16384 )
 429:Src/spi_MEncoder.c **** 	{
 430:Src/spi_MEncoder.c **** 		phase_erro = phase_erro + 32768;
 431:Src/spi_MEncoder.c **** 	}	
 432:Src/spi_MEncoder.c **** 	pll_pid_integ_int = pll_pid_integ_int + phase_erro;
 433:Src/spi_MEncoder.c **** 	
 434:Src/spi_MEncoder.c **** 	
 435:Src/spi_MEncoder.c **** //	pll_pid_integ = pll_pid_integ + phase_erro *0.0001;
 436:Src/spi_MEncoder.c **** 	pll_pid_integ = pll_pid_integ_int /10000;
 437:Src/spi_MEncoder.c **** 	
 438:Src/spi_MEncoder.c **** 	*estimated_spd =  ( 2000*phase_erro + 100000*pll_pid_integ);
 439:Src/spi_MEncoder.c **** 	
 440:Src/spi_MEncoder.c **** 	estimated_phase_integ_int = estimated_phase_integ_int + *estimated_spd ;
 441:Src/spi_MEncoder.c **** 	
 442:Src/spi_MEncoder.c **** 		if( estimated_phase_integ_int > 163840000 )
 443:Src/spi_MEncoder.c **** 	{
 444:Src/spi_MEncoder.c **** 		estimated_phase_integ_int =estimated_phase_integ_int - 327680000;
 445:Src/spi_MEncoder.c **** 	}
 446:Src/spi_MEncoder.c **** 		if( estimated_phase_integ_int < -163840000 )
 447:Src/spi_MEncoder.c **** 	{
 448:Src/spi_MEncoder.c **** 		estimated_phase_integ_int = estimated_phase_integ_int + 327680000;
 449:Src/spi_MEncoder.c **** 	}
 450:Src/spi_MEncoder.c **** 
 451:Src/spi_MEncoder.c **** 	
 452:Src/spi_MEncoder.c **** 	*estimated_phase = estimated_phase_integ_int /10000;
 453:Src/spi_MEncoder.c **** //	*estimated_phase  = *estimated_phase  + *estimated_spd * 0.0001;
 454:Src/spi_MEncoder.c **** //	*estimated_phase = estimated_phase_integ_int *0.0001;
 455:Src/spi_MEncoder.c **** 
 456:Src/spi_MEncoder.c **** //	if( estimated_phase_integ_int_1 > 16384 )
 457:Src/spi_MEncoder.c **** //	{
 458:Src/spi_MEncoder.c **** //		estimated_phase_integ_int_1 =estimated_phase_integ_int_1 - 32768;
 459:Src/spi_MEncoder.c **** //	}
 460:Src/spi_MEncoder.c **** //		if( estimated_phase_integ_int_1 < -16384 )
 461:Src/spi_MEncoder.c **** //	{
 462:Src/spi_MEncoder.c **** //		estimated_phase_integ_int_1 = estimated_phase_integ_int_1 + 32768;
 463:Src/spi_MEncoder.c **** //	}
 464:Src/spi_MEncoder.c **** 
 465:Src/spi_MEncoder.c **** 	
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 24


 466:Src/spi_MEncoder.c **** 	if( (int)*estimated_phase > 16384 )
 467:Src/spi_MEncoder.c **** 	{
 468:Src/spi_MEncoder.c **** 		*estimated_phase = *estimated_phase - 32768;
 469:Src/spi_MEncoder.c **** 	}
 470:Src/spi_MEncoder.c **** 		if( (int)*estimated_phase < -16384 )
 471:Src/spi_MEncoder.c **** 	{
 472:Src/spi_MEncoder.c **** 		*estimated_phase = *estimated_phase + 32768;
 473:Src/spi_MEncoder.c **** 	}
 474:Src/spi_MEncoder.c **** 	
 475:Src/spi_MEncoder.c **** 	if(g_CmdMap[TAG_MOTOR_ENABLE] == 1)
 476:Src/spi_MEncoder.c **** 	{
 477:Src/spi_MEncoder.c **** 		if(temp_spd_index < FILTER_SIZE)
 478:Src/spi_MEncoder.c **** 		{
 479:Src/spi_MEncoder.c **** 			temp_spd_filed[temp_spd_index] = estimated_SPD_filterd;
 480:Src/spi_MEncoder.c **** 			temp_spd[temp_spd_index++] = (int)*estimated_spd;
 481:Src/spi_MEncoder.c **** 		}
 482:Src/spi_MEncoder.c **** 		else
 483:Src/spi_MEncoder.c **** 			temp_spd_index = 0;
 484:Src/spi_MEncoder.c **** 			
 485:Src/spi_MEncoder.c **** 	}
 486:Src/spi_MEncoder.c **** 	else
 487:Src/spi_MEncoder.c **** 	{
 488:Src/spi_MEncoder.c **** 		temp_spd_index = 0;
 489:Src/spi_MEncoder.c **** 	}
 490:Src/spi_MEncoder.c **** 	
 491:Src/spi_MEncoder.c **** 	g_measured_phase = measured_phase;
 492:Src/spi_MEncoder.c **** 	
 493:Src/spi_MEncoder.c **** ///	estimated_spd_1 = ( (int)*estimated_spd ) / 2000;
 494:Src/spi_MEncoder.c **** 	estimated_spd_1 = ( (int)*estimated_spd )* 30 /23000;
 495:Src/spi_MEncoder.c **** 	estimated_SPD_filterd = ( (56*estimated_SPD_filterd) + ( 200*(int)(estimated_spd_1)) )>>8; ;
 496:Src/spi_MEncoder.c **** 	
 497:Src/spi_MEncoder.c **** 
 498:Src/spi_MEncoder.c **** //	estimated_SPD_filterd =(s16)((((int64_t)estimated_SPD_filterd)<<10)/((int64_t)*g_pVel_ref_base_P
 499:Src/spi_MEncoder.c **** //	g_CmdMap[CMD_SPD_ACT_PU] =  ( estimated_SPD_filterd /100) *100 ;
 500:Src/spi_MEncoder.c **** 	g_CmdMap[CMD_SPD_ACT_PU] =  estimated_SPD_filterd  ;
 501:Src/spi_MEncoder.c **** 
 502:Src/spi_MEncoder.c **** //	
 503:Src/spi_MEncoder.c **** }
 504:Src/spi_MEncoder.c **** }
 789              		.loc 1 504 0
 790 000e 5DF8044B 		ldr	r4, [sp], #4
 791              	.LCFI12:
 792              		.cfi_remember_state
 793              		.cfi_restore 4
 794              		.cfi_def_cfa_offset 0
 795 0012 7047     		bx	lr
 796              	.LVL47:
 797              	.L68:
 798              	.LCFI13:
 799              		.cfi_restore_state
 408:Src/spi_MEncoder.c **** 		
 800              		.loc 1 408 0
 801 0014 2346     		mov	r3, r4
 802 0016 0024     		movs	r4, #0
 803 0018 1C60     		str	r4, [r3]
 410:Src/spi_MEncoder.c **** 	{
 804              		.loc 1 410 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 25


 805 001a B0F5804F 		cmp	r0, #16384
 806 001e 02DD     		ble	.L52
 412:Src/spi_MEncoder.c **** 	}
 807              		.loc 1 412 0
 808 0020 A0F50040 		sub	r0, r0, #32768
 809              	.LVL48:
 810 0024 00B2     		sxth	r0, r0
 811              	.LVL49:
 812              	.L52:
 414:Src/spi_MEncoder.c **** 	{
 813              		.loc 1 414 0
 814 0026 10F5804F 		cmn	r0, #16384
 815 002a 02DA     		bge	.L53
 416:Src/spi_MEncoder.c **** 	}
 816              		.loc 1 416 0
 817 002c A0F50040 		sub	r0, r0, #32768
 818              	.LVL50:
 819 0030 00B2     		sxth	r0, r0
 820              	.LVL51:
 821              	.L53:
 422:Src/spi_MEncoder.c **** 	
 822              		.loc 1 422 0
 823 0032 07EE900A 		vmov	s15, r0	@ int
 824 0036 F8EEE76A 		vcvt.f32.s32	s13, s15
 825 003a D1ED007A 		vldr.32	s15, [r1]
 826 003e 76EEE76A 		vsub.f32	s13, s13, s15
 827              	.LVL52:
 424:Src/spi_MEncoder.c **** 	{
 828              		.loc 1 424 0
 829 0042 DFED677A 		vldr.32	s15, .L70+4
 830 0046 F4EEE76A 		vcmpe.f32	s13, s15
 831 004a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 832 004e 03DD     		ble	.L54
 426:Src/spi_MEncoder.c **** 	}	
 833              		.loc 1 426 0
 834 0050 DFED647A 		vldr.32	s15, .L70+8
 835 0054 76EEE76A 		vsub.f32	s13, s13, s15
 836              	.LVL53:
 837              	.L54:
 428:Src/spi_MEncoder.c **** 	{
 838              		.loc 1 428 0
 839 0058 DFED637A 		vldr.32	s15, .L70+12
 840 005c F4EEE76A 		vcmpe.f32	s13, s15
 841 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 842 0064 03D5     		bpl	.L56
 430:Src/spi_MEncoder.c **** 	}	
 843              		.loc 1 430 0
 844 0066 DFED5F7A 		vldr.32	s15, .L70+8
 845 006a 76EEA76A 		vadd.f32	s13, s13, s15
 846              	.LVL54:
 847              	.L56:
 432:Src/spi_MEncoder.c **** 	
 848              		.loc 1 432 0
 849 006e 5F4C     		ldr	r4, .L70+16
 850 0070 D4ED007A 		vldr.32	s15, [r4]	@ int
 851 0074 B8EEE77A 		vcvt.f32.s32	s14, s15
 852 0078 37EE267A 		vadd.f32	s14, s14, s13
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 26


 853 007c FDEEC77A 		vcvt.s32.f32	s15, s14
 854 0080 17EE903A 		vmov	r3, s15	@ int
 855 0084 C4ED007A 		vstr.32	s15, [r4]	@ int
 436:Src/spi_MEncoder.c **** 	
 856              		.loc 1 436 0
 857 0088 594C     		ldr	r4, .L70+20
 858 008a 84FB03C4 		smull	ip, r4, r4, r3
 859 008e DB17     		asrs	r3, r3, #31
 860 0090 C3EB2433 		rsb	r3, r3, r4, asr #12
 861 0094 07EE903A 		vmov	s15, r3	@ int
 862 0098 F8EEE77A 		vcvt.f32.s32	s15, s15
 863 009c 554B     		ldr	r3, .L70+24
 864 009e C3ED007A 		vstr.32	s15, [r3]
 438:Src/spi_MEncoder.c **** 	
 865              		.loc 1 438 0
 866 00a2 9FED557A 		vldr.32	s14, .L70+28
 867 00a6 66EE876A 		vmul.f32	s13, s13, s14
 868              	.LVL55:
 869 00aa 9FED547A 		vldr.32	s14, .L70+32
 870 00ae 67EE877A 		vmul.f32	s15, s15, s14
 871 00b2 76EEA77A 		vadd.f32	s15, s13, s15
 872 00b6 C2ED007A 		vstr.32	s15, [r2]
 440:Src/spi_MEncoder.c **** 	
 873              		.loc 1 440 0
 874 00ba 514C     		ldr	r4, .L70+36
 875 00bc 94ED007A 		vldr.32	s14, [r4]	@ int
 876 00c0 F8EEC76A 		vcvt.f32.s32	s13, s14
 877 00c4 76EEA77A 		vadd.f32	s15, s13, s15
 878 00c8 FDEEE77A 		vcvt.s32.f32	s15, s15
 879 00cc 17EE903A 		vmov	r3, s15	@ int
 880 00d0 C4ED007A 		vstr.32	s15, [r4]	@ int
 442:Src/spi_MEncoder.c **** 	{
 881              		.loc 1 442 0
 882 00d4 4B4C     		ldr	r4, .L70+40
 883 00d6 A342     		cmp	r3, r4
 884 00d8 05DD     		ble	.L58
 444:Src/spi_MEncoder.c **** 	}
 885              		.loc 1 444 0
 886 00da 03F16C43 		add	r3, r3, #-335544320
 887 00de 03F5F003 		add	r3, r3, #7864320
 888 00e2 474C     		ldr	r4, .L70+36
 889 00e4 2360     		str	r3, [r4]
 890              	.L58:
 446:Src/spi_MEncoder.c **** 	{
 891              		.loc 1 446 0
 892 00e6 464B     		ldr	r3, .L70+36
 893 00e8 1B68     		ldr	r3, [r3]
 894 00ea 474C     		ldr	r4, .L70+44
 895 00ec A342     		cmp	r3, r4
 896 00ee 05DA     		bge	.L59
 448:Src/spi_MEncoder.c **** 	}
 897              		.loc 1 448 0
 898 00f0 03F19C53 		add	r3, r3, #327155712
 899 00f4 03F50023 		add	r3, r3, #524288
 900 00f8 414C     		ldr	r4, .L70+36
 901 00fa 2360     		str	r3, [r4]
 902              	.L59:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 27


 452:Src/spi_MEncoder.c **** //	*estimated_phase  = *estimated_phase  + *estimated_spd * 0.0001;
 903              		.loc 1 452 0
 904 00fc 404B     		ldr	r3, .L70+36
 905 00fe 1B68     		ldr	r3, [r3]
 906 0100 3B4C     		ldr	r4, .L70+20
 907 0102 84FB03C4 		smull	ip, r4, r4, r3
 908 0106 DB17     		asrs	r3, r3, #31
 909 0108 C3EB2433 		rsb	r3, r3, r4, asr #12
 910 010c 07EE903A 		vmov	s15, r3	@ int
 911 0110 F8EEE77A 		vcvt.f32.s32	s15, s15
 912 0114 C1ED007A 		vstr.32	s15, [r1]
 466:Src/spi_MEncoder.c **** 	{
 913              		.loc 1 466 0
 914 0118 BDEEE77A 		vcvt.s32.f32	s14, s15
 915 011c 17EE103A 		vmov	r3, s14	@ int
 916 0120 B3F5804F 		cmp	r3, #16384
 917 0124 05DD     		ble	.L60
 468:Src/spi_MEncoder.c **** 	}
 918              		.loc 1 468 0
 919 0126 9FED2F7A 		vldr.32	s14, .L70+8
 920 012a 77EEC77A 		vsub.f32	s15, s15, s14
 921 012e C1ED007A 		vstr.32	s15, [r1]
 922              	.L60:
 470:Src/spi_MEncoder.c **** 	{
 923              		.loc 1 470 0
 924 0132 D1ED007A 		vldr.32	s15, [r1]
 925 0136 BDEEE77A 		vcvt.s32.f32	s14, s15
 926 013a 17EE103A 		vmov	r3, s14	@ int
 927 013e 13F5804F 		cmn	r3, #16384
 928 0142 05DA     		bge	.L61
 472:Src/spi_MEncoder.c **** 	}
 929              		.loc 1 472 0
 930 0144 9FED277A 		vldr.32	s14, .L70+8
 931 0148 77EE877A 		vadd.f32	s15, s15, s14
 932 014c C1ED007A 		vstr.32	s15, [r1]
 933              	.L61:
 475:Src/spi_MEncoder.c **** 	{
 934              		.loc 1 475 0
 935 0150 2E4B     		ldr	r3, .L70+48
 936 0152 B3F80232 		ldrh	r3, [r3, #514]
 937 0156 1BB2     		sxth	r3, r3
 938 0158 012B     		cmp	r3, #1
 939 015a 24D0     		beq	.L69
 488:Src/spi_MEncoder.c **** 	}
 940              		.loc 1 488 0
 941 015c 2C4B     		ldr	r3, .L70+52
 942 015e 0021     		movs	r1, #0
 943              	.LVL56:
 944 0160 1960     		str	r1, [r3]
 945              	.L64:
 491:Src/spi_MEncoder.c **** 	
 946              		.loc 1 491 0
 947 0162 2C4B     		ldr	r3, .L70+56
 948 0164 1860     		str	r0, [r3]
 494:Src/spi_MEncoder.c **** 	estimated_SPD_filterd = ( (56*estimated_SPD_filterd) + ( 200*(int)(estimated_spd_1)) )>>8; ;
 949              		.loc 1 494 0
 950 0166 D2ED007A 		vldr.32	s15, [r2]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 28


 951 016a FDEEE77A 		vcvt.s32.f32	s15, s15
 952 016e 17EE902A 		vmov	r2, s15	@ int
 953              	.LVL57:
 954 0172 C2EB0212 		rsb	r2, r2, r2, lsl #4
 955 0176 5300     		lsls	r3, r2, #1
 956 0178 274A     		ldr	r2, .L70+60
 957 017a 82FB0312 		smull	r1, r2, r2, r3
 958 017e 1A44     		add	r2, r2, r3
 959 0180 DB17     		asrs	r3, r3, #31
 960 0182 C3EBA233 		rsb	r3, r3, r2, asr #14
 961              	.LVL58:
 495:Src/spi_MEncoder.c **** 	
 962              		.loc 1 495 0
 963 0186 2549     		ldr	r1, .L70+64
 964 0188 0A68     		ldr	r2, [r1]
 965 018a C2EBC202 		rsb	r2, r2, r2, lsl #3
 966 018e D000     		lsls	r0, r2, #3
 967              	.LVL59:
 968 0190 C822     		movs	r2, #200
 969 0192 02FB0303 		mla	r3, r2, r3, r0
 970              	.LVL60:
 971 0196 1B12     		asrs	r3, r3, #8
 972 0198 0B60     		str	r3, [r1]
 500:Src/spi_MEncoder.c **** 
 973              		.loc 1 500 0
 974 019a 0B68     		ldr	r3, [r1]
 975 019c 1BB2     		sxth	r3, r3
 976 019e 1B4A     		ldr	r2, .L70+48
 977 01a0 A2F85030 		strh	r3, [r2, #80]	@ movhi
 978              		.loc 1 504 0
 979 01a4 33E7     		b	.L50
 980              	.LVL61:
 981              	.L69:
 477:Src/spi_MEncoder.c **** 		{
 982              		.loc 1 477 0
 983 01a6 1A4B     		ldr	r3, .L70+52
 984 01a8 1B68     		ldr	r3, [r3]
 985 01aa 172B     		cmp	r3, #23
 986 01ac 11DC     		bgt	.L63
 479:Src/spi_MEncoder.c **** 			temp_spd[temp_spd_index++] = (int)*estimated_spd;
 987              		.loc 1 479 0
 988 01ae 1B49     		ldr	r1, .L70+64
 989              	.LVL62:
 990 01b0 0C68     		ldr	r4, [r1]
 991 01b2 1B49     		ldr	r1, .L70+68
 992 01b4 41F82340 		str	r4, [r1, r3, lsl #2]
 480:Src/spi_MEncoder.c **** 		}
 993              		.loc 1 480 0
 994 01b8 D2ED007A 		vldr.32	s15, [r2]
 995 01bc 5C1C     		adds	r4, r3, #1
 996 01be 1449     		ldr	r1, .L70+52
 997 01c0 0C60     		str	r4, [r1]
 998 01c2 FDEEE77A 		vcvt.s32.f32	s15, s15
 999 01c6 1749     		ldr	r1, .L70+72
 1000 01c8 17EE904A 		vmov	r4, s15	@ int
 1001 01cc 41F82340 		str	r4, [r1, r3, lsl #2]
 1002 01d0 C7E7     		b	.L64
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 29


 1003              	.LVL63:
 1004              	.L63:
 483:Src/spi_MEncoder.c **** 			
 1005              		.loc 1 483 0
 1006 01d2 0F4B     		ldr	r3, .L70+52
 1007 01d4 0021     		movs	r1, #0
 1008              	.LVL64:
 1009 01d6 1960     		str	r1, [r3]
 1010 01d8 C3E7     		b	.L64
 1011              	.L71:
 1012 01da 00BF     		.align	2
 1013              	.L70:
 1014 01dc 00000000 		.word	.LANCHOR0
 1015 01e0 00008046 		.word	1182793728
 1016 01e4 00000047 		.word	1191182336
 1017 01e8 000080C6 		.word	-964689920
 1018 01ec 00000000 		.word	.LANCHOR1
 1019 01f0 AD8BDB68 		.word	1759218605
 1020 01f4 00000000 		.word	.LANCHOR2
 1021 01f8 0000FA44 		.word	1157234688
 1022 01fc 0050C347 		.word	1203982336
 1023 0200 00000000 		.word	.LANCHOR3
 1024 0204 0000C409 		.word	163840000
 1025 0208 00003CF6 		.word	-163840000
 1026 020c 00000000 		.word	g_CmdMap
 1027 0210 00000000 		.word	.LANCHOR4
 1028 0214 00000000 		.word	.LANCHOR8
 1029 0218 596D5CB6 		.word	-1235456679
 1030 021c 00000000 		.word	.LANCHOR5
 1031 0220 00000000 		.word	.LANCHOR6
 1032 0224 00000000 		.word	.LANCHOR7
 1033              		.cfi_endproc
 1034              	.LFE339:
 1036              		.section	.text.GetElectricAngle,"ax",%progbits
 1037              		.align	1
 1038              		.global	GetElectricAngle
 1039              		.syntax unified
 1040              		.thumb
 1041              		.thumb_func
 1042              		.fpu fpv4-sp-d16
 1044              	GetElectricAngle:
 1045              	.LFB340:
 505:Src/spi_MEncoder.c **** 
 506:Src/spi_MEncoder.c **** 
 507:Src/spi_MEncoder.c **** 
 508:Src/spi_MEncoder.c **** int g_ElectricAngle_15bit_Last = 0;
 509:Src/spi_MEncoder.c **** int s_Encoder_Inc = 0;
 510:Src/spi_MEncoder.c **** 
 511:Src/spi_MEncoder.c **** int g_ElectricAngle_add = 0;
 512:Src/spi_MEncoder.c **** void GetElectricAngle(void)//50us ִ������
 513:Src/spi_MEncoder.c **** {		
 1046              		.loc 1 513 0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050              		@ link register save eliminated.
 1051              	.LVL65:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 30


 514:Src/spi_MEncoder.c **** 		static s32 count1 = 0;
 515:Src/spi_MEncoder.c **** 		s32 inc__MechanicsAngle_15bit = 0;
 516:Src/spi_MEncoder.c **** 		g_MechanicsAngle_15bit = SPI3->DR>>1;
 1052              		.loc 1 516 0
 1053 0000 3D4A     		ldr	r2, .L84
 1054 0002 D368     		ldr	r3, [r2, #12]
 1055 0004 5B08     		lsrs	r3, r3, #1
 1056 0006 3D49     		ldr	r1, .L84+4
 1057 0008 0B60     		str	r3, [r1]
 517:Src/spi_MEncoder.c **** 		if(SPI3->DR == 0xFFFF)
 1058              		.loc 1 517 0
 1059 000a D268     		ldr	r2, [r2, #12]
 1060 000c 4FF6FF73 		movw	r3, #65535
 1061 0010 9A42     		cmp	r2, r3
 1062 0012 52D0     		beq	.L83
 518:Src/spi_MEncoder.c **** 		{
 519:Src/spi_MEncoder.c **** 			if(count1<50000)
 520:Src/spi_MEncoder.c **** 			{
 521:Src/spi_MEncoder.c **** 				count1++;
 522:Src/spi_MEncoder.c **** 			}
 523:Src/spi_MEncoder.c **** 			else
 524:Src/spi_MEncoder.c **** 			{
 525:Src/spi_MEncoder.c **** 				g_CmdMap[CMD_ERROR] |= ERROR_MASK_ENCODER_FAULT;
 526:Src/spi_MEncoder.c **** 			}
 527:Src/spi_MEncoder.c **** 		}
 528:Src/spi_MEncoder.c **** 		else
 529:Src/spi_MEncoder.c **** 		{
 530:Src/spi_MEncoder.c **** 			count1 = 0;
 1063              		.loc 1 530 0
 1064 0014 3A4B     		ldr	r3, .L84+8
 1065 0016 0022     		movs	r2, #0
 1066 0018 1A60     		str	r2, [r3]
 1067              	.L75:
 531:Src/spi_MEncoder.c **** 		}
 532:Src/spi_MEncoder.c **** //		g_MechanicsAngle_15bit += g_CmdMap[CMD_SPD_ACT_PU]*500/16384;
 533:Src/spi_MEncoder.c **** //		g_MechanicsAngle_15bit &= 0x7fff;
 534:Src/spi_MEncoder.c **** //		
 535:Src/spi_MEncoder.c **** 		g_MechanicsAngle_15bit_last = g_MechanicsAngle_15bit;
 1068              		.loc 1 535 0
 1069 001a 384B     		ldr	r3, .L84+4
 1070 001c 1968     		ldr	r1, [r3]
 1071 001e 394A     		ldr	r2, .L84+12
 1072 0020 1160     		str	r1, [r2]
 536:Src/spi_MEncoder.c **** 		inc__MechanicsAngle_15bit = g_MechanicsAngle_15bit - g_MechanicsAngle_15bit_last;
 1073              		.loc 1 536 0
 1074 0022 1B68     		ldr	r3, [r3]
 1075 0024 1268     		ldr	r2, [r2]
 1076 0026 9B1A     		subs	r3, r3, r2
 1077              	.LVL66:
 537:Src/spi_MEncoder.c **** 		if(inc__MechanicsAngle_15bit > 16384)
 1078              		.loc 1 537 0
 1079 0028 B3F5804F 		cmp	r3, #16384
 1080 002c 58DD     		ble	.L76
 538:Src/spi_MEncoder.c **** 		{
 539:Src/spi_MEncoder.c **** 				inc__MechanicsAngle_15bit =  32768 - inc__MechanicsAngle_15bit;
 1081              		.loc 1 539 0
 1082 002e C3F50043 		rsb	r3, r3, #32768
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 31


 1083              	.LVL67:
 1084              	.L77:
 540:Src/spi_MEncoder.c **** 		}
 541:Src/spi_MEncoder.c **** 		else if(inc__MechanicsAngle_15bit < -16384)
 542:Src/spi_MEncoder.c **** 		{
 543:Src/spi_MEncoder.c **** 				inc__MechanicsAngle_15bit =  32768 + inc__MechanicsAngle_15bit;
 544:Src/spi_MEncoder.c **** 		}
 545:Src/spi_MEncoder.c **** 		if(inc__MechanicsAngle_15bit > 8192)//�������쳣
 1085              		.loc 1 545 0
 1086 0032 B3F5005F 		cmp	r3, #8192
 1087 0036 07DD     		ble	.L78
 546:Src/spi_MEncoder.c **** 		{
 547:Src/spi_MEncoder.c **** 			g_CmdMap[CMD_ERROR] |= ERROR_MASK_ENCODER_FAULT;
 1088              		.loc 1 547 0
 1089 0038 334A     		ldr	r2, .L84+16
 1090 003a B2F85430 		ldrh	r3, [r2, #84]
 1091              	.LVL68:
 1092 003e 1BB2     		sxth	r3, r3
 1093 0040 43F04003 		orr	r3, r3, #64
 1094 0044 A2F85430 		strh	r3, [r2, #84]	@ movhi
 1095              	.L78:
 548:Src/spi_MEncoder.c **** 		}
 549:Src/spi_MEncoder.c **** 		g_ElectricAngle_15bit_Raw = g_MechanicsAngle_15bit% EN_360;
 1096              		.loc 1 549 0
 1097 0048 2C49     		ldr	r1, .L84+4
 1098 004a 0868     		ldr	r0, [r1]
 1099 004c 2F4B     		ldr	r3, .L84+20
 1100 004e B3F90030 		ldrsh	r3, [r3]
 1101 0052 90FBF3F2 		sdiv	r2, r0, r3
 1102 0056 03FB1202 		mls	r2, r3, r2, r0
 1103 005a 2D48     		ldr	r0, .L84+24
 1104 005c 0260     		str	r2, [r0]
 550:Src/spi_MEncoder.c **** 		g_ElectricAngle_act = (g_MechanicsAngle_15bit + g_Encode_offset_EN)% EN_360;
 1105              		.loc 1 550 0
 1106 005e 0A68     		ldr	r2, [r1]
 1107 0060 2C49     		ldr	r1, .L84+28
 1108 0062 0968     		ldr	r1, [r1]
 1109 0064 0A44     		add	r2, r2, r1
 1110 0066 92FBF3F1 		sdiv	r1, r2, r3
 1111 006a 03FB1122 		mls	r2, r3, r1, r2
 1112 006e 2A49     		ldr	r1, .L84+32
 1113 0070 0A60     		str	r2, [r1]
 551:Src/spi_MEncoder.c **** 		if(g_CmdMap[SYS_MOT_TEST] == 0)
 1114              		.loc 1 551 0
 1115 0072 254A     		ldr	r2, .L84+16
 1116 0074 B2F81A22 		ldrh	r2, [r2, #538]
 1117 0078 12B2     		sxth	r2, r2
 1118 007a 002A     		cmp	r2, #0
 1119 007c 36D1     		bne	.L79
 552:Src/spi_MEncoder.c **** 		{										
 553:Src/spi_MEncoder.c **** 			g_ElectricAngle = g_ElectricAngle_act;
 1120              		.loc 1 553 0
 1121 007e 0968     		ldr	r1, [r1]
 1122 0080 264A     		ldr	r2, .L84+36
 1123 0082 1160     		str	r1, [r2]
 1124              	.L80:
 554:Src/spi_MEncoder.c **** 		}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 32


 555:Src/spi_MEncoder.c **** 		else
 556:Src/spi_MEncoder.c **** 		{
 557:Src/spi_MEncoder.c **** 			g_ElectricAngle = g_ElectricAngle_sim;
 558:Src/spi_MEncoder.c **** 		}
 559:Src/spi_MEncoder.c **** 	  if(g_ElectricAngle>=EN_360)
 1125              		.loc 1 559 0
 1126 0084 254A     		ldr	r2, .L84+36
 1127 0086 1268     		ldr	r2, [r2]
 1128 0088 9342     		cmp	r3, r2
 1129 008a 03DC     		bgt	.L81
 560:Src/spi_MEncoder.c **** 		{
 561:Src/spi_MEncoder.c **** 			g_ElectricAngle=g_ElectricAngle - EN_360;			
 1130              		.loc 1 561 0
 1131 008c 2349     		ldr	r1, .L84+36
 1132 008e 0A68     		ldr	r2, [r1]
 1133 0090 D21A     		subs	r2, r2, r3
 1134 0092 0A60     		str	r2, [r1]
 1135              	.L81:
 562:Src/spi_MEncoder.c **** 		}
 563:Src/spi_MEncoder.c **** 		if(g_ElectricAngle<=EN_0)
 1136              		.loc 1 563 0
 1137 0094 224A     		ldr	r2, .L84+40
 1138 0096 B2F90010 		ldrsh	r1, [r2]
 1139 009a 204A     		ldr	r2, .L84+36
 1140 009c 1268     		ldr	r2, [r2]
 1141 009e 9142     		cmp	r1, r2
 1142 00a0 03DB     		blt	.L82
 564:Src/spi_MEncoder.c **** 		{
 565:Src/spi_MEncoder.c **** 			g_ElectricAngle=EN_360 + g_ElectricAngle;
 1143              		.loc 1 565 0
 1144 00a2 1E49     		ldr	r1, .L84+36
 1145 00a4 0A68     		ldr	r2, [r1]
 1146 00a6 1A44     		add	r2, r2, r3
 1147 00a8 0A60     		str	r2, [r1]
 1148              	.L82:
 566:Src/spi_MEncoder.c **** 		}
 567:Src/spi_MEncoder.c **** 		g_ElectricAngle_15bit = (g_ElectricAngle_act<<15)/EN_360;// ��Ƕ�_32768
 1149              		.loc 1 567 0
 1150 00aa 1B4A     		ldr	r2, .L84+32
 1151 00ac 1268     		ldr	r2, [r2]
 1152 00ae D203     		lsls	r2, r2, #15
 1153 00b0 92FBF3F3 		sdiv	r3, r2, r3
 1154 00b4 1B4A     		ldr	r2, .L84+44
 1155 00b6 1360     		str	r3, [r2]
 568:Src/spi_MEncoder.c **** 		
 569:Src/spi_MEncoder.c **** 		
 570:Src/spi_MEncoder.c **** 		
 571:Src/spi_MEncoder.c **** 		
 572:Src/spi_MEncoder.c **** 		
 573:Src/spi_MEncoder.c **** //	s_cnt++;
 574:Src/spi_MEncoder.c **** 		
 575:Src/spi_MEncoder.c **** //	if(s_cnt == 4)
 576:Src/spi_MEncoder.c **** //	{
 577:Src/spi_MEncoder.c **** //		s_cnt = 0;
 578:Src/spi_MEncoder.c **** //		s_Encoder_Inc = (g_ElectricAngle_15bit - g_ElectricAngle_15bit_Last); 
 579:Src/spi_MEncoder.c **** //		g_ElectricAngle_15bit_Last = g_ElectricAngle_15bit;
 580:Src/spi_MEncoder.c **** //		
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 33


 581:Src/spi_MEncoder.c **** //		if (s_Encoder_Inc > 16384)    // ����ֵ��Խ���߽߱紦��
 582:Src/spi_MEncoder.c **** //			s_Encoder_Inc -= 32768;
 583:Src/spi_MEncoder.c **** //		else if (s_Encoder_Inc < -16384)
 584:Src/spi_MEncoder.c **** //			s_Encoder_Inc += 32768;  
 585:Src/spi_MEncoder.c **** //		
 586:Src/spi_MEncoder.c **** //	//	speed_based_encoder = s_Encoder_Inc * 60*  1000000  /180   / 23000; 
 587:Src/spi_MEncoder.c **** //	}
 588:Src/spi_MEncoder.c **** //		
 589:Src/spi_MEncoder.c **** }
 1156              		.loc 1 589 0
 1157 00b8 7047     		bx	lr
 1158              	.LVL69:
 1159              	.L83:
 519:Src/spi_MEncoder.c **** 			{
 1160              		.loc 1 519 0
 1161 00ba 114B     		ldr	r3, .L84+8
 1162 00bc 1B68     		ldr	r3, [r3]
 1163 00be 4CF24F32 		movw	r2, #49999
 1164 00c2 9342     		cmp	r3, r2
 1165 00c4 03DC     		bgt	.L74
 521:Src/spi_MEncoder.c **** 			}
 1166              		.loc 1 521 0
 1167 00c6 0133     		adds	r3, r3, #1
 1168 00c8 0D4A     		ldr	r2, .L84+8
 1169 00ca 1360     		str	r3, [r2]
 1170 00cc A5E7     		b	.L75
 1171              	.L74:
 525:Src/spi_MEncoder.c **** 			}
 1172              		.loc 1 525 0
 1173 00ce 0E4A     		ldr	r2, .L84+16
 1174 00d0 B2F85430 		ldrh	r3, [r2, #84]
 1175 00d4 1BB2     		sxth	r3, r3
 1176 00d6 43F04003 		orr	r3, r3, #64
 1177 00da A2F85430 		strh	r3, [r2, #84]	@ movhi
 1178 00de 9CE7     		b	.L75
 1179              	.LVL70:
 1180              	.L76:
 541:Src/spi_MEncoder.c **** 		{
 1181              		.loc 1 541 0
 1182 00e0 13F5804F 		cmn	r3, #16384
 1183 00e4 A5DA     		bge	.L77
 543:Src/spi_MEncoder.c **** 		}
 1184              		.loc 1 543 0
 1185 00e6 03F50043 		add	r3, r3, #32768
 1186              	.LVL71:
 1187 00ea A2E7     		b	.L77
 1188              	.LVL72:
 1189              	.L79:
 557:Src/spi_MEncoder.c **** 		}
 1190              		.loc 1 557 0
 1191 00ec 0E4A     		ldr	r2, .L84+48
 1192 00ee 1168     		ldr	r1, [r2]
 1193 00f0 0A4A     		ldr	r2, .L84+36
 1194 00f2 1160     		str	r1, [r2]
 1195 00f4 C6E7     		b	.L80
 1196              	.L85:
 1197 00f6 00BF     		.align	2
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 34


 1198              	.L84:
 1199 00f8 003C0040 		.word	1073757184
 1200 00fc 00000000 		.word	g_MechanicsAngle_15bit
 1201 0100 00000000 		.word	.LANCHOR9
 1202 0104 00000000 		.word	g_MechanicsAngle_15bit_last
 1203 0108 00000000 		.word	g_CmdMap
 1204 010c 00000000 		.word	EN_360
 1205 0110 00000000 		.word	g_ElectricAngle_15bit_Raw
 1206 0114 00000000 		.word	.LANCHOR10
 1207 0118 00000000 		.word	g_ElectricAngle_act
 1208 011c 00000000 		.word	g_ElectricAngle
 1209 0120 00000000 		.word	EN_0
 1210 0124 00000000 		.word	g_ElectricAngle_15bit
 1211 0128 00000000 		.word	g_ElectricAngle_sim
 1212              		.cfi_endproc
 1213              	.LFE340:
 1215              		.section	.text.sim_ElectricAngle,"ax",%progbits
 1216              		.align	1
 1217              		.global	sim_ElectricAngle
 1218              		.syntax unified
 1219              		.thumb
 1220              		.thumb_func
 1221              		.fpu fpv4-sp-d16
 1223              	sim_ElectricAngle:
 1224              	.LFB341:
 590:Src/spi_MEncoder.c **** void sim_ElectricAngle(void)
 591:Src/spi_MEncoder.c **** {
 1225              		.loc 1 591 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 1229              		@ link register save eliminated.
 592:Src/spi_MEncoder.c **** 		static s16 sys_mot_test_last = 0;
 593:Src/spi_MEncoder.c **** 		static s32 cnt_temp = 0;
 594:Src/spi_MEncoder.c **** 		if(sys_mot_test_last != g_CmdMap[SYS_MOT_TEST])
 1230              		.loc 1 594 0
 1231 0000 7A4B     		ldr	r3, .L104
 1232 0002 B3F81A32 		ldrh	r3, [r3, #538]
 1233 0006 1BB2     		sxth	r3, r3
 1234 0008 794A     		ldr	r2, .L104+4
 1235 000a B2F90020 		ldrsh	r2, [r2]
 1236 000e 9342     		cmp	r3, r2
 1237 0010 0DD0     		beq	.L87
 595:Src/spi_MEncoder.c **** 		{
 596:Src/spi_MEncoder.c **** 			if(g_CmdMap[SYS_MOT_TEST] == 1)
 1238              		.loc 1 596 0
 1239 0012 764B     		ldr	r3, .L104
 1240 0014 B3F81A22 		ldrh	r2, [r3, #538]
 597:Src/spi_MEncoder.c **** 			{
 598:Src/spi_MEncoder.c **** 			}
 599:Src/spi_MEncoder.c **** 			if(g_CmdMap[SYS_MOT_TEST] == 2)
 1241              		.loc 1 599 0
 1242 0018 B3F81A32 		ldrh	r3, [r3, #538]
 1243 001c 1BB2     		sxth	r3, r3
 1244 001e 022B     		cmp	r3, #2
 1245 0020 2BD0     		beq	.L96
 1246              	.L88:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 35


 600:Src/spi_MEncoder.c **** 			{
 601:Src/spi_MEncoder.c **** 				cnt_temp = EN_60*2000/EN_360;
 602:Src/spi_MEncoder.c **** 				g_ElectricAngle_sim = EN_60;
 603:Src/spi_MEncoder.c **** 				g_Encode_offset_EN = EN_0;
 604:Src/spi_MEncoder.c **** 				g_Encode_offset = g_Encode_offset_EN*360/EN_360;
 605:Src/spi_MEncoder.c **** 				g_CmdMap[MOT_EANGLE_OFFSET] = g_Encode_offset;
 606:Src/spi_MEncoder.c **** 			}
 607:Src/spi_MEncoder.c **** 			if(g_CmdMap[SYS_MOT_TEST] == 3)
 1247              		.loc 1 607 0
 1248 0022 724B     		ldr	r3, .L104
 1249 0024 B3F81A32 		ldrh	r3, [r3, #538]
 1250 0028 1BB2     		sxth	r3, r3
 1251 002a 032B     		cmp	r3, #3
 1252 002c 49D0     		beq	.L97
 1253              	.L87:
 608:Src/spi_MEncoder.c **** 			{
 609:Src/spi_MEncoder.c **** 				cnt_temp = EN_300*2000/EN_360;
 610:Src/spi_MEncoder.c **** 				g_ElectricAngle_sim = EN_300;
 611:Src/spi_MEncoder.c **** 				g_Encode_offset_EN = EN_0;
 612:Src/spi_MEncoder.c **** 				g_Encode_offset = g_Encode_offset_EN*360/EN_360;
 613:Src/spi_MEncoder.c **** 				g_CmdMap[MOT_EANGLE_OFFSET] = g_Encode_offset;
 614:Src/spi_MEncoder.c **** 			}
 615:Src/spi_MEncoder.c **** 		}
 616:Src/spi_MEncoder.c **** 		if(g_CmdMap[SYS_MOT_TEST] == 1)//ģ�������ת��Ƕ�
 1254              		.loc 1 616 0
 1255 002e 6F4B     		ldr	r3, .L104
 1256 0030 B3F81A32 		ldrh	r3, [r3, #538]
 1257 0034 1BB2     		sxth	r3, r3
 1258 0036 012B     		cmp	r3, #1
 1259 0038 67D0     		beq	.L98
 617:Src/spi_MEncoder.c **** 		{
 618:Src/spi_MEncoder.c **** 					cnt_temp = cnt_temp + 1;//1;
 619:Src/spi_MEncoder.c **** 					g_ElectricAngle_sim = cnt_temp*EN_360/4000;//2s һȦ����ת�ٶ�
 620:Src/spi_MEncoder.c **** 					if(g_ElectricAngle_sim>EN_360)
 621:Src/spi_MEncoder.c **** 					{
 622:Src/spi_MEncoder.c **** 						cnt_temp = 0;
 623:Src/spi_MEncoder.c **** 					}				
 624:Src/spi_MEncoder.c **** 					
 625:Src/spi_MEncoder.c **** 		}
 626:Src/spi_MEncoder.c **** 		else if(g_CmdMap[SYS_MOT_TEST] == 2)//���Ե�Ƕȣ���������ת(g_ElectricA
 1260              		.loc 1 626 0
 1261 003a 6C4B     		ldr	r3, .L104
 1262 003c B3F81A32 		ldrh	r3, [r3, #538]
 1263 0040 1BB2     		sxth	r3, r3
 1264 0042 022B     		cmp	r3, #2
 1265 0044 7ED0     		beq	.L99
 627:Src/spi_MEncoder.c **** 		{
 628:Src/spi_MEncoder.c **** 					if(g_ElectricAngle_sim < EN_30)
 629:Src/spi_MEncoder.c **** 					{
 630:Src/spi_MEncoder.c **** 						g_ElectricAngle_sim  = EN_0;
 631:Src/spi_MEncoder.c **** 						
 632:Src/spi_MEncoder.c **** 					}
 633:Src/spi_MEncoder.c **** 					else
 634:Src/spi_MEncoder.c **** 					{
 635:Src/spi_MEncoder.c **** 						cnt_temp = cnt_temp + 1;
 636:Src/spi_MEncoder.c **** 						g_ElectricAngle_sim = cnt_temp*EN_360/2000;//2s һȦ����ת�ٶ�
 637:Src/spi_MEncoder.c **** 						if(g_ElectricAngle_sim>EN_360)
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 36


 638:Src/spi_MEncoder.c **** 						{
 639:Src/spi_MEncoder.c **** 							cnt_temp = 0;
 640:Src/spi_MEncoder.c **** 						}
 641:Src/spi_MEncoder.c **** 					}									
 642:Src/spi_MEncoder.c **** 		}
 643:Src/spi_MEncoder.c **** 		else if(g_CmdMap[SYS_MOT_TEST] == 3)//���Ե�Ƕȣ���������ת(g_ElectricA
 1266              		.loc 1 643 0
 1267 0046 694B     		ldr	r3, .L104
 1268 0048 B3F81A32 		ldrh	r3, [r3, #538]
 1269 004c 1BB2     		sxth	r3, r3
 1270 004e 032B     		cmp	r3, #3
 1271 0050 00F09D80 		beq	.L100
 644:Src/spi_MEncoder.c **** 		{
 645:Src/spi_MEncoder.c **** 					if(g_ElectricAngle_sim > EN_330)
 646:Src/spi_MEncoder.c **** 					{
 647:Src/spi_MEncoder.c **** 						g_ElectricAngle_sim  = EN_0;
 648:Src/spi_MEncoder.c **** 					}
 649:Src/spi_MEncoder.c **** 					else
 650:Src/spi_MEncoder.c **** 					{
 651:Src/spi_MEncoder.c **** 						cnt_temp = cnt_temp - 1;
 652:Src/spi_MEncoder.c **** 						g_ElectricAngle_sim = cnt_temp*EN_360/2000;//2s һȦ����ת�ٶ�
 653:Src/spi_MEncoder.c **** 						if(g_ElectricAngle_sim<EN_0)
 654:Src/spi_MEncoder.c **** 						{
 655:Src/spi_MEncoder.c **** 							cnt_temp = 0;
 656:Src/spi_MEncoder.c **** 						}
 657:Src/spi_MEncoder.c **** 					}	
 658:Src/spi_MEncoder.c **** 		}
 659:Src/spi_MEncoder.c **** 		else if(g_CmdMap[SYS_MOT_TEST] == 4 )//��� ����� ���еĲ���
 1272              		.loc 1 659 0
 1273 0054 654B     		ldr	r3, .L104
 1274 0056 B3F81A32 		ldrh	r3, [r3, #538]
 1275 005a 1BB2     		sxth	r3, r3
 1276 005c 042B     		cmp	r3, #4
 1277 005e 00F0BE80 		beq	.L101
 660:Src/spi_MEncoder.c **** 		{
 661:Src/spi_MEncoder.c **** 					g_ElectricAngle_sim = EN_30;//2s һȦ����ת�ٶ�
 662:Src/spi_MEncoder.c **** 		}
 663:Src/spi_MEncoder.c **** 		else if(g_CmdMap[SYS_MOT_TEST] == 5)//��� ����� ���еĲ���
 1278              		.loc 1 663 0
 1279 0062 624B     		ldr	r3, .L104
 1280 0064 B3F81A32 		ldrh	r3, [r3, #538]
 1281 0068 1BB2     		sxth	r3, r3
 1282 006a 052B     		cmp	r3, #5
 1283 006c 64D1     		bne	.L90
 664:Src/spi_MEncoder.c **** 		{
 665:Src/spi_MEncoder.c **** 					g_ElectricAngle_sim = EN_30;//2s һȦ����ת�ٶ�
 1284              		.loc 1 665 0
 1285 006e 614B     		ldr	r3, .L104+8
 1286 0070 B3F90020 		ldrsh	r2, [r3]
 1287 0074 604B     		ldr	r3, .L104+12
 1288 0076 1A60     		str	r2, [r3]
 1289 0078 5EE0     		b	.L90
 1290              	.L96:
 601:Src/spi_MEncoder.c **** 				g_ElectricAngle_sim = EN_60;
 1291              		.loc 1 601 0
 1292 007a 604B     		ldr	r3, .L104+16
 1293 007c B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 37


 1294 0080 4FF4FA62 		mov	r2, #2000
 1295 0084 02FB03F2 		mul	r2, r2, r3
 1296 0088 5D49     		ldr	r1, .L104+20
 1297 008a B1F90010 		ldrsh	r1, [r1]
 1298 008e 92FBF1F2 		sdiv	r2, r2, r1
 1299 0092 5C48     		ldr	r0, .L104+24
 1300 0094 0260     		str	r2, [r0]
 602:Src/spi_MEncoder.c **** 				g_Encode_offset_EN = EN_0;
 1301              		.loc 1 602 0
 1302 0096 584A     		ldr	r2, .L104+12
 1303 0098 1360     		str	r3, [r2]
 603:Src/spi_MEncoder.c **** 				g_Encode_offset = g_Encode_offset_EN*360/EN_360;
 1304              		.loc 1 603 0
 1305 009a 5B4B     		ldr	r3, .L104+28
 1306 009c B3F90020 		ldrsh	r2, [r3]
 1307 00a0 5A4B     		ldr	r3, .L104+32
 1308 00a2 1A60     		str	r2, [r3]
 604:Src/spi_MEncoder.c **** 				g_CmdMap[MOT_EANGLE_OFFSET] = g_Encode_offset;
 1309              		.loc 1 604 0
 1310 00a4 1A68     		ldr	r2, [r3]
 1311 00a6 4FF4B473 		mov	r3, #360
 1312 00aa 03FB02F3 		mul	r3, r3, r2
 1313 00ae 93FBF1F3 		sdiv	r3, r3, r1
 1314 00b2 574A     		ldr	r2, .L104+36
 1315 00b4 1360     		str	r3, [r2]
 605:Src/spi_MEncoder.c **** 			}
 1316              		.loc 1 605 0
 1317 00b6 1368     		ldr	r3, [r2]
 1318 00b8 1BB2     		sxth	r3, r3
 1319 00ba 4C4A     		ldr	r2, .L104
 1320 00bc A2F84C32 		strh	r3, [r2, #588]	@ movhi
 1321 00c0 AFE7     		b	.L88
 1322              	.L97:
 609:Src/spi_MEncoder.c **** 				g_ElectricAngle_sim = EN_300;
 1323              		.loc 1 609 0
 1324 00c2 544B     		ldr	r3, .L104+40
 1325 00c4 B3F90030 		ldrsh	r3, [r3]
 1326 00c8 4FF4FA62 		mov	r2, #2000
 1327 00cc 02FB03F2 		mul	r2, r2, r3
 1328 00d0 4B49     		ldr	r1, .L104+20
 1329 00d2 B1F90010 		ldrsh	r1, [r1]
 1330 00d6 92FBF1F2 		sdiv	r2, r2, r1
 1331 00da 4A48     		ldr	r0, .L104+24
 1332 00dc 0260     		str	r2, [r0]
 610:Src/spi_MEncoder.c **** 				g_Encode_offset_EN = EN_0;
 1333              		.loc 1 610 0
 1334 00de 464A     		ldr	r2, .L104+12
 1335 00e0 1360     		str	r3, [r2]
 611:Src/spi_MEncoder.c **** 				g_Encode_offset = g_Encode_offset_EN*360/EN_360;
 1336              		.loc 1 611 0
 1337 00e2 494B     		ldr	r3, .L104+28
 1338 00e4 B3F90020 		ldrsh	r2, [r3]
 1339 00e8 484B     		ldr	r3, .L104+32
 1340 00ea 1A60     		str	r2, [r3]
 612:Src/spi_MEncoder.c **** 				g_CmdMap[MOT_EANGLE_OFFSET] = g_Encode_offset;
 1341              		.loc 1 612 0
 1342 00ec 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 38


 1343 00ee 4FF4B473 		mov	r3, #360
 1344 00f2 03FB02F3 		mul	r3, r3, r2
 1345 00f6 93FBF1F3 		sdiv	r3, r3, r1
 1346 00fa 454A     		ldr	r2, .L104+36
 1347 00fc 1360     		str	r3, [r2]
 613:Src/spi_MEncoder.c **** 			}
 1348              		.loc 1 613 0
 1349 00fe 1368     		ldr	r3, [r2]
 1350 0100 1BB2     		sxth	r3, r3
 1351 0102 3A4A     		ldr	r2, .L104
 1352 0104 A2F84C32 		strh	r3, [r2, #588]	@ movhi
 1353 0108 91E7     		b	.L87
 1354              	.L98:
 618:Src/spi_MEncoder.c **** 					g_ElectricAngle_sim = cnt_temp*EN_360/4000;//2s һȦ����ת�ٶ�
 1355              		.loc 1 618 0
 1356 010a 3E4A     		ldr	r2, .L104+24
 1357 010c 1368     		ldr	r3, [r2]
 1358 010e 0133     		adds	r3, r3, #1
 1359 0110 1360     		str	r3, [r2]
 619:Src/spi_MEncoder.c **** 					if(g_ElectricAngle_sim>EN_360)
 1360              		.loc 1 619 0
 1361 0112 3B4A     		ldr	r2, .L104+20
 1362 0114 B2F90010 		ldrsh	r1, [r2]
 1363 0118 01FB03F3 		mul	r3, r1, r3
 1364 011c 3E4A     		ldr	r2, .L104+44
 1365 011e 82FB0302 		smull	r0, r2, r2, r3
 1366 0122 DB17     		asrs	r3, r3, #31
 1367 0124 C3EB2223 		rsb	r3, r3, r2, asr #8
 1368 0128 334A     		ldr	r2, .L104+12
 1369 012a 1360     		str	r3, [r2]
 620:Src/spi_MEncoder.c **** 					{
 1370              		.loc 1 620 0
 1371 012c 1368     		ldr	r3, [r2]
 1372 012e 9942     		cmp	r1, r3
 1373 0130 02DA     		bge	.L90
 622:Src/spi_MEncoder.c **** 					}				
 1374              		.loc 1 622 0
 1375 0132 344B     		ldr	r3, .L104+24
 1376 0134 0022     		movs	r2, #0
 1377 0136 1A60     		str	r2, [r3]
 1378              	.L90:
 666:Src/spi_MEncoder.c **** 		}
 667:Src/spi_MEncoder.c **** 		sys_mot_test_last = g_CmdMap[SYS_MOT_TEST];			
 1379              		.loc 1 667 0
 1380 0138 2C4B     		ldr	r3, .L104
 1381 013a B3F81A22 		ldrh	r2, [r3, #538]
 1382 013e 2C4B     		ldr	r3, .L104+4
 1383 0140 1A80     		strh	r2, [r3]	@ movhi
 668:Src/spi_MEncoder.c **** }
 1384              		.loc 1 668 0
 1385 0142 7047     		bx	lr
 1386              	.L99:
 628:Src/spi_MEncoder.c **** 					{
 1387              		.loc 1 628 0
 1388 0144 2B4B     		ldr	r3, .L104+8
 1389 0146 B3F90020 		ldrsh	r2, [r3]
 1390 014a 2B4B     		ldr	r3, .L104+12
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 39


 1391 014c 1B68     		ldr	r3, [r3]
 1392 014e 9A42     		cmp	r2, r3
 1393 0150 17DC     		bgt	.L102
 635:Src/spi_MEncoder.c **** 						g_ElectricAngle_sim = cnt_temp*EN_360/2000;//2s һȦ����ת�ٶ�
 1394              		.loc 1 635 0
 1395 0152 2C4A     		ldr	r2, .L104+24
 1396 0154 1368     		ldr	r3, [r2]
 1397 0156 0133     		adds	r3, r3, #1
 1398 0158 1360     		str	r3, [r2]
 636:Src/spi_MEncoder.c **** 						if(g_ElectricAngle_sim>EN_360)
 1399              		.loc 1 636 0
 1400 015a 294A     		ldr	r2, .L104+20
 1401 015c B2F90010 		ldrsh	r1, [r2]
 1402 0160 01FB03F3 		mul	r3, r1, r3
 1403 0164 2C4A     		ldr	r2, .L104+44
 1404 0166 82FB0302 		smull	r0, r2, r2, r3
 1405 016a DB17     		asrs	r3, r3, #31
 1406 016c C3EBE213 		rsb	r3, r3, r2, asr #7
 1407 0170 214A     		ldr	r2, .L104+12
 1408 0172 1360     		str	r3, [r2]
 637:Src/spi_MEncoder.c **** 						{
 1409              		.loc 1 637 0
 1410 0174 1368     		ldr	r3, [r2]
 1411 0176 9942     		cmp	r1, r3
 1412 0178 DEDA     		bge	.L90
 639:Src/spi_MEncoder.c **** 						}
 1413              		.loc 1 639 0
 1414 017a 224B     		ldr	r3, .L104+24
 1415 017c 0022     		movs	r2, #0
 1416 017e 1A60     		str	r2, [r3]
 1417 0180 DAE7     		b	.L90
 1418              	.L102:
 630:Src/spi_MEncoder.c **** 						
 1419              		.loc 1 630 0
 1420 0182 214B     		ldr	r3, .L104+28
 1421 0184 B3F90020 		ldrsh	r2, [r3]
 1422 0188 1B4B     		ldr	r3, .L104+12
 1423 018a 1A60     		str	r2, [r3]
 1424 018c D4E7     		b	.L90
 1425              	.L100:
 645:Src/spi_MEncoder.c **** 					{
 1426              		.loc 1 645 0
 1427 018e 234B     		ldr	r3, .L104+48
 1428 0190 B3F90020 		ldrsh	r2, [r3]
 1429 0194 184B     		ldr	r3, .L104+12
 1430 0196 1B68     		ldr	r3, [r3]
 1431 0198 9A42     		cmp	r2, r3
 1432 019a 1ADB     		blt	.L103
 651:Src/spi_MEncoder.c **** 						g_ElectricAngle_sim = cnt_temp*EN_360/2000;//2s һȦ����ת�ٶ�
 1433              		.loc 1 651 0
 1434 019c 194A     		ldr	r2, .L104+24
 1435 019e 1368     		ldr	r3, [r2]
 1436 01a0 013B     		subs	r3, r3, #1
 1437 01a2 1360     		str	r3, [r2]
 652:Src/spi_MEncoder.c **** 						if(g_ElectricAngle_sim<EN_0)
 1438              		.loc 1 652 0
 1439 01a4 164A     		ldr	r2, .L104+20
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 40


 1440 01a6 B2F90020 		ldrsh	r2, [r2]
 1441 01aa 03FB02F3 		mul	r3, r3, r2
 1442 01ae 1A4A     		ldr	r2, .L104+44
 1443 01b0 82FB0312 		smull	r1, r2, r2, r3
 1444 01b4 DB17     		asrs	r3, r3, #31
 1445 01b6 C3EBE213 		rsb	r3, r3, r2, asr #7
 1446 01ba 0F4A     		ldr	r2, .L104+12
 1447 01bc 1360     		str	r3, [r2]
 653:Src/spi_MEncoder.c **** 						{
 1448              		.loc 1 653 0
 1449 01be 124B     		ldr	r3, .L104+28
 1450 01c0 B3F90010 		ldrsh	r1, [r3]
 1451 01c4 1368     		ldr	r3, [r2]
 1452 01c6 9942     		cmp	r1, r3
 1453 01c8 B6DD     		ble	.L90
 655:Src/spi_MEncoder.c **** 						}
 1454              		.loc 1 655 0
 1455 01ca 0E4B     		ldr	r3, .L104+24
 1456 01cc 0022     		movs	r2, #0
 1457 01ce 1A60     		str	r2, [r3]
 1458 01d0 B2E7     		b	.L90
 1459              	.L103:
 647:Src/spi_MEncoder.c **** 					}
 1460              		.loc 1 647 0
 1461 01d2 0D4B     		ldr	r3, .L104+28
 1462 01d4 B3F90020 		ldrsh	r2, [r3]
 1463 01d8 074B     		ldr	r3, .L104+12
 1464 01da 1A60     		str	r2, [r3]
 1465 01dc ACE7     		b	.L90
 1466              	.L101:
 661:Src/spi_MEncoder.c **** 		}
 1467              		.loc 1 661 0
 1468 01de 054B     		ldr	r3, .L104+8
 1469 01e0 B3F90020 		ldrsh	r2, [r3]
 1470 01e4 044B     		ldr	r3, .L104+12
 1471 01e6 1A60     		str	r2, [r3]
 1472 01e8 A6E7     		b	.L90
 1473              	.L105:
 1474 01ea 00BF     		.align	2
 1475              	.L104:
 1476 01ec 00000000 		.word	g_CmdMap
 1477 01f0 00000000 		.word	.LANCHOR11
 1478 01f4 00000000 		.word	EN_30
 1479 01f8 00000000 		.word	g_ElectricAngle_sim
 1480 01fc 00000000 		.word	EN_60
 1481 0200 00000000 		.word	EN_360
 1482 0204 00000000 		.word	.LANCHOR12
 1483 0208 00000000 		.word	EN_0
 1484 020c 00000000 		.word	.LANCHOR10
 1485 0210 00000000 		.word	.LANCHOR13
 1486 0214 00000000 		.word	EN_300
 1487 0218 D34D6210 		.word	274877907
 1488 021c 00000000 		.word	EN_330
 1489              		.cfi_endproc
 1490              	.LFE341:
 1492              		.section	.text.Encode_Single_to_Multi_R,"ax",%progbits
 1493              		.align	1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 41


 1494              		.global	Encode_Single_to_Multi_R
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1498              		.fpu fpv4-sp-d16
 1500              	Encode_Single_to_Multi_R:
 1501              	.LFB342:
 669:Src/spi_MEncoder.c **** 
 670:Src/spi_MEncoder.c **** 	volatile s32 flag_first_exe = 0;
 671:Src/spi_MEncoder.c **** void Encode_Single_to_Multi_R(u8 flag_reverse,u8 flag_cycle,s32 single_value_raw,s32* p_multi_value
 672:Src/spi_MEncoder.c **** {
 1502              		.loc 1 672 0
 1503              		.cfi_startproc
 1504              		@ args = 8, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 1507              	.LVL73:
 1508 0000 F0B4     		push	{r4, r5, r6, r7}
 1509              	.LCFI14:
 1510              		.cfi_def_cfa_offset 16
 1511              		.cfi_offset 4, -16
 1512              		.cfi_offset 5, -12
 1513              		.cfi_offset 6, -8
 1514              		.cfi_offset 7, -4
 1515 0002 049D     		ldr	r5, [sp, #16]
 1516              	.LVL74:
 673:Src/spi_MEncoder.c **** 	static s32 single_value_last_raw = 0;
 674:Src/spi_MEncoder.c **** 
 675:Src/spi_MEncoder.c **** 	s32 single_value = 0;
 676:Src/spi_MEncoder.c **** 	s32 single_value_last = 0;
 677:Src/spi_MEncoder.c **** 	s32 inc = 0;
 678:Src/spi_MEncoder.c **** 	s32 mod_half = 0; 
 679:Src/spi_MEncoder.c **** 	if(flag_first_exe == 0)
 1517              		.loc 1 679 0
 1518 0004 194C     		ldr	r4, .L121
 1519 0006 2468     		ldr	r4, [r4]
 1520 0008 E4B1     		cbz	r4, .L117
 680:Src/spi_MEncoder.c **** 	{
 681:Src/spi_MEncoder.c **** 		flag_first_exe = 1;
 682:Src/spi_MEncoder.c **** 		single_value_last_raw = single_value_raw;
 683:Src/spi_MEncoder.c **** 		return;
 684:Src/spi_MEncoder.c **** 	}
 685:Src/spi_MEncoder.c **** 	if(flag_reverse == 1)
 1521              		.loc 1 685 0
 1522 000a 0128     		cmp	r0, #1
 1523 000c 21D0     		beq	.L118
 1524              	.LVL75:
 686:Src/spi_MEncoder.c **** 	{
 687:Src/spi_MEncoder.c **** 		single_value = mod_single - single_value_raw;
 688:Src/spi_MEncoder.c **** 		single_value_last = mod_single - single_value_last_raw;
 689:Src/spi_MEncoder.c **** 	}
 690:Src/spi_MEncoder.c **** 	else
 691:Src/spi_MEncoder.c **** 	{
 692:Src/spi_MEncoder.c **** 		single_value = single_value_raw;
 693:Src/spi_MEncoder.c **** 		single_value_last = single_value_last_raw;	
 1525              		.loc 1 693 0
 1526 000e 184C     		ldr	r4, .L121+4
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 42


 1527 0010 2468     		ldr	r4, [r4]
 1528              	.LVL76:
 1529              	.L110:
 694:Src/spi_MEncoder.c **** 	}
 695:Src/spi_MEncoder.c **** 	inc = single_value - single_value_last;
 1530              		.loc 1 695 0
 1531 0012 141B     		subs	r4, r2, r4
 1532              	.LVL77:
 696:Src/spi_MEncoder.c **** 	mod_half = (mod_single>>1)-1;
 1533              		.loc 1 696 0
 1534 0014 6E10     		asrs	r6, r5, #1
 1535 0016 771E     		subs	r7, r6, #1
 1536              	.LVL78:
 697:Src/spi_MEncoder.c **** 	if(inc>mod_half)//���� ��ת
 1537              		.loc 1 697 0
 1538 0018 BC42     		cmp	r4, r7
 1539 001a 00DD     		ble	.L111
 698:Src/spi_MEncoder.c **** 	{
 699:Src/spi_MEncoder.c **** 		inc = inc - mod_single;
 1540              		.loc 1 699 0
 1541 001c 641B     		subs	r4, r4, r5
 1542              	.LVL79:
 1543              	.L111:
 700:Src/spi_MEncoder.c **** 	}
 701:Src/spi_MEncoder.c **** 	if(inc<-mod_half)//���� ��ת
 1544              		.loc 1 701 0
 1545 001e C6F10106 		rsb	r6, r6, #1
 1546 0022 A642     		cmp	r6, r4
 1547 0024 00DD     		ble	.L112
 702:Src/spi_MEncoder.c **** 	{
 703:Src/spi_MEncoder.c **** 		inc = inc + mod_single;
 1548              		.loc 1 703 0
 1549 0026 2C44     		add	r4, r4, r5
 1550              	.LVL80:
 1551              	.L112:
 704:Src/spi_MEncoder.c **** 	}
 705:Src/spi_MEncoder.c **** 	single_value_last = single_value;
 706:Src/spi_MEncoder.c **** 	if(flag_reverse == 1)
 1552              		.loc 1 706 0
 1553 0028 0128     		cmp	r0, #1
 1554 002a 17D0     		beq	.L119
 707:Src/spi_MEncoder.c **** 	{
 708:Src/spi_MEncoder.c **** 		single_value_last_raw = mod_single - single_value_last;
 709:Src/spi_MEncoder.c **** 	}
 710:Src/spi_MEncoder.c **** 	else
 711:Src/spi_MEncoder.c **** 	{
 712:Src/spi_MEncoder.c **** 		single_value_last_raw = single_value_last;	
 1555              		.loc 1 712 0
 1556 002c 1048     		ldr	r0, .L121+4
 1557              	.LVL81:
 1558 002e 0260     		str	r2, [r0]
 1559              	.LVL82:
 1560              	.L114:
 713:Src/spi_MEncoder.c **** 	}
 714:Src/spi_MEncoder.c **** 	if(flag_cycle == 0)
 1561              		.loc 1 714 0
 1562 0030 C1B1     		cbz	r1, .L120
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 43


 715:Src/spi_MEncoder.c **** 	{
 716:Src/spi_MEncoder.c **** 		*p_multi_value = *p_multi_value+inc;
 717:Src/spi_MEncoder.c **** 		return;
 718:Src/spi_MEncoder.c **** 	}
 719:Src/spi_MEncoder.c **** 	*p_multi_value = *p_multi_value%mod_multi;
 1563              		.loc 1 719 0
 1564 0032 1968     		ldr	r1, [r3]
 1565              	.LVL83:
 1566 0034 059A     		ldr	r2, [sp, #20]
 1567 0036 91FBF2F2 		sdiv	r2, r1, r2
 1568 003a 0598     		ldr	r0, [sp, #20]
 1569 003c 00FB1212 		mls	r2, r0, r2, r1
 1570 0040 1A60     		str	r2, [r3]
 1571 0042 04E0     		b	.L106
 1572              	.LVL84:
 1573              	.L117:
 681:Src/spi_MEncoder.c **** 		single_value_last_raw = single_value_raw;
 1574              		.loc 1 681 0
 1575 0044 094B     		ldr	r3, .L121
 1576              	.LVL85:
 1577 0046 0121     		movs	r1, #1
 1578              	.LVL86:
 1579 0048 1960     		str	r1, [r3]
 682:Src/spi_MEncoder.c **** 		return;
 1580              		.loc 1 682 0
 1581 004a 094B     		ldr	r3, .L121+4
 1582 004c 1A60     		str	r2, [r3]
 1583              	.LVL87:
 1584              	.L106:
 720:Src/spi_MEncoder.c **** }
 1585              		.loc 1 720 0
 1586 004e F0BC     		pop	{r4, r5, r6, r7}
 1587              	.LCFI15:
 1588              		.cfi_remember_state
 1589              		.cfi_restore 7
 1590              		.cfi_restore 6
 1591              		.cfi_restore 5
 1592              		.cfi_restore 4
 1593              		.cfi_def_cfa_offset 0
 1594              	.LVL88:
 1595 0050 7047     		bx	lr
 1596              	.LVL89:
 1597              	.L118:
 1598              	.LCFI16:
 1599              		.cfi_restore_state
 687:Src/spi_MEncoder.c **** 		single_value_last = mod_single - single_value_last_raw;
 1600              		.loc 1 687 0
 1601 0052 AA1A     		subs	r2, r5, r2
 1602              	.LVL90:
 688:Src/spi_MEncoder.c **** 	}
 1603              		.loc 1 688 0
 1604 0054 064C     		ldr	r4, .L121+4
 1605 0056 2468     		ldr	r4, [r4]
 1606 0058 2C1B     		subs	r4, r5, r4
 1607              	.LVL91:
 1608 005a DAE7     		b	.L110
 1609              	.LVL92:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 44


 1610              	.L119:
 708:Src/spi_MEncoder.c **** 	}
 1611              		.loc 1 708 0
 1612 005c AD1A     		subs	r5, r5, r2
 1613 005e 044A     		ldr	r2, .L121+4
 1614              	.LVL93:
 1615 0060 1560     		str	r5, [r2]
 1616 0062 E5E7     		b	.L114
 1617              	.LVL94:
 1618              	.L120:
 716:Src/spi_MEncoder.c **** 		return;
 1619              		.loc 1 716 0
 1620 0064 1A68     		ldr	r2, [r3]
 1621 0066 1444     		add	r4, r4, r2
 1622              	.LVL95:
 1623 0068 1C60     		str	r4, [r3]
 717:Src/spi_MEncoder.c **** 	}
 1624              		.loc 1 717 0
 1625 006a F0E7     		b	.L106
 1626              	.L122:
 1627              		.align	2
 1628              	.L121:
 1629 006c 00000000 		.word	.LANCHOR14
 1630 0070 00000000 		.word	.LANCHOR15
 1631              		.cfi_endproc
 1632              	.LFE342:
 1634              		.global	flag_first_exe
 1635              		.global	g_ElectricAngle_add
 1636              		.global	s_Encoder_Inc
 1637              		.global	g_ElectricAngle_15bit_Last
 1638              		.global	estimated_phase_integ_int_1
 1639              		.global	estimated_phase_integ_int
 1640              		.global	pll_pid_integ_int
 1641              		.global	temp_spd_filed
 1642              		.global	temp_spd
 1643              		.global	temp_spd_index
 1644              		.global	g_measured_phase
 1645              		.global	estimated_SPD_filterd
 1646              		.global	pll_pid_out
 1647              		.global	pll_pid_integ
 1648              		.global	pll_estimated_spd
 1649              		.global	pll_estimated_phase
 1650              		.global	start_speed_sample
 1651              		.global	g_CurrentSpeed
 1652              		.global	s_ForecastCnt1
 1653              		.global	s_IntNum1
 1654              		.global	speed_MCal
 1655              		.global	speed_TCal
 1656              		.global	speed_def
 1657              		.global	s_ForecastTimeAdd1
 1658              		.global	s_SpeedTimeAdd1
 1659              		.global	Encoder_Inc
 1660              		.global	Encoder_Last
 1661              		.global	Encoder_Current
 1662              		.comm	hspi3,100,4
 1663              		.comm	htim2,76,4
 1664              		.global	tim4_cnt
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 45


 1665              		.global	tim3_cnt
 1666              		.global	g_Encode_offset_EN
 1667              		.global	g_Encode_offset
 1668              		.global	Num_Turns
 1669              		.global	g_Encode_Inc
 1670              		.global	g_Encode_AbsPos_Last
 1671              		.global	g_Encode_AbsPos
 1672              		.global	g_MEncode
 1673              		.global	EncoderAB_PulseWidth_Array
 1674              		.section	.bss.EncoderAB_PulseWidth_Array,"aw",%nobits
 1675              		.align	2
 1678              	EncoderAB_PulseWidth_Array:
 1679 0000 00000000 		.space	32
 1679      00000000 
 1679      00000000 
 1679      00000000 
 1679      00000000 
 1680              		.section	.bss.Encoder_Current,"aw",%nobits
 1681              		.align	2
 1684              	Encoder_Current:
 1685 0000 00000000 		.space	4
 1686              		.section	.bss.Encoder_Inc,"aw",%nobits
 1687              		.align	2
 1690              	Encoder_Inc:
 1691 0000 00000000 		.space	4
 1692              		.section	.bss.Encoder_Last,"aw",%nobits
 1693              		.align	2
 1696              	Encoder_Last:
 1697 0000 00000000 		.space	4
 1698              		.section	.bss.Num_Turns,"aw",%nobits
 1699              		.align	2
 1702              	Num_Turns:
 1703 0000 00000000 		.space	4
 1704              		.section	.bss.cnt.11971,"aw",%nobits
 1705              		.align	2
 1706              		.set	.LANCHOR0,. + 0
 1709              	cnt.11971:
 1710 0000 00000000 		.space	4
 1711              		.section	.bss.cnt_temp.11984,"aw",%nobits
 1712              		.align	2
 1713              		.set	.LANCHOR12,. + 0
 1716              	cnt_temp.11984:
 1717 0000 00000000 		.space	4
 1718              		.section	.bss.count1.11978,"aw",%nobits
 1719              		.align	2
 1720              		.set	.LANCHOR9,. + 0
 1723              	count1.11978:
 1724 0000 00000000 		.space	4
 1725              		.section	.bss.estimated_SPD_filterd,"aw",%nobits
 1726              		.align	2
 1727              		.set	.LANCHOR5,. + 0
 1730              	estimated_SPD_filterd:
 1731 0000 00000000 		.space	4
 1732              		.section	.bss.estimated_phase_integ_int,"aw",%nobits
 1733              		.align	2
 1734              		.set	.LANCHOR3,. + 0
 1737              	estimated_phase_integ_int:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 46


 1738 0000 00000000 		.space	4
 1739              		.section	.bss.estimated_phase_integ_int_1,"aw",%nobits
 1740              		.align	2
 1743              	estimated_phase_integ_int_1:
 1744 0000 00000000 		.space	4
 1745              		.section	.bss.flag_first_exe,"aw",%nobits
 1746              		.align	2
 1747              		.set	.LANCHOR14,. + 0
 1750              	flag_first_exe:
 1751 0000 00000000 		.space	4
 1752              		.section	.bss.g_CurrentSpeed,"aw",%nobits
 1753              		.align	2
 1756              	g_CurrentSpeed:
 1757 0000 00000000 		.space	4
 1758              		.section	.bss.g_ElectricAngle_15bit_Last,"aw",%nobits
 1759              		.align	2
 1762              	g_ElectricAngle_15bit_Last:
 1763 0000 00000000 		.space	4
 1764              		.section	.bss.g_ElectricAngle_add,"aw",%nobits
 1765              		.align	2
 1768              	g_ElectricAngle_add:
 1769 0000 00000000 		.space	4
 1770              		.section	.bss.g_Encode_AbsPos,"aw",%nobits
 1771              		.align	2
 1774              	g_Encode_AbsPos:
 1775 0000 00000000 		.space	4
 1776              		.section	.bss.g_Encode_AbsPos_Last,"aw",%nobits
 1777              		.align	2
 1780              	g_Encode_AbsPos_Last:
 1781 0000 00000000 		.space	4
 1782              		.section	.bss.g_Encode_Inc,"aw",%nobits
 1783              		.align	2
 1786              	g_Encode_Inc:
 1787 0000 00000000 		.space	4
 1788              		.section	.bss.g_Encode_offset,"aw",%nobits
 1789              		.align	2
 1790              		.set	.LANCHOR13,. + 0
 1793              	g_Encode_offset:
 1794 0000 00000000 		.space	4
 1795              		.section	.bss.g_Encode_offset_EN,"aw",%nobits
 1796              		.align	2
 1797              		.set	.LANCHOR10,. + 0
 1800              	g_Encode_offset_EN:
 1801 0000 00000000 		.space	4
 1802              		.section	.bss.g_MEncode,"aw",%nobits
 1803              		.align	2
 1806              	g_MEncode:
 1807 0000 00000000 		.space	4
 1808              		.section	.bss.g_measured_phase,"aw",%nobits
 1809              		.align	2
 1810              		.set	.LANCHOR8,. + 0
 1813              	g_measured_phase:
 1814 0000 00000000 		.space	4
 1815              		.section	.bss.pll_estimated_phase,"aw",%nobits
 1816              		.align	2
 1819              	pll_estimated_phase:
 1820 0000 00000000 		.space	4
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 47


 1821              		.section	.bss.pll_estimated_spd,"aw",%nobits
 1822              		.align	2
 1825              	pll_estimated_spd:
 1826 0000 00000000 		.space	4
 1827              		.section	.bss.pll_pid_integ,"aw",%nobits
 1828              		.align	2
 1829              		.set	.LANCHOR2,. + 0
 1832              	pll_pid_integ:
 1833 0000 00000000 		.space	4
 1834              		.section	.bss.pll_pid_integ_int,"aw",%nobits
 1835              		.align	2
 1836              		.set	.LANCHOR1,. + 0
 1839              	pll_pid_integ_int:
 1840 0000 00000000 		.space	4
 1841              		.section	.bss.pll_pid_out,"aw",%nobits
 1842              		.align	2
 1845              	pll_pid_out:
 1846 0000 00000000 		.space	4
 1847              		.section	.bss.s_Encoder_Inc,"aw",%nobits
 1848              		.align	2
 1851              	s_Encoder_Inc:
 1852 0000 00000000 		.space	4
 1853              		.section	.bss.s_ForecastTimeAdd1,"aw",%nobits
 1854              		.align	2
 1857              	s_ForecastTimeAdd1:
 1858 0000 00000000 		.space	4
 1859              		.section	.bss.s_IntNum1,"aw",%nobits
 1860              		.align	2
 1863              	s_IntNum1:
 1864 0000 00000000 		.space	4
 1865              		.section	.bss.s_SpeedTimeAdd1,"aw",%nobits
 1866              		.align	2
 1869              	s_SpeedTimeAdd1:
 1870 0000 00000000 		.space	4
 1871              		.section	.bss.single_value_last_raw.11994,"aw",%nobits
 1872              		.align	2
 1873              		.set	.LANCHOR15,. + 0
 1876              	single_value_last_raw.11994:
 1877 0000 00000000 		.space	4
 1878              		.section	.bss.speed_MCal,"aw",%nobits
 1879              		.align	2
 1882              	speed_MCal:
 1883 0000 00000000 		.space	4
 1884              		.section	.bss.speed_TCal,"aw",%nobits
 1885              		.align	2
 1888              	speed_TCal:
 1889 0000 00000000 		.space	4
 1890              		.section	.bss.start_speed_sample,"aw",%nobits
 1891              		.align	2
 1894              	start_speed_sample:
 1895 0000 00000000 		.space	4
 1896              		.section	.bss.sys_mot_test_last.11983,"aw",%nobits
 1897              		.align	1
 1898              		.set	.LANCHOR11,. + 0
 1901              	sys_mot_test_last.11983:
 1902 0000 0000     		.space	2
 1903              		.section	.bss.temp_spd,"aw",%nobits
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 48


 1904              		.align	2
 1905              		.set	.LANCHOR7,. + 0
 1908              	temp_spd:
 1909 0000 00000000 		.space	96
 1909      00000000 
 1909      00000000 
 1909      00000000 
 1909      00000000 
 1910              		.section	.bss.temp_spd_filed,"aw",%nobits
 1911              		.align	2
 1912              		.set	.LANCHOR6,. + 0
 1915              	temp_spd_filed:
 1916 0000 00000000 		.space	96
 1916      00000000 
 1916      00000000 
 1916      00000000 
 1916      00000000 
 1917              		.section	.bss.temp_spd_index,"aw",%nobits
 1918              		.align	2
 1919              		.set	.LANCHOR4,. + 0
 1922              	temp_spd_index:
 1923 0000 00000000 		.space	4
 1924              		.section	.bss.tim3_cnt,"aw",%nobits
 1925              		.align	2
 1928              	tim3_cnt:
 1929 0000 00000000 		.space	4
 1930              		.section	.bss.tim4_cnt,"aw",%nobits
 1931              		.align	2
 1934              	tim4_cnt:
 1935 0000 00000000 		.space	4
 1936              		.section	.data.s_ForecastCnt1,"aw",%progbits
 1937              		.align	2
 1940              	s_ForecastCnt1:
 1941 0000 01000000 		.word	1
 1942              		.section	.data.speed_def,"aw",%progbits
 1943              		.align	2
 1946              	speed_def:
 1947 0000 40000000 		.word	64
 1948 0004 00000000 		.word	0
 1949              		.text
 1950              	.Letext0:
 1951              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1952              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1953              		.file 4 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 1954              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1955              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 1956              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1957              		.file 8 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1958              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1959              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 1960              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1961              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 1962              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 1963              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h"
 1964              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1965              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 1966              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 49


 1967              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1968              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-ea
 1969              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1970              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1971              		.file 22 "Inc/uart.h"
 1972              		.file 23 "Inc/pwm.h"
 1973              		.file 24 "Inc/spi_MEncoder.h"
 1974              		.file 25 "Inc/adc.h"
 1975              		.file 26 "Inc/stm32_math_sin.h"
 1976              		.file 27 "Inc/pid.h"
 1977              		.file 28 "Inc/profile_joint.h"
 1978              		.file 29 "Inc/icmu.h"
 1979              		.file 30 "Inc/performance_test.h"
 1980              		.file 31 "Inc/global.h"
 1981              		.file 32 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 50


DEFINED SYMBOLS
                            *ABS*:00000000 spi_MEncoder.c
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:18     .text.HAL_SPI_MspInit:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:25     .text.HAL_SPI_MspInit:00000000 HAL_SPI_MspInit
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:311    .text.HAL_SPI_MspInit:00000180 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:325    .text.HAL_SPI_MspDeInit:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:332    .text.HAL_SPI_MspDeInit:00000000 HAL_SPI_MspDeInit
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:381    .text.HAL_SPI_MspDeInit:00000038 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:389    .text.MX_SPI3_Init:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:396    .text.MX_SPI3_Init:00000000 MX_SPI3_Init
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:467    .text.MX_SPI3_Init:00000054 $d
                            *COM*:00000064 hspi3
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:474    .text.MX_TIM2_Init:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:481    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:690    .text.MX_TIM2_Init:000000fc $d
                            *COM*:0000004c htim2
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:696    .text.hall_Configuration:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:703    .text.hall_Configuration:00000000 hall_Configuration
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:733    .text.hall_Configuration:00000020 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:738    .text.MTPro:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:745    .text.MTPro:00000000 MTPro
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:759    .text.Pll_phase:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:766    .text.Pll_phase:00000000 Pll_phase
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1014   .text.Pll_phase:000001dc $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1037   .text.GetElectricAngle:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1044   .text.GetElectricAngle:00000000 GetElectricAngle
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1199   .text.GetElectricAngle:000000f8 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1216   .text.sim_ElectricAngle:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1223   .text.sim_ElectricAngle:00000000 sim_ElectricAngle
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1476   .text.sim_ElectricAngle:000001ec $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1493   .text.Encode_Single_to_Multi_R:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1500   .text.Encode_Single_to_Multi_R:00000000 Encode_Single_to_Multi_R
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1629   .text.Encode_Single_to_Multi_R:0000006c $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1750   .bss.flag_first_exe:00000000 flag_first_exe
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1768   .bss.g_ElectricAngle_add:00000000 g_ElectricAngle_add
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1851   .bss.s_Encoder_Inc:00000000 s_Encoder_Inc
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1762   .bss.g_ElectricAngle_15bit_Last:00000000 g_ElectricAngle_15bit_Last
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1743   .bss.estimated_phase_integ_int_1:00000000 estimated_phase_integ_int_1
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1737   .bss.estimated_phase_integ_int:00000000 estimated_phase_integ_int
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1839   .bss.pll_pid_integ_int:00000000 pll_pid_integ_int
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1915   .bss.temp_spd_filed:00000000 temp_spd_filed
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1908   .bss.temp_spd:00000000 temp_spd
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1922   .bss.temp_spd_index:00000000 temp_spd_index
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1813   .bss.g_measured_phase:00000000 g_measured_phase
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1730   .bss.estimated_SPD_filterd:00000000 estimated_SPD_filterd
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1845   .bss.pll_pid_out:00000000 pll_pid_out
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1832   .bss.pll_pid_integ:00000000 pll_pid_integ
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1825   .bss.pll_estimated_spd:00000000 pll_estimated_spd
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1819   .bss.pll_estimated_phase:00000000 pll_estimated_phase
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1894   .bss.start_speed_sample:00000000 start_speed_sample
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1756   .bss.g_CurrentSpeed:00000000 g_CurrentSpeed
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1940   .data.s_ForecastCnt1:00000000 s_ForecastCnt1
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1863   .bss.s_IntNum1:00000000 s_IntNum1
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1882   .bss.speed_MCal:00000000 speed_MCal
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1888   .bss.speed_TCal:00000000 speed_TCal
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1946   .data.speed_def:00000000 speed_def
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1857   .bss.s_ForecastTimeAdd1:00000000 s_ForecastTimeAdd1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 51


C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1869   .bss.s_SpeedTimeAdd1:00000000 s_SpeedTimeAdd1
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1690   .bss.Encoder_Inc:00000000 Encoder_Inc
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1696   .bss.Encoder_Last:00000000 Encoder_Last
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1684   .bss.Encoder_Current:00000000 Encoder_Current
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1934   .bss.tim4_cnt:00000000 tim4_cnt
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1928   .bss.tim3_cnt:00000000 tim3_cnt
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1800   .bss.g_Encode_offset_EN:00000000 g_Encode_offset_EN
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1793   .bss.g_Encode_offset:00000000 g_Encode_offset
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1702   .bss.Num_Turns:00000000 Num_Turns
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1786   .bss.g_Encode_Inc:00000000 g_Encode_Inc
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1780   .bss.g_Encode_AbsPos_Last:00000000 g_Encode_AbsPos_Last
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1774   .bss.g_Encode_AbsPos:00000000 g_Encode_AbsPos
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1806   .bss.g_MEncode:00000000 g_MEncode
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1678   .bss.EncoderAB_PulseWidth_Array:00000000 EncoderAB_PulseWidth_Array
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1675   .bss.EncoderAB_PulseWidth_Array:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1681   .bss.Encoder_Current:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1687   .bss.Encoder_Inc:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1693   .bss.Encoder_Last:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1699   .bss.Num_Turns:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1705   .bss.cnt.11971:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1709   .bss.cnt.11971:00000000 cnt.11971
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1712   .bss.cnt_temp.11984:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1716   .bss.cnt_temp.11984:00000000 cnt_temp.11984
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1719   .bss.count1.11978:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1723   .bss.count1.11978:00000000 count1.11978
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1726   .bss.estimated_SPD_filterd:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1733   .bss.estimated_phase_integ_int:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1740   .bss.estimated_phase_integ_int_1:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1746   .bss.flag_first_exe:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1753   .bss.g_CurrentSpeed:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1759   .bss.g_ElectricAngle_15bit_Last:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1765   .bss.g_ElectricAngle_add:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1771   .bss.g_Encode_AbsPos:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1777   .bss.g_Encode_AbsPos_Last:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1783   .bss.g_Encode_Inc:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1789   .bss.g_Encode_offset:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1796   .bss.g_Encode_offset_EN:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1803   .bss.g_MEncode:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1809   .bss.g_measured_phase:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1816   .bss.pll_estimated_phase:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1822   .bss.pll_estimated_spd:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1828   .bss.pll_pid_integ:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1835   .bss.pll_pid_integ_int:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1842   .bss.pll_pid_out:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1848   .bss.s_Encoder_Inc:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1854   .bss.s_ForecastTimeAdd1:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1860   .bss.s_IntNum1:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1866   .bss.s_SpeedTimeAdd1:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1872   .bss.single_value_last_raw.11994:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1876   .bss.single_value_last_raw.11994:00000000 single_value_last_raw.11994
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1879   .bss.speed_MCal:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1885   .bss.speed_TCal:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1891   .bss.start_speed_sample:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1897   .bss.sys_mot_test_last.11983:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1901   .bss.sys_mot_test_last.11983:00000000 sys_mot_test_last.11983
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1904   .bss.temp_spd:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1911   .bss.temp_spd_filed:00000000 $d
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccR73z5b.s 			page 52


C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1918   .bss.temp_spd_index:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1925   .bss.tim3_cnt:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1931   .bss.tim4_cnt:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1937   .data.s_ForecastCnt1:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccR73z5b.s:1943   .data.speed_def:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_DMA_Init
Error_Handler
hdma_spi1_rx
hdma_spi1_tx
HAL_GPIO_DeInit
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_IC_Init
HAL_TIMEx_MasterConfigSynchronization
TIM_TI1_SetConfig
HAL_TIM_IC_ConfigChannel
HAL_TIM_ConfigTI1Input
TIM_CCxChannelCmd
g_CmdMap
g_MechanicsAngle_15bit
g_MechanicsAngle_15bit_last
EN_360
g_ElectricAngle_15bit_Raw
g_ElectricAngle_act
g_ElectricAngle
EN_0
g_ElectricAngle_15bit
g_ElectricAngle_sim
EN_30
EN_60
EN_300
EN_330
